{"version":3,"sources":["screens/character/assets/alfie-unselected.svg","screens/character/assets/amelia-unselected.svg","screens/welcome/assets/plane-vector.svg","screens/welcome/assets/icon.svg","screens/playerInfo/assets/level-active-easy.svg","screens/playerInfo/assets/level-active-medium.svg","screens/playerInfo/assets/level-active-hard.svg","components/backButton/assets/back-button.svg","images/small-text.svg","images/medium-text.svg","images/large-text.svg","images/voiceover-icon.svg","images/voulme-icon.svg","screens/character/assets/alfie-selected.svg","screens/character/assets/amelia-selected.svg","screens/ready/assets/plane-vector.svg","components/map/assets/game-icon.svg","components/map/assets/fact-icon.svg","components/map/assets/fact-complete.svg","components/map/assets/picture-incomplete.svg","components/map/assets/picture-complete.svg","components/map/assets/main-building.svg","screens/gameMenu/assets/user-icon.svg","screens/gameMenu/assets/settings-icon.svg","screens/gameMenu/assets/guide-button.svg","screens/gameMenu/assets/cabibrate-icon.svg","screens/gameMenu/assets/16/close-icon.svg","components/quiz/assets/hint-button.svg","components/quiz/assets/user-icon.svg","components/fact/facts/sectionOne/assets/factOne.svg","components/fact/facts/sectionOne/assets/factTwo.svg","components/fact/facts/sectionOne/assets/factThree.svg","components/fact/facts/sectionTwo/assets/factOne.svg","components/fact/facts/sectionTwo/assets/factTwo.svg","components/fact/facts/sectionTwo/assets/factThree.svg","components/fact/facts/sectionThree/assets/factOne.svg","components/fact/facts/sectionFour/assets/factOne.svg","components/fact/facts/sectionFour/assets/factTwo.svg","components/fact/facts/sectionFour/assets/factThree.svg","components/fact/facts/sectionFive/assets/factOne.svg","components/fact/facts/sectionSix/assets/factOne.svg","components/fact/facts/sectionSix/assets/factTwo.svg","components/fact/facts/sectionSeven/assets/factOne.svg","components/fact/facts/sectionSeven/assets/factTwo.svg","components/fact/facts/sectionSeven/assets/factThree.svg","components/fact/facts/sectionNine/assets/factOne.svg","components/map/assets/quiz-locked.svg","screens/gameGuide/assets/guide-header.svg","screens/gameGuide/assets/alfie-character.svg","screens/gameGuide/assets/cabibrate-icon.svg","screens/welcome/assets/email-info.svg","images/settings-icon.svg","screens/gameMenu/assets/char-stats-bg.svg","screens/welcome/welcome.js","components/backButton/back.js","screens/playerInfo/playerInfo.js","screens/accessibility/accessibility.js","screens/character/character.js","screens/ready/ready.js","screens/termsConditions/termsConditions.js","components/map/map.jsx","screens/gameMenu/gameMenu.js","components/fact/factFormat.js","components/quiz/quizStructure/quizStructure.js","components/quiz/quizzes/sectionOne/sectionOneQuiz.js","components/quiz/quizzes/sectionTwo/sectionTwoQuiz.js","components/fact/facts/sectionOne/sectionOneFact.js","components/quiz/quizzes/sectionThree/sectionThreeQuiz.js","components/quiz/quizzes/sectionFour/sectionFourQuiz.js","components/quiz/quizzes/sectionFive/sectionFiveQuiz.js","components/quiz/quizzes/sectionSeven/sectionSevenQuiz.js","components/quiz/quizzes/sectionNine/sectionNineQuiz.js","components/quiz/quizzes/sectionSix/sectionSixQuiz.js","components/quiz/quizzes/sectionEight/sectionEightQuiz.js","components/fact/facts/sectionTwo/sectionTwoFact.js","components/fact/facts/sectionThree/sectionThreeFact.js","components/fact/facts/sectionFour/sectionFourFact.js","components/fact/facts/sectionFive/sectionFiveFact.js","components/fact/facts/sectionSix/sectionSixFact.js","components/fact/facts/sectionSeven/sectionSevenFact.js","components/fact/facts/sectionNine/sectionNineFact.js","components/fact/facts/sectionEight/sectionEightFact.js","screens/gameGuide/gameGuide.js","components/picture/microservices/imagePreview.js","components/picture/pictures/sectionOnePic.js","App.js","serviceWorker.js","index.js","images/left-close.svg","components/map/assets/quiz-icon.svg","components/map/assets/quiz-complete.svg","components/picture/assets/helmet.png","screens/playerInfo/assets/lavel-inactive-easy.svg","screens/playerInfo/assets/lavel-inactive-medium.svg","screens/playerInfo/assets/level-inactive-hard.svg"],"names":["module","exports","Welcome","state","isActive","emailAddress","emailAddressList","this","setState","Axios","get","then","response","data","getUserEmail","className","onClick","toggleChange","src","CloseBtn","alt","PlaneVector","style","fontSize","textAlign","for","type","id","placeholder","onChange","e","target","value","to","post","email_address","alert","Component","Back","history","useHistory","goBack","BackImg","PlayerInfo","EasySelected","MediumSelected","HardSelected","required","selectEasy","EasyInactive","selectMedium","MediumInactive","selectHard","HardInactive","EasyActive","MediumActive","HardActive","Accessibility","SmallText","MediumText","LargeText","SoundIcon","VoiceOver","Character","AlfieSelected","AmeliaSelected","selectAlfie","AlfieUnselected","selectAmelia","AmeliaUnselected","AlfieSelectedIcon","AmeliaSelectedIcon","Ready","TermsConditions","marginBottom","marginTop","paddingBottom","Interaction","locations","Quiz","coordinates","description","complete","Fact","Game","Picture","WrappedMap","withScriptjs","withGoogleMap","useState","selectedInteraction","setSelectedInteraction","usePosition","enableHighAccuracy","latitude","longitude","defaultZoom","defaultCenter","lat","lng","options","fullscreenControl","zoomControl","streetViewControl","mapTypeControl","clickableIcons","bounds","google","maps","LatLngBounds","LatLng","url","MapOverlay","opacity","position","map","interaction","key","console","log","icon","QuizIncomplete","QuizComplete","FactIncomplete","FactComplete","GameIcon","PicIncomplete","PicComplete","onCloseClick","Map","width","height","zIndex","googleMapURL","process","loadingElement","containerElement","mapElement","Popup","handleClick","props","toggle","CloseIcon","GameMenu","popupOpen","togglePopup","ProfilePic","SettingsIcon","GuideBtn","CalibrateBtn","FactComponent","handleChange","bind","preventDefault","onNextButton","fact","next","number","image","text","name","FactFormat","current","prevState","facts","length","Question","onChoiceChange","question","choices","choice","HintButton","Scorebox","total","Results","overallScore","score","UserIcon","QuizFormat","questions","correct","Questions","SectionOneQuiz","SectionTwoQuiz","Facts","FactOne","FactTwo","FactThree","SectionOneFact","SectionThreeQuiz","SectionFourQuiz","SectionFiveQuiz","SectionSevenQuiz","SectionNineQuiz","SectionSixQuiz","SectionEightQuiz","SectionTwoFact","SectionThreeFact","SectionFourFact","SectionFiveFact","SectionSixFact","SectionSevenFact","SectionNineFact","SectionEightFact","GameGuide","showFirstScreen","showSecondScreen","showThirdScreen","LockedIcon","IncompleteIcon","CompleteIcon","toggleFirstScreen","toggleSecondScreen","HeaderImg","toggleThirdScreen","CalibrateImg","AlfieImg","ImagePreview","dataUri","classNameFullscreen","isFullscreen","PilotHelmet","SectionOnePic","setDataUri","onTakePhotoAnimationDone","App","method","headers","res","message","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"+GAAAA,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,gD,oBCA3CD,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,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","file":"static/js/main.3603697e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alfie-unselected.24daaf66.svg\";","module.exports = __webpack_public_path__ + \"static/media/amelia-unselected.84ae48b4.svg\";","module.exports = __webpack_public_path__ + \"static/media/plane-vector.974a64c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon.b0063627.svg\";","module.exports = __webpack_public_path__ + \"static/media/level-active-easy.1c62e9bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/level-active-medium.e4522745.svg\";","module.exports = __webpack_public_path__ + \"static/media/level-active-hard.f541c341.svg\";","module.exports = __webpack_public_path__ + \"static/media/back-button.518e8fdc.svg\";","module.exports = __webpack_public_path__ + \"static/media/small-text.4d90c787.svg\";","module.exports = __webpack_public_path__ + \"static/media/medium-text.f017f8b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/large-text.35a6c2f9.svg\";","module.exports = __webpack_public_path__ + \"static/media/voiceover-icon.177f90b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/voulme-icon.ae9e6d3a.svg\";","module.exports = __webpack_public_path__ + \"static/media/alfie-selected.a0860c54.svg\";","module.exports = __webpack_public_path__ + \"static/media/amelia-selected.2faf4e2e.svg\";","module.exports = __webpack_public_path__ + \"static/media/plane-vector.34328284.svg\";","module.exports = __webpack_public_path__ + \"static/media/game-icon.d022a13d.svg\";","module.exports = __webpack_public_path__ + \"static/media/fact-icon.fcf8e525.svg\";","module.exports = __webpack_public_path__ + \"static/media/fact-complete.83548811.svg\";","module.exports = __webpack_public_path__ + \"static/media/picture-incomplete.0299d620.svg\";","module.exports = __webpack_public_path__ + \"static/media/picture-complete.9d733e3b.svg\";","module.exports = __webpack_public_path__ + \"static/media/main-building.5d65ad25.svg\";","module.exports = __webpack_public_path__ + \"static/media/user-icon.d643211d.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings-icon.2309f4ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/guide-button.6ae0f408.svg\";","module.exports = __webpack_public_path__ + \"static/media/cabibrate-icon.246b3517.svg\";","module.exports = __webpack_public_path__ + \"static/media/close-icon.26defb97.svg\";","module.exports = __webpack_public_path__ + \"static/media/hint-button.721a156d.svg\";","module.exports = __webpack_public_path__ + \"static/media/user-icon.ffe009b7.svg\";","module.exports = __webpack_public_path__ + \"static/media/factOne.5c4f9a66.svg\";","module.exports = __webpack_public_path__ + \"static/media/factTwo.430825bc.svg\";","module.exports = __webpack_public_path__ + \"static/media/factThree.a3866441.svg\";","module.exports = __webpack_public_path__ + \"static/media/factOne.869aec3f.svg\";","module.exports = __webpack_public_path__ + \"static/media/factTwo.e8fa0334.svg\";","module.exports = __webpack_public_path__ + \"static/media/factThree.6befd371.svg\";","module.exports = __webpack_public_path__ + \"static/media/factOne.f76784a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/factOne.065004bd.svg\";","module.exports = __webpack_public_path__ + \"static/media/factTwo.49d86f93.svg\";","module.exports = __webpack_public_path__ + \"static/media/factThree.029bdadc.svg\";","module.exports = __webpack_public_path__ + \"static/media/factOne.57ae2880.svg\";","module.exports = __webpack_public_path__ + \"static/media/factOne.df8124e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/factTwo.e917ee22.svg\";","module.exports = __webpack_public_path__ + \"static/media/factOne.657fe18a.svg\";","module.exports = __webpack_public_path__ + \"static/media/factTwo.1002da82.svg\";","module.exports = __webpack_public_path__ + \"static/media/factThree.e27d07e2.svg\";","module.exports = __webpack_public_path__ + \"static/media/factOne.5e24f66b.svg\";","module.exports = __webpack_public_path__ + \"static/media/quiz-locked.06aa13f9.svg\";","module.exports = __webpack_public_path__ + \"static/media/guide-header.63110d0c.svg\";","module.exports = __webpack_public_path__ + \"static/media/alfie-character.bc80c9df.svg\";","module.exports = __webpack_public_path__ + \"static/media/cabibrate-icon.2c9e93a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/email-info.1fd58622.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings-icon.2309f4ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/char-stats-bg.76c2e928.svg\";","import React, {Component, useEffect, useState} from 'react';\nimport { Link } from 'react-router-dom';\nimport Axios from \"axios\";\nimport \"./welcome.css\";\n\nimport PlaneVector from './assets/plane-vector.svg';\nimport EmailInfo from './assets/email-info.svg';\nimport CloseBtn from './assets/icon.svg';\n\nclass Welcome extends Component {\n    state = {\n        isActive: false,\n        emailAddress: \"\",\n        emailAddressList: []\n    }\n\n    toggleChange() {\n        this.setState({\n            isActive: !this.state.isActive\n        })\n    }\n\n    getUserEmail() {\n        Axios.get('http://localhost:3001/api/get')\n            .then((response) => {\n                this.setState({\n                    emailAddressList: response.data\n                })\n            })\n    }\n\n    render () {\n        const { isActive, emailAddress, emailAddressList } = this.state;\n\n        const printData = this.getUserEmail();\n\n        const submitEmail = () => {\n            Axios.post('http://localhost:3001/api/insert',\n                { email_address: this.state.emailAddress })\n                .then(() => {\n                    alert(\"successful insert\");\n                })\n        }\n\n        return (\n            <div className=\"container welcome-container\">\n\n                {/* Map Email Address from SQL list */}\n                {/*{emailAddressList.map((val) => {*/}\n                {/*    return <p>Email Address: {val.email_address}</p>*/}\n                {/*})}*/}\n\n                {isActive &&\n                    <div className=\"welcome-popup-container\">\n                        <div className=\"welcome-popup-inner-container\">\n                            <button\n                                className=\"welcome-popup-close-button\"\n                                onClick={() => this.toggleChange()}\n                            >\n                                <img src={CloseBtn} alt=\"Close Button\" />\n                            </button>\n                            <p>\n                                By entering your email address, you agree to receive emails from Aerospace Bristol. We will never share your data with third parties and you may unsubscribe at any time.\n                            </p>\n                            <button\n                                className=\"basic-btn\"\n                                onClick={() => this.toggleChange()}\n                            >\n                                <h3>OK</h3>\n                            </button>\n                        </div>\n                    </div>\n                }\n\n                <img src={PlaneVector} alt=\"\"/>\n                <div className=\"welcome-info-container\">\n                    <h1>AEROSPACE ADVENTURE</h1>\n                    <h3>Help Alfie & Amelia complete their tasks. Discover Aerospace facts and compete for the highest score.</h3>\n                    <p style={{fontSize: 12, textAlign: 'left'}}>Enter your email address to stay in the loop with Aerospace Bristol, receive your final score certificate, and be in with a chance to win prizes</p>\n                    <div className=\"welcome-label-container\">\n                        <label\n                            for=\"email-input\"\n                            className=\"welcome-label\"\n                        >\n                            E-mail\n                        </label>\n                        <button onClick={() => this.toggleChange()}>\n                            <h3>i</h3>\n                        </button>\n                    </div>\n                    <input\n                        type=\"email\"\n                        id=\"email-input\"\n                        placeholder=\"Type your email here\"\n                        onChange={(e) => {\n                            this.setState({ emailAddress: e.target.value })\n                        }}\n                    />\n                    <p style={{fontSize: 16, textAlign: 'left'}}>or just dive right in!</p>\n                </div>\n                <div className=\"welcome-button-container\">\n                    <Link to=\"/info\">\n                        <button\n                            className=\"submit-btn\"\n                            onClick={submitEmail}\n                        >\n                            Take Me On Board!\n                        </button>\n                    </Link>\n                </div>\n\n\n            </div>\n        );\n    }\n}\n\nexport default Welcome;\n","import BackImg from \"./assets/back-button.svg\";\nimport React from \"react\";\nimport './back.css';\nimport { useHistory } from 'react-router-dom';\n\n// Back button works by accessing history via React Router\nconst Back = () => {\n\n    let history = useHistory(); // useHistory component from react-router-dom\n\n    return(\n        <div className=\"back-btn\"> {/* Back Button Container */}\n            <button\n                onClick={() => history.goBack()}\n            >\n                <img src={BackImg} alt=\"\" />\n            </button>\n        </div> // End of Back Button Container\n    )\n}\n\nexport default Back;\n\n","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport './playerInfo.css';\n\nimport EasyInactive from './assets/lavel-inactive-easy.svg'; import MediumInactive from './assets/lavel-inactive-medium.svg'; import HardInactive from './assets/level-inactive-hard.svg';\nimport EasyActive from './assets/level-active-easy.svg'; import MediumActive from './assets/level-active-medium.svg'; import HardActive from './assets/level-active-hard.svg';\nimport Settings from '../../images/settings-icon.svg';\nimport Back from \"../../components/backButton/back\";\n\nclass PlayerInfo extends Component {\n\n    state = {\n        EasySelected: false,\n        MediumSelected: false,\n        HardSelected: false,\n    }\n\n    selectEasy() {\n        this.setState({\n            EasySelected: true,\n            MediumSelected: false,\n            HardSelected: false\n        })\n    }\n    selectMedium() {\n        this.setState({\n            EasySelected: false,\n            MediumSelected: true,\n            HardSelected: false\n        })\n    }\n    selectHard() {\n        this.setState({\n            EasySelected: false,\n            MediumSelected: false,\n            HardSelected: true\n        })\n    }\n\n    render () {\n\n        const { EasySelected } = this.state\n        const { MediumSelected } = this.state\n        const { HardSelected } = this.state\n\n        return (\n            <div className=\"container p-info-container\"> {/* Page Container */}\n                <Back className=\"back-button\"/>\n\n                <div className=\"inner-container player-inner-container\">\n                    <h2>Player Settings</h2>\n                    <div className=\"name-input-container\"> {/* Name Input Section */}\n                        <label for=\"name-input\" className=\"name-label\">\n                            Name <span>*</span>\n                        </label>\n                        <input\n                            type=\"text\"\n                            id=\"name-input\"\n                            placeholder=\"Type your name here\"\n                            required\n                        />\n                    </div> {/* End of Name Input Section */}\n\n                    <div className=\"difficulty-container\"> {/* Difficulty Options Section */}\n                        <label>Select your difficulty level <span>*</span></label>\n                        { !EasySelected && !MediumSelected && !HardSelected &&\n                            <div className=\"diff-btn-container\"> {/* Difficulty Buttons */ }\n                                <button\n                                    className=\"diff-btn easy\"\n                                    onClick={() => this.selectEasy()}\n                                >\n                                    <img src={ EasyInactive }/>\n                                </button>\n                                <button\n                                    className=\"diff-btn medium\"\n                                    onClick={() => this.selectMedium()}\n                                >\n                                    <img src={ MediumInactive }/>\n                                </button>\n                                <button\n                                    className=\"diff-btn hard\"\n                                    onClick={() => this.selectHard()}\n                                >\n                                    <img src={ HardInactive }/>\n                                </button>\n                            </div>\n                        }\n                        { EasySelected && !MediumSelected && !HardSelected &&\n                            <div className=\"diff-btn-container\"> {/* Difficulty Buttons */ }\n                                <button\n                                    className=\"diff-btn easy\"\n                                    onClick={() => this.selectEasy()}\n                                >\n                                    <img src={ EasyActive }/>\n                                </button>\n                                <button\n                                    className=\"diff-btn medium\"\n                                    onClick={() => this.selectMedium()}\n                                >\n                                    <img src={ MediumInactive }/>\n                                </button>\n                                <button\n                                    className=\"diff-btn hard\"\n                                    onClick={() => this.selectHard()}\n                                >\n                                    <img src={ HardInactive }/>\n                                </button>\n                            </div>\n                        }\n                        { !EasySelected && MediumSelected && !HardSelected &&\n                        <div className=\"diff-btn-container\"> {/* Difficulty Buttons */ }\n                            <button\n                                className=\"diff-btn easy\"\n                                onClick={() => this.selectEasy()}\n                            >\n                                <img src={ EasyInactive }/>\n                            </button>\n                            <button\n                                className=\"diff-btn medium\"\n                                onClick={() => this.selectMedium()}\n                            >\n                                <img src={ MediumActive }/>\n                            </button>\n                            <button\n                                className=\"diff-btn hard\"\n                                onClick={() => this.selectHard()}\n                            >\n                                <img src={ HardInactive }/>\n                            </button>\n                        </div>\n                        }\n                        { !EasySelected && !MediumSelected && HardSelected &&\n                        <div className=\"diff-btn-container\"> {/* Difficulty Buttons */ }\n                            <button\n                                className=\"diff-btn easy\"\n                                onClick={() => this.selectEasy()}\n                            >\n                                <img src={ EasyInactive }/>\n                            </button>\n                            <button\n                                className=\"diff-btn medium\"\n                                onClick={() => this.selectMedium()}\n                            >\n                                <img src={ MediumInactive }/>\n                            </button>\n                            <button\n                                className=\"diff-btn hard\"\n                                onClick={() => this.selectHard()}\n                            >\n                                <img src={ HardActive }/>\n                            </button>\n                        </div>\n                        }\n\n                    </div> {/* End of Difficulty Options Section */}\n\n                    {/*<p style={{fontSize: 14, width: '90%', textAlign: 'left'}}>Adjust font size, sound and turn on voiceover support in accessibility settings</p>*/}\n                    {/*<div className=\"accessibility-container\"> /!* Accessibility Button Section *!/*/}\n                    {/*    <Link*/}\n                    {/*        to=\"/accessibility\"*/}\n                    {/*        className=\"accessibility-btn\"*/}\n                    {/*    >*/}\n                    {/*        <img src={Settings} alt=\"\" />*/}\n                    {/*        <h3>Accessibility Settings</h3>*/}\n                    {/*    </Link>*/}\n                    {/*</div> /!* End of Accessibility Button Section *!/*/}\n\n                </div>\n\n                <div className=\"next-button-container\">\n                    <Link to=\"/character\" className=\"next-button\">\n                        <h3>Next</h3>\n                    </Link>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PlayerInfo;\n","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport './accessibility.css';\n\nimport Back from \"../../components/backButton/back\";\n\nimport BackImg from \"../../images/left-close.svg\";\nimport SmallText from \"../../images/small-text.svg\";\nimport MediumText from \"../../images/medium-text.svg\";\nimport LargeText from \"../../images/large-text.svg\";\nimport VoiceOver from \"../../images/voiceover-icon.svg\";\nimport SoundIcon from \"../../images/voulme-icon.svg\";\n\n\nclass Accessibility extends Component {\n    render () {\n        return (\n            <div className=\"container accessibility-container\"> {/* Page Container */}\n                <Back />\n\n                <div className=\"inner-container accessibility-inner-container\">\n                    <div className=\"accessibility-title-container\">\n                        <h2>Accessibility Settings</h2>\n                    </div>\n\n                    <div className=\"a-font-size-container\"> {/* Text Size Section */ }\n                        <h3>Font Size</h3>\n                        <div className=\"font-size-inner-container\">\n                            <button className=\"font-btn small\">\n                                <img src={SmallText} alt=\"\" />\n                            </button>\n                            <button className=\"font-btn medium\">\n                                <img src={MediumText} alt=\"\" />\n                            </button>\n                            <button className=\"font-btn large\">\n                                <img src={LargeText} alt=\"\" />\n                            </button>\n                        </div>\n                    </div>\n                    {/* End of Text Size Section */ }\n\n                    <div className=\"audio-container\"> {/* Sound & Voiceover Section */ }\n                        <div className=\"sound-container\">\n                            <h3>Sound</h3>\n                            <img src={SoundIcon} alt=\"\" />\n                        </div>\n                        <div className=\"voiceover-container\">\n                            <h3>Voiceover</h3>\n                            <img src={VoiceOver} alt=\"\" />\n                        </div>\n                    </div> {/* End of Sound & Voiceover Section */ }\n\n                    {/* Save Settings Button */}\n                    <Link\n                        to=\"/info\"\n                        className=\"basic-btn a-save-btn\"\n                    >\n                        <h3>Save</h3>\n                    </Link>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Accessibility;\n","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport './character.css';\n\nimport AlfieUnselected from './assets/alfie-unselected.svg'; import AlfieSelectedIcon from './assets/alfie-selected.svg';\nimport AmeliaUnselected from './assets/amelia-unselected.svg'; import AmeliaSelectedIcon from './assets/amelia-selected.svg';\nimport Back from \"../../components/backButton/back\";\n\nclass Character extends Component {\n    state = {\n        AlfieSelected: false,\n        AmeliaSelected: false\n    }\n\n    selectAlfie() {\n        this.setState({\n            AlfieSelected: true,\n            AmeliaSelected: false\n        })\n    }\n    selectAmelia() {\n        this.setState({\n            AlfieSelected: false,\n            AmeliaSelected: true\n        })\n    }\n\n    render () {\n\n        const { AlfieSelected } = this.state;\n        const { AmeliaSelected } = this.state;\n\n        return (\n            <div className=\"container char-page-container\"> {/* Page Container */}\n                <Back /> {/* Back Button */}\n\n                {/* Inner Container */}\n                <div className=\"inner-container\">\n                    <h2>Choose Character</h2> {/* Title */}\n                    {/* Characters Container */}\n\n                    { !AlfieSelected && !AmeliaSelected &&\n                        <div className=\"character-container\">\n                            <button\n                                className=\"character-btn alfie\"\n                                onClick={() => this.selectAlfie()}\n                            >\n                                <img src={ AlfieUnselected } alt=\"\"/>\n                            </button>\n                            <button\n                                className=\"character-btn amelia\"\n                                onClick={() => this.selectAmelia()}\n                            >\n                                <img src={ AmeliaUnselected } alt=\"\"/>\n                            </button>\n                        </div>\n                    }\n\n                    { AlfieSelected && !AmeliaSelected &&\n                        <div className=\"character-container\">\n                            <button className=\"character-btn alfie\">\n                                <img src={ AlfieSelectedIcon } alt=\"\"/>\n                            </button>\n                            <button\n                                className=\"character-btn amelia\"\n                                onClick={() => this.selectAmelia()}\n                            >\n                                <img src={ AmeliaUnselected } alt=\"\"/>\n                            </button>\n                        </div>\n                    }\n\n                    { !AlfieSelected && AmeliaSelected &&\n                        <div className=\"character-container\">\n                            <button\n                                className=\"character-btn alfie\"\n                                onClick={() => this.selectAlfie()}\n                            >\n                                <img src={ AlfieUnselected } alt=\"\"/>\n                            </button>\n                            <button className=\"character-btn amelia\">\n                                <img src={ AmeliaSelectedIcon } alt=\"\"/>\n                            </button>\n                        </div>\n                    }\n\n                    {/* End of Characters Section */ }\n\n\n\n                </div>\n                {/* End of Inner Container */}\n\n                {/* Next Button Container */}\n                <div className=\"next-button-container\">\n                    <Link\n                        to=\"/ready\"\n                        className=\"next-button\"\n                    >\n                        <h3>Next</h3>\n                    </Link>\n                </div>\n                {/* Next Button Container */}\n            </div>\n        );\n    }\n}\n\nexport default Character;\n","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport './ready.css';\n\nimport PlaneVector from './assets/plane-vector.svg';\nimport Back from \"../../components/backButton/back\";\n\nclass Ready extends Component {\n    render () {\n        return (\n        <div className=\"container ready-container\">\n                <Back />\n\n                <div className=\"inner-container ready-inner-container\">\n\n                    <h2>Clear For Take-Off!</h2>\n                    <h3>Get ready to start your adventure and collect as many points as you can</h3>\n\n\n                    <img src={PlaneVector} alt=\"\"/>\n\n                    <Link to=\"game-menu\" className=\"basic-btn start-adventure\">\n                        <h3>Start your Adventure</h3>\n                    </Link>\n\n                    {/*<Link to=\"/ts-and-cs\" className=\"text-btn terms-btn\">*/}\n                    {/*    <h4>Terms & Conditions</h4>*/}\n                    {/*</Link>*/}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Ready;\n","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport './termsConditions.css';\nimport BackImg from \"../../images/left-close.svg\";\nimport Back from \"../../components/backButton/back\";\n\nclass TermsConditions extends Component {\n    render () {\n        return (\n            <div className=\"container terms-container\">\n                <Back />\n\n                <h2 style={{marginBottom: '2rem', marginTop: '2rem'}}>TERMS & CONDITIONS</h2>\n\n                <div className=\"terms-conditions-container\"> {/* Ts&Cs Info Section */}\n                    <h4 style={{paddingBottom: '1rem'}}>Bristol Aerospace Museum</h4>\n                    <p>\n                        This is the place for terms and conditions and any further disclaimers.\n                        This is the place for terms and conditions and any further disclaimers.\n                        This is the place for terms and conditions and any further disclaimers.\n                        This is the place for terms and conditions and any further disclaimers.\n                        This is the place for terms and conditions and any further disclaimers. <br/>\n                        This is the place for terms and conditions and any further disclaimers.\n                        This is the place for terms and conditions and any further disclaimers.\n                        This is the place for terms and conditions and any further disclaimers.\n                        This is the place for terms and conditions and any further disclaimers.\n                        This is the place for terms and conditions and any further disclaimers. <br/>\n                        This is the place for terms and conditions and any further disclaimers.\n                        This is the place for terms and conditions and any further disclaimers.\n                        This is the place for terms and conditions and any further disclaimers.\n                        This is the place for terms and conditions and any further disclaimers.\n                        This is the place for terms and conditions and any further disclaimers. <br/>\n                        This is the place for terms and conditions and any further disclaimers.\n                        This is the place for terms and conditions and any further disclaimers.\n                        This is the place for terms and conditions and any further disclaimers.\n                        This is the place for terms and conditions and any further disclaimers.\n                        This is the place for terms and conditions and any further disclaimers. <br/>\n                    </p>\n                </div> {/* End of Ts&Cs Info Section */}\n\n            </div>\n        );\n    }\n}\n\nexport default TermsConditions;\n","// /* global google */\n// import React, {useState} from 'react';\n// import './map.css';\n// import { Link } from 'react-router-dom';\n//\n// import { usePosition } from 'use-position';\n//\n// import {\n//     GoogleMap,\n//     withScriptjs,\n//     withGoogleMap,\n//     Marker,\n//     InfoWindow,\n//     GroundOverlay\n// } from 'react-google-maps';\n//\n// import GameIcon from './assets/game-icon.svg';\n// import QuizIcon from './assets/quiz-icon.svg';\n// import FactIcon from './assets/fact-icon.svg';\n// import MapOverlay from './assets/main-building.svg';\n//\n// // Impromptu JSON data for locations\n// const Interaction = {\n//     locations: [\n//         {\n//             \"id\": 1,\n//             \"type\": \"Quiz\",\n//             \"coordinates\": [51.523406, -2.578008],\n//             \"description\": \"Test Me!\"\n//         },\n//         {\n//             \"id\": 2,\n//             \"type\": \"Quiz\",\n//             \"coordinates\": [51.523120, -2.578284],\n//             \"description\": \"Test Me!\"\n//         },\n//         {\n//             \"id\": 3,\n//             \"type\": \"FactFormat\",\n//             \"coordinates\": [51.523323, -2.577915],\n//             \"description\": \"Learn!\"\n//         },\n//         {\n//             \"id\": 4,\n//             \"type\": \"Game\",\n//             \"coordinates\": [51.523531, -2.578289],\n//             \"description\": \"Let's Play!\"\n//         }\n//     ]\n// }\n//\n// function UnwrappedMap() {\n//\n//     const [selectedInteraction, setSelectedInteraction] = useState(null);\n//\n//     const watch = true;\n//     const { latitude, longitude } =\n//         usePosition(watch, {enableHighAccuracy: true});\n//\n//\n//     return (\n//         // Creates map\n//         <GoogleMap\n//             defaultZoom={20}\n//             defaultCenter={{lat: latitude, lng: longitude}}\n//             center={{ lat: 51.523160, lng: -2.578440 }}\n//             options={{\n//                 fullscreenControl: false,\n//                 zoomControl: false,\n//                 streetViewControl: false,\n//                 mapTypeControl: false,\n//                 // draggable: false,\n//                 clickableIcons: false,\n//             }}\n//         >\n//             <GroundOverlay\n//                 bounds={new google.maps.LatLngBounds(\n//                     new google.maps.LatLng(51.522800, -2.578910),\n//                     new google.maps.LatLng(51.523655, -2.577485)\n//                 )}\n//                 url={MapOverlay}\n//                 opacity={1}\n//             />\n//             {/* User Location Marker*/}\n//\n//             <Marker\n//                 position={{ lat: latitude, lng: longitude }}\n//             />\n//             {/* Maps JSON date to Function */}\n//             {Interaction.locations.map((interactions) => (\n//                 <Marker\n//                     key={interactions.id}\n//                     position={{\n//                         lat: interactions.coordinates[0],\n//                         lng: interactions.coordinates[1]\n//                     }}\n//                     onClick={() => {\n//                         setSelectedInteraction(interactions);\n//                     }}\n//                     icon={\n//                         interactions.type === \"Quiz\" && (\n//                             QuizIcon\n//                         ) ||\n//                         interactions.type === \"FactFormat\" && (\n//                             FactIcon\n//                         ) ||\n//                             interactions.type === \"Game\" && (\n//                                 GameIcon\n//                         )\n//                     }\n//                 />\n//             ))}\n//\n//             {\n//                 // Function for if the button pressed is a QUIZ button\n//                 selectedInteraction === Interaction.locations[0] && (\n//                     <div className=\"map-info-window\">\n//                         <InfoWindow\n//                             position={{\n//                                 lat: selectedInteraction.coordinates[0] + 0.000065,\n//                                 lng: selectedInteraction.coordinates[1]\n//                             }}\n//                             onCloseClick={() => {\n//                                 setSelectedInteraction(null);\n//                             }}\n//                         >\n//                             <div className=\"map-button\">\n//                                 <h2>{ selectedInteraction.type }</h2>\n//                                 <Link to=\"/quiz\" className=\"map-basic-btn map-quiz-btn\">\n//                                     <h3>{selectedInteraction.description}</h3>\n//                                 </Link>\n//                             </div>\n//                         </InfoWindow>\n//                     </div>\n//                 ) ||\n//\n//                 // Function for if the button pressed is a FACT button\n//                 selectedInteraction === Interaction.locations[1] && (\n//                     <div>\n//                         <InfoWindow\n//                             position={{\n//                                 lat: selectedInteraction.coordinates[0] + 0.000065,\n//                                 lng: selectedInteraction.coordinates[1]\n//                             }}\n//                             onCloseClick={() => {\n//                                 setSelectedInteraction(null);\n//                             }}\n//                             className=\"map-info-window\"\n//                         >\n//                             <div className=\"map-button\">\n//                                 <h2>{ selectedInteraction.type }</h2>\n//                                 <Link to=\"/fact\" className=\"basic-btn fact-btn\">\n//                                     <h3>{ selectedInteraction.description }</h3>\n//                                 </Link>\n//                             </div>\n//                         </InfoWindow>\n//                     </div>\n//                 ) ||\n//\n//                 // Function for if the button pressed is a GAME button\n//                 selectedInteraction === Interaction.locations[2] && (\n//                     <div>\n//                         <InfoWindow\n//                             position={{\n//                                 lat: selectedInteraction.coordinates[0] + 0.000065,\n//                                 lng: selectedInteraction.coordinates[1]\n//                             }}\n//                             onCloseClick={() => {\n//                                 setSelectedInteraction(null);\n//                             }}\n//                             className=\"map-info-window\"\n//                         >\n//                             <div className=\"map-button\">\n//                                 <h2>{ selectedInteraction.type }</h2>\n//                                 <Link to=\"/game\" className=\"basic-btn game-btn\">\n//                                     <h3>{ selectedInteraction.description }</h3>\n//                                 </Link>\n//                             </div>\n//                         </InfoWindow>\n//                     </div>\n//                 )\n//\n//             }\n//         </GoogleMap>\n//     )\n// }\n//\n// const WrappedMap = withScriptjs(withGoogleMap(UnwrappedMap));\n//\n// export default function Map() {\n//     return (\n//         <div style={{width: '100%', height: '100%', zIndex: '-2'}}>\n//             <WrappedMap\n//                 googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_GOOGLE_KEY}`}\n//                 loadingElement={ <div style={{height: '100%'}} /> }\n//                 containerElement={ <div style={{height: '100%'}} />}\n//                 mapElement={ <div style={{height: '100%'}} />}\n//             />\n//         </div>\n//     )\n// }\n\n/* global google */\nimport React, {useState} from 'react';\nimport './map.css';\nimport { Link } from 'react-router-dom';\n\nimport { usePosition } from 'use-position';\n\nimport {\n    GoogleMap,\n    withScriptjs,\n    withGoogleMap,\n    Marker,\n    InfoWindow,\n    GroundOverlay\n} from 'react-google-maps';\n\nimport GameIcon from './assets/game-icon.svg';\nimport QuizIncomplete from './assets/quiz-icon.svg'; import QuizComplete from './assets/quiz-complete.svg';\nimport FactIncomplete from './assets/fact-icon.svg'; import FactComplete from './assets/fact-complete.svg';\nimport PicIncomplete from './assets/picture-incomplete.svg'; import PicComplete from './assets/picture-complete.svg';\n\nimport MapOverlay from './assets/main-building.svg';\n\n// Impromptu JSON data for locations\nexport const Interaction = {\n    locations: {\n        Quiz: [\n            {\n                id: 1,\n                coordinates: [51.523176, -2.578209],\n                description: \"Test Me!\",\n                complete: false,\n            },\n            {\n                id: 2,\n                coordinates: [51.523315, -2.578260],\n                description: \"Test Me!\",\n                complete: false,\n            },\n            {\n                id: 3,\n                coordinates: [51.523365, -2.578005],\n                description: \"Test Me!\",\n                complete: false,\n            },\n            {\n                id: 4,\n                coordinates: [51.523565, -2.578309],\n                description: \"Test Me!\",\n                complete: false,\n            },\n            {\n                id: 5,\n                coordinates: [51.523395, -2.578309],\n                description: \"Test Me!\",\n                complete: false,\n            },\n            {\n                id: 6,\n                coordinates: [51.523265, -2.578649],\n                description: \"Test Me!\",\n                complete: false,\n            },\n            {\n                id: 7,\n                coordinates: [51.523176, -2.578409],\n                description: \"Test Me!\",\n                complete: false,\n            },\n            {\n                id: 8,\n                coordinates: [51.523076, -2.578259],\n                description: \"Test Me!\",\n                complete: false,\n            },\n            {\n                id: 9,\n                coordinates: [51.522776, -2.579259],\n                description: \"Test Me!\",\n                complete: false,\n            },\n        ],\n\n        Fact: [\n            {\n                id: 1,\n                coordinates: [51.523226, -2.578289],\n                description: \"Learn!\",\n                complete: false\n            },\n            {\n                id: 2,\n                coordinates: [51.523265, -2.577975],\n                description: \"Learn!\",\n                complete: false\n            },\n            {\n                id: 3,\n                coordinates: [51.523405, -2.578095],\n                description: \"Learn!\",\n                complete: false\n            },\n            {\n                id: 4,\n                coordinates: [51.523485, -2.578159],\n                description: \"Learn!\",\n                complete: false\n            },\n            {\n                id: 5,\n                coordinates: [51.523425, -2.578509],\n                description: \"Learn!\",\n                complete: false\n            },\n            {\n                id: 6,\n                coordinates: [51.523315, -2.578549],\n                description: \"Learn!\",\n                complete: false\n            },\n            {\n                id: 7,\n                coordinates: [51.523116, -2.578329],\n                description: \"Learn!\",\n                complete: false\n            },\n            {\n                id: 8,\n                coordinates: [51.523066, -2.578419],\n                description: \"Learn!\",\n                complete: false\n            },\n            {\n                id: 9,\n                coordinates: [51.522756, -2.579059],\n                description: \"Learn!\",\n                complete: false\n            },\n        ],\n\n        Game: [\n            {\n                id: 1,\n                coordinates: [51.523213, -2.578062],\n                description: \"Let's Play!\",\n                complete: false\n            }\n        ],\n\n        Picture: [\n            {\n                id: 1,\n                coordinates: [51.523273, -2.578122],\n                description: \"Snap a Photo!\",\n                complete: false\n            }\n        ]\n    },\n}\n\nfunction UnwrappedMap() {\n\n    const [selectedInteraction, setSelectedInteraction] = useState(null);\n\n    const watch = true;\n    const { latitude, longitude } =\n        usePosition(watch, {enableHighAccuracy: true});\n\n\n    return (\n        // Creates map\n        <GoogleMap\n            defaultZoom={21}\n            defaultCenter={{lat: 51.523176, lng: -2.578209}}\n            // center={{ lat: latitude, lng: longitude }}\n            options={{\n                fullscreenControl: false,\n                zoomControl: false,\n                streetViewControl: false,\n                mapTypeControl: false,\n                // draggable: false,\n                clickableIcons: false,\n            }}\n        >\n            <GroundOverlay\n                bounds={new google.maps.LatLngBounds(\n                    new google.maps.LatLng(51.522800, -2.578910),\n                    new google.maps.LatLng(51.523655, -2.577485)\n                )}\n                url={MapOverlay}\n                opacity={1}\n            />\n\n            {/* User Location Marker*/}\n            <Marker\n                position={{ lat: latitude, lng: longitude }}\n            />\n\n            {/* Interaction Markers */}\n            {\n                Interaction.locations.Quiz.map ((interaction) => (\n                    <div>\n                        <Marker\n                            key={interaction.id}\n                            position={{\n                                lat: interaction.coordinates[0],\n                                lng: interaction.coordinates[1]\n                            }}\n                            onClick={() => {\n                                interaction.complete === false ?\n                                    setSelectedInteraction(interaction) :\n                                    console.log(\"N/A\")\n                            }}\n                            icon={\n                                !interaction.complete && (\n                                    QuizIncomplete\n                                ) ||\n                                interaction.complete && (\n                                    QuizComplete\n                                )\n                            }\n                        />\n                    </div>\n                ))\n            }\n\n            {\n                Interaction.locations.Fact.map((interaction) => (\n                    <div>\n                        <Marker\n                            key={interaction.id}\n                            position={{\n                                lat: interaction.coordinates[0],\n                                lng: interaction.coordinates[1]\n                            }}\n                            onClick={() => {\n                                setSelectedInteraction(interaction)\n                                console.log(selectedInteraction)\n                            }}\n                            icon={\n                                !interaction.complete && (\n                                    FactIncomplete\n                                ) ||\n                                interaction.complete && (\n                                    FactComplete\n                                )\n                            }\n                        />\n                    </div>\n                ))\n            }\n\n            {\n                Interaction.locations.Game.map((interaction) => (\n                    <div>\n                        <Marker\n                            key={interaction.id}\n                            position={{\n                                lat: interaction.coordinates[0],\n                                lng: interaction.coordinates[1]\n                            }}\n                            onClick={() => {\n                                setSelectedInteraction(interaction)\n                                console.log(selectedInteraction)\n                            }}\n                            icon={GameIcon}\n                        />\n                    </div>\n                ))\n            }\n            {\n                Interaction.locations.Picture.map((interaction) => (\n                    <div>\n                        <Marker\n                            key={interaction.id}\n                            position={{\n                                lat: interaction.coordinates[0],\n                                lng: interaction.coordinates[1]\n                            }}\n                            onClick={() => {\n                                setSelectedInteraction(interaction)\n                                console.log(selectedInteraction)\n                            }}\n                            icon={\n                                !interaction.complete && (PicIncomplete) ||\n                                interaction.complete && (PicComplete)\n                            }\n                        />\n                    </div>\n                ))\n            }\n            {/* End of Interaction Markers */}\n\n            {/* Selecting Interaction Section */}\n            {\n                // Function for if the button pressed is a QUIZ button\n                selectedInteraction === Interaction.locations.Quiz[0] && (\n                    <div className=\"map-info-window\">\n                        <InfoWindow\n                            position={ {\n                                lat: selectedInteraction.coordinates[0] + 0.000033,\n                                lng: selectedInteraction.coordinates[1]\n                            } }\n                            onCloseClick={ () => {\n                                setSelectedInteraction(null);\n                            } }\n                        >\n                            <div className=\"map-button\">\n                                <h2>{ selectedInteraction.type }</h2>\n                                <Link\n                                    to=\"/section-one-quiz\"\n                                    className=\"basic-btn quiz-btn\"\n                                    onClick={() => {selectedInteraction.complete = true }}\n                                >\n                                    <h3>{ selectedInteraction.description }</h3>\n                                </Link>\n                            </div>\n                        </InfoWindow>\n                    </div>\n                ) ||\n                selectedInteraction === Interaction.locations.Quiz[1] && (\n                    <div className=\"map-info-window\">\n                        <InfoWindow\n                            position={ {\n                                lat: selectedInteraction.coordinates[0] + 0.000033,\n                                lng: selectedInteraction.coordinates[1]\n                            } }\n                            onCloseClick={ () => {\n                                setSelectedInteraction(null);\n                            } }\n                        >\n                            <div className=\"map-button\">\n                                <h2>{ selectedInteraction.type }</h2>\n                                <Link\n                                    to=\"/section-two-quiz\"\n                                    className=\"basic-btn quiz-btn\"\n                                    onClick={() => {selectedInteraction.complete = true }}\n                                >\n                                    <h3>{ selectedInteraction.description }</h3>\n                                </Link>\n                            </div>\n                        </InfoWindow>\n                    </div>\n                ) ||\n                selectedInteraction == Interaction.locations.Quiz[2] && (\n                    <div className=\"map-info-window\">\n                        <InfoWindow\n                            position={ {\n                                lat: selectedInteraction.coordinates[0] + 0.000033,\n                                lng: selectedInteraction.coordinates[1]\n                            } }\n                            onCloseClick={ () => {\n                                setSelectedInteraction(null);\n                            } }\n                        >\n                            <div className=\"map-button\">\n                                <h2>{ selectedInteraction.type }</h2>\n                                <Link\n                                    to=\"/section-three-quiz\"\n                                    className=\"basic-btn quiz-btn\"\n                                    onClick={() => {selectedInteraction.complete = true }}\n                                >\n                                    <h3>{ selectedInteraction.description }</h3>\n                                </Link>\n                            </div>\n                        </InfoWindow>\n                    </div>\n                ) ||\n                selectedInteraction == Interaction.locations.Quiz[3] && (\n                    <div className=\"map-info-window\">\n                        <InfoWindow\n                            position={ {\n                                lat: selectedInteraction.coordinates[0] + 0.000033,\n                                lng: selectedInteraction.coordinates[1]\n                            } }\n                            onCloseClick={ () => {\n                                setSelectedInteraction(null);\n                            } }\n                        >\n                            <div className=\"map-button\">\n                                <h2>{ selectedInteraction.type }</h2>\n                                <Link\n                                    to=\"/section-four-quiz\"\n                                    className=\"basic-btn quiz-btn\"\n                                    onClick={() => {selectedInteraction.complete = true }}\n                                >\n                                    <h3>{ selectedInteraction.description }</h3>\n                                </Link>\n                            </div>\n                        </InfoWindow>\n                    </div>\n                ) ||\n                selectedInteraction == Interaction.locations.Quiz[4] && (\n                    <div className=\"map-info-window\">\n                        <InfoWindow\n                            position={ {\n                                lat: selectedInteraction.coordinates[0] + 0.000033,\n                                lng: selectedInteraction.coordinates[1]\n                            } }\n                            onCloseClick={ () => {\n                                setSelectedInteraction(null);\n                            } }\n                        >\n                            <div className=\"map-button\">\n                                <h2>{ selectedInteraction.type }</h2>\n                                <Link\n                                    to=\"/section-five-quiz\"\n                                    className=\"basic-btn quiz-btn\"\n                                    onClick={() => {selectedInteraction.complete = true }}\n                                >\n                                    <h3>{ selectedInteraction.description }</h3>\n                                </Link>\n                            </div>\n                        </InfoWindow>\n                    </div>\n                ) ||\n                selectedInteraction == Interaction.locations.Quiz[5] && (\n                    <div className=\"map-info-window\">\n                        <InfoWindow\n                            position={ {\n                                lat: selectedInteraction.coordinates[0] + 0.000033,\n                                lng: selectedInteraction.coordinates[1]\n                            } }\n                            onCloseClick={ () => {\n                                setSelectedInteraction(null);\n                            } }\n                        >\n                            <div className=\"map-button\">\n                                <h2>{ selectedInteraction.type }</h2>\n                                <Link\n                                    to=\"/section-six-quiz\"\n                                    className=\"basic-btn quiz-btn\"\n                                    onClick={() => {selectedInteraction.complete = true }}\n                                >\n                                    <h3>{ selectedInteraction.description }</h3>\n                                </Link>\n                            </div>\n                        </InfoWindow>\n                    </div>\n                ) ||\n                selectedInteraction == Interaction.locations.Quiz[6] && (\n                    <div className=\"map-info-window\">\n                        <InfoWindow\n                            position={ {\n                                lat: selectedInteraction.coordinates[0] + 0.000033,\n                                lng: selectedInteraction.coordinates[1]\n                            } }\n                            onCloseClick={ () => {\n                                setSelectedInteraction(null);\n                            } }\n                        >\n                            <div className=\"map-button\">\n                                <h2>{ selectedInteraction.type }</h2>\n                                <Link\n                                    to=\"/section-seven-quiz\"\n                                    className=\"basic-btn quiz-btn\"\n                                    onClick={() => {selectedInteraction.complete = true }}\n                                >\n                                    <h3>{ selectedInteraction.description }</h3>\n                                </Link>\n                            </div>\n                        </InfoWindow>\n                    </div>\n                ) ||\n                selectedInteraction == Interaction.locations.Quiz[7] && (\n                    <div className=\"map-info-window\">\n                        <InfoWindow\n                            position={ {\n                                lat: selectedInteraction.coordinates[0] + 0.000033,\n                                lng: selectedInteraction.coordinates[1]\n                            } }\n                            onCloseClick={ () => {\n                                setSelectedInteraction(null);\n                            } }\n                        >\n                            <div className=\"map-button\">\n                                <h2>{ selectedInteraction.type }</h2>\n                                <Link\n                                    to=\"/section-eight-quiz\"\n                                    className=\"basic-btn quiz-btn\"\n                                    onClick={() => {selectedInteraction.complete = true }}\n                                >\n                                    <h3>{ selectedInteraction.description }</h3>\n                                </Link>\n                            </div>\n                        </InfoWindow>\n                    </div>\n                ) ||\n                selectedInteraction == Interaction.locations.Quiz[8] && (\n                    <div className=\"map-info-window\">\n                        <InfoWindow\n                            position={ {\n                                lat: selectedInteraction.coordinates[0] + 0.000033,\n                                lng: selectedInteraction.coordinates[1]\n                            } }\n                            onCloseClick={ () => {\n                                setSelectedInteraction(null);\n                            } }\n                        >\n                            <div className=\"map-button\">\n                                <h2>{ selectedInteraction.type }</h2>\n                                <Link\n                                    to=\"/section-nine-quiz\"\n                                    className=\"basic-btn quiz-btn\"\n                                    onClick={() => {selectedInteraction.complete = true }}\n                                >\n                                    <h3>{ selectedInteraction.description }</h3>\n                                </Link>\n                            </div>\n                        </InfoWindow>\n                    </div>\n                )\n            }\n\n            {\n                selectedInteraction == Interaction.locations.Fact[0] && (\n                    <div className=\"map-info-window\">\n                        <InfoWindow\n                            position={{\n                                lat: selectedInteraction.coordinates[0] + 0.000033,\n                                lng: selectedInteraction.coordinates[1]\n                            }}\n                            onCloseClick={() => {\n                                setSelectedInteraction(null);\n                            }}\n                        >\n                            <div className=\"map-button\">\n                                <h2>{ selectedInteraction.type }</h2>\n                                <Link\n                                    to=\"/section-one-fact\"\n                                    className=\"basic-btn fact-btn\"\n                                    onClick={() => {selectedInteraction.complete = true }}\n                                >\n                                    <h3>{ selectedInteraction.description }</h3>\n                                </Link>\n                            </div>\n                        </InfoWindow>\n                    </div>\n                ) ||\n                selectedInteraction == Interaction.locations.Fact[1] && (\n                    <div className=\"map-info-window\">\n                        <InfoWindow\n                            position={{\n                                lat: selectedInteraction.coordinates[0] + 0.000033,\n                                lng: selectedInteraction.coordinates[1]\n                            }}\n                            onCloseClick={ () => {\n                                setSelectedInteraction(null);\n                            } }\n                        >\n                            <div className=\"map-button\">\n                                <h2>{ selectedInteraction.type }</h2>\n                                <Link\n                                    to=\"/section-two-fact\"\n                                    className=\"basic-btn fact-btn\"\n                                    onClick={() => {selectedInteraction.complete = true }}\n                                >\n                                    <h3>{ selectedInteraction.description }</h3>\n                                </Link>\n                            </div>\n                        </InfoWindow>\n                    </div>\n                ) ||\n                selectedInteraction == Interaction.locations.Fact[2] && (\n                    <div className=\"map-info-window\">\n                        <InfoWindow\n                            position={{\n                                lat: selectedInteraction.coordinates[0] + 0.000033,\n                                lng: selectedInteraction.coordinates[1]\n                            }}\n                            onCloseClick={() => {\n                                setSelectedInteraction(null);\n                            }}\n                        >\n                            <div className=\"map-button\">\n                                <h2>{ selectedInteraction.type }</h2>\n                                <Link\n                                    to=\"/section-three-fact\"\n                                    className=\"basic-btn fact-btn\"\n                                    onClick={() => {selectedInteraction.complete = true }}\n                                >\n                                    <h3>{ selectedInteraction.description }</h3>\n                                </Link>\n                            </div>\n                        </InfoWindow>\n                    </div>\n                ) ||\n                selectedInteraction == Interaction.locations.Fact[3] && (\n                    <div className=\"map-info-window\">\n                        <InfoWindow\n                            position={{\n                                lat: selectedInteraction.coordinates[0] + 0.000033,\n                                lng: selectedInteraction.coordinates[1]\n                            }}\n                            onCloseClick={() => {\n                                setSelectedInteraction(null);\n                            }}\n                        >\n                            <div className=\"map-button\">\n                                <h2>{ selectedInteraction.type }</h2>\n                                <Link\n                                    to=\"/section-four-fact\"\n                                    className=\"basic-btn fact-btn\"\n                                    onClick={() => {selectedInteraction.complete = true }}\n                                >\n                                    <h3>{ selectedInteraction.description }</h3>\n                                </Link>\n                            </div>\n                        </InfoWindow>\n                    </div>\n                ) ||\n                selectedInteraction == Interaction.locations.Fact[4] && (\n                    <div className=\"map-info-window\">\n                        <InfoWindow\n                            position={{\n                                lat: selectedInteraction.coordinates[0] + 0.000033,\n                                lng: selectedInteraction.coordinates[1]\n                            }}\n                            onCloseClick={() => {\n                                setSelectedInteraction(null);\n                            }}\n                        >\n                            <div className=\"map-button\">\n                                <h2>{ selectedInteraction.type }</h2>\n                                <Link\n                                    to=\"/section-five-fact\"\n                                    className=\"basic-btn fact-btn\"\n                                    onClick={() => {selectedInteraction.complete = true }}\n                                >\n                                    <h3>{ selectedInteraction.description }</h3>\n                                </Link>\n                            </div>\n                        </InfoWindow>\n                    </div>\n                ) ||\n                selectedInteraction == Interaction.locations.Fact[5] && (\n                    <div className=\"map-info-window\">\n                        <InfoWindow\n                            position={{\n                                lat: selectedInteraction.coordinates[0] + 0.000033,\n                                lng: selectedInteraction.coordinates[1]\n                            }}\n                            onCloseClick={() => {\n                                setSelectedInteraction(null);\n                            }}\n                        >\n                            <div className=\"map-button\">\n                                <h2>{ selectedInteraction.type }</h2>\n                                <Link\n                                    to=\"/section-six-fact\"\n                                    className=\"basic-btn fact-btn\"\n                                    onClick={() => {selectedInteraction.complete = true }}\n                                >\n                                    <h3>{ selectedInteraction.description }</h3>\n                                </Link>\n                            </div>\n                        </InfoWindow>\n                    </div>\n                ) ||\n                selectedInteraction == Interaction.locations.Fact[6] && (\n                    <div className=\"map-info-window\">\n                        <InfoWindow\n                            position={{\n                                lat: selectedInteraction.coordinates[0] + 0.000033,\n                                lng: selectedInteraction.coordinates[1]\n                            }}\n                            onCloseClick={() => {\n                                setSelectedInteraction(null);\n                            }}\n                        >\n                            <div className=\"map-button\">\n                                <h2>{ selectedInteraction.type }</h2>\n                                <Link\n                                    to=\"/section-seven-fact\"\n                                    className=\"basic-btn fact-btn\"\n                                    onClick={() => {selectedInteraction.complete = true }}\n                                >\n                                    <h3>{ selectedInteraction.description }</h3>\n                                </Link>\n                            </div>\n                        </InfoWindow>\n                    </div>\n                ) ||\n                selectedInteraction == Interaction.locations.Fact[7] && (\n                    <div className=\"map-info-window\">\n                        <InfoWindow\n                            position={{\n                                lat: selectedInteraction.coordinates[0] + 0.000033,\n                                lng: selectedInteraction.coordinates[1]\n                            }}\n                            onCloseClick={() => {\n                                setSelectedInteraction(null);\n                            }}\n                        >\n                            <div className=\"map-button\">\n                                <h2>{ selectedInteraction.type }</h2>\n                                <Link\n                                    to=\"/section-eight-fact\"\n                                    className=\"basic-btn fact-btn\"\n                                    onClick={() => {selectedInteraction.complete = true }}\n                                >\n                                    <h3>{ selectedInteraction.description }</h3>\n                                </Link>\n                            </div>\n                        </InfoWindow>\n                    </div>\n                ) ||\n                selectedInteraction == Interaction.locations.Fact[8] && (\n                    <div className=\"map-info-window\">\n                        <InfoWindow\n                            position={{\n                                lat: selectedInteraction.coordinates[0] + 0.000033,\n                                lng: selectedInteraction.coordinates[1]\n                            }}\n                            onCloseClick={() => {\n                                setSelectedInteraction(null);\n                            }}\n                        >\n                            <div className=\"map-button\">\n                                <h2>{ selectedInteraction.type }</h2>\n                                <Link\n                                    to=\"/section-nine-fact\"\n                                    className=\"basic-btn fact-btn\"\n                                    onClick={() => {selectedInteraction.complete = true }}\n                                >\n                                    <h3>{ selectedInteraction.description }</h3>\n                                </Link>\n                            </div>\n                        </InfoWindow>\n                    </div>\n                )\n            }\n\n            {\n                selectedInteraction === Interaction.locations.Picture[0] && (\n                    <div className=\"map-info-window\">\n                        <InfoWindow\n                            position={{\n                                lat: selectedInteraction.coordinates[0] + 0.000033,\n                                lng: selectedInteraction.coordinates[1]\n                            }}\n                            onCloseClick={() => {\n                                setSelectedInteraction(null);\n                            }}\n                        >\n                            <div className=\"map-button\">\n                                <h2>{ selectedInteraction.type }</h2>\n                                <Link\n                                    to=\"/section-one-pic\"\n                                    className=\"basic-btn fact-btn\"\n                                    onClick={() => {selectedInteraction.complete = true }}\n                                >\n                                    <h3>{ selectedInteraction.description }</h3>\n                                </Link>\n                            </div>\n                        </InfoWindow>\n                    </div>\n                )\n            }\n\n        </GoogleMap>\n    )\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(UnwrappedMap));\n\nexport default function Map() {\n    return (\n        <div style={{width: '100%', height: '100%', zIndex: '-2'}}>\n            <WrappedMap\n                googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_GOOGLE_KEY}`}\n                loadingElement={ <div style={{height: '100%'}} /> }\n                containerElement={ <div style={{height: '100%'}} />}\n                mapElement={ <div style={{height: '100%'}} />}\n            />\n        </div>\n    )\n}\n","import React, {Component} from 'react';\nimport './gameMenu.css';\nimport MapSection from '../../components/map/map.jsx'\nimport { Link } from 'react-router-dom'\n\nimport HeaderImg from './assets/char-stats-bg.svg';\nimport ProfilePic from './assets/user-icon.svg';\nimport SettingsIcon from './assets/settings-icon.svg';\nimport GuideBtn from './assets/guide-button.svg';\nimport CalibrateBtn from './assets/cabibrate-icon.svg'\nimport CloseIcon from './assets/16/close-icon.svg';\n\nclass Popup extends Component {\n    handleClick = () => {\n        this.props.toggle();\n    }\n\n    render () {\n        return(\n            <div className=\"guide-popup-container\">\n                <div className=\"guide-inner-container\">\n                    <button onClick={this.handleClick}>\n                        <img src={CloseIcon} alt=\"\"/>\n                    </button>\n                    <h2>How To Play Guide?</h2>\n                    <div className=\"guide-popup-btn-container\">\n                        <Link\n                            className=\"guide-popup-btn guide-no-btn\"\n                            onClick={this.handleClick}\n                        >\n                            <h3>No</h3>\n                        </Link>\n                        <Link\n                            className=\"guide-popup-btn\"\n                            to=\"/user-guide\"\n                        >\n                            <h3>Yes</h3>\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        )\n\n    }\n}\n\nclass GameMenu extends Component {\n\n    state = {\n        popupOpen: false\n    }\n\n    togglePopup = () => {\n        this.setState({\n            popupOpen: !this.state.popupOpen\n        })\n    }\n\n    render () {\n\n        return (\n            <div className=\"container game-menu-container\">\n                {/* Player Statistics Header Section */}\n                <div className=\"stat-header-container\">\n                    {/* Background */}\n                    <div className=\"stat-header-background-container\"/>\n                    {/* Header Inner Container */}\n                    <div className=\"stat-header-inner-container\">\n                        <div className=\"s-h-i-component s-h-i-image\">\n                            <img src={ProfilePic} alt=\"\" /> {/* Profile Picture */}\n                        </div>\n\n                        {/* XP & Score Section */}\n                        <div className=\"s-h-i-component-xp user-stats-container\">\n                            <h2>0</h2>\n                            <div className=\"xp-bar\" />\n                        </div>\n                        {/* End of XP & Score Section */}\n\n                        <div className=\"s-h-i-component s-h-i-settings\">\n                            <img src={SettingsIcon} alt=\"\" /> {/* Settings Icon */}\n                        </div>\n\n                    </div>\n                    {/* End of Header Inner Container */}\n\n                </div>\n                {/* End of Player Statistics Header Section */}\n\n                <MapSection\n                    className=\"map-section\"\n                />\n\n                <div className=\"map-btn-container\">\n                    <div className=\"map-btn-inner-container\">\n                        <button onClick={this.togglePopup}>\n                            <img src={GuideBtn} alt=\"\"/>\n                        </button>\n                        <Link className=\"basic-btn\">\n                            <h3>Finished?</h3>\n                        </Link>\n                        <button>\n                            <img src={CalibrateBtn} alt=\"\"/>\n                        </button>\n                    </div>\n                </div>\n                {this.state.popupOpen ?\n                    <Popup toggle={this.togglePopup} />\n                    : null\n                }\n            </div>\n        );\n    }\n}\n\nexport default GameMenu;\n","import React, {Component} from 'react';\nimport './factFormat.css';\nimport { Link } from 'react-router-dom';\n\nclass FactComponent extends Component{\n    constructor (props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        e.preventDefault();\n        this.props.onNextButton(e.target.value);\n    }\n\n    render () {\n        const fact = this.props.fact;\n\n        return(\n            <div className=\"container fact-screen-container\">\n                { fact.options.map(next => {\n                    return(\n                        <div className=\"inner-container fact-inner-container\">\n                            <h1>{next.number}</h1>\n                            <h2>Did You Know?</h2>\n\n                            { next.image !== '' &&\n                                <div className=\"fact-image\">\n                                    <img src={ next.image } alt=\"\"/>\n                                </div>\n                                || null\n                            }\n\n                            <div className=\"fact-description\" value={next.text}>\n                                <p>{next.text}</p>\n                            </div>\n                            <Link\n                                to='/game-menu'\n                                className=\"basic-btn fact-button\"\n                                onClick={this.handleChange}\n                                name={fact.id}\n                                value={next.id}\n                            >\n                                <h3>Next</h3>\n                            </Link>\n                        </div>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nexport default class FactFormat extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            current: 1\n        }\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange() {\n        this.setState((prevState) => ({\n            current: prevState.current + 1\n        }))\n    }\n\n    render () {\n        const facts = this.props.facts;\n\n        console.log(facts)\n        return (\n            <div className=\"container fact-container\">\n\n                {this.state.current <= facts.length &&\n                    <FactComponent\n                        fact={facts[this.state.current - 1]}\n                        onNextButton={this.handleChange}\n                    />\n                }\n\n                {this.state.current > facts.length &&\n                    <div className=\"inner-container\">\n                    <Link to=\"/game-menu\" className=\"basic-btn return-menu\">\n                        <h3>Return to Menu</h3>\n                    </Link>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n","import React, {Component, useState} from 'react';\nimport './quizStructure.css';\nimport { Link } from 'react-router-dom';\n\nimport Back from \"../../backButton/back\";\nimport HintButton from '../assets/hint-button.svg';\nimport UserIcon from '../assets/user-icon.svg';\n\n// Question Text/Answer Button Component\nclass Question extends Component {\n    constructor(props){\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        e.preventDefault(); //Prevents full refresh\n        this.props.onChoiceChange(e.target.value);\n    }\n\n    guidePopup() {\n        return(\n            <div className=\"guide-popup-container\">\n\n\n            </div>\n        )\n    }\n\n    render(){\n        const question = this.props.question; // Variable set to equal question from props\n\n        return(\n            <div>\n                <div className=\"question-component\">\n                    {question.text}\n                </div>\n                <div className=\"answer-container\">\n                    { question.choices.map(choice => {\n                        return(\n                                <button\n                                    type=\"submit\"\n                                    onClick={this.handleChange}\n                                    name={question.id}\n                                    value={choice.id}\n                                    className=\"answer-btn\"\n                                >\n                                    {choice.text}\n                                </button>\n                        )\n                    })}\n                    <img\n                        src={HintButton}\n                        alt=\"\"\n                        className=\"hint-btn\"\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n// End of Question Text/Answer Button Component\n\n\n// Results Component\nclass Scorebox extends Component {\n    render(){\n        return(\n            <div className=\"question-count-container\">\n                Question {this.props.current} out of {this.props.total}\n            </div>\n        )\n    }\n}\n\nclass Results extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            overallScore: 0\n        }\n    }\n\n    overallScore = () => {\n        this.setState((prevState, props) => ({\n            overallScore: (prevState.overallScore + props.score) * 50\n        }))\n    }\n\n    render(){\n        var message = 'You passed the quiz!';\n        var link = <Link to=\"/game-menu\">Back to Menu</Link>\n\n\n        return(\n            <div className=\"results-absolute\">\n                <div className=\"results-container\">\n                    <div className=\"results-cont results-img\">\n                        <img src={UserIcon} alt=\"\"/>\n                    </div>\n\n                    <div className=\"results-cont results-text\">\n                        <h3>+{this.props.score} points!</h3>\n                        <h4>Congratulations!</h4>\n                    </div>\n\n                    <div className=\"results-cont results-link\">\n                        <Link\n                            to=\"/game-menu\"\n                            className=\"quiz-return-btn\"\n                            onClick={this.overallScore}\n                        >\n                            <h4>OK</h4>\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n// End of Results Component\n\n// Final Quiz Format Section\nexport default class QuizFormat extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            score: 0,\n            current: 1,\n            overallScore: 0\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(choice){\n        this.setState((prevState, props) => ({\n            current: prevState.current + 1,\n            score: choice === props.questions[prevState.current - 1].correct ? prevState.score + 50 : prevState.score,\n        }));\n        console.log(this.state.overallScore)\n    }\n\n    render () {\n        const questions = this.props.questions;\n\n        return (\n            <div className=\"quiz-container\">\n                <Back id=\"backButton\"/>\n                {this.state.current > questions.length &&\n                    <Results\n                        total={questions.length}\n                        score={this.state.overallScore + this.state.score}\n                    />\n                }\n\n                {this.state.current <= questions.length &&\n                    <Scorebox\n                        total={questions.length}\n                        current={this.state.current}\n                        score={this.state.score}\n                    />\n                }\n\n                {this.state.current <= questions.length &&\n                    <Question\n                        question={questions[this.state.current - 1]}\n                        onChoiceChange={this.handleChange}\n                    />\n                }\n\n            </div>\n        );\n    }\n}\n// End of Final Quiz Format Section\n","import React, {Component} from 'react';\nimport QuizFormat from \"../../quizStructure/quizStructure\";\n\nconst Questions = [\n    {\n        id: 1,\n        text: 'Who made the first flight in an aeroplane?',\n        choices:[\n            {\n                id: 'a',\n                text: 'The Cohen Bros.'\n            },\n            {\n                id: 'b',\n                text: 'Amelia Earhart'\n            },\n            {\n                id: 'c',\n                text: 'The Wright Bros.'\n            },\n            {\n                id: 'd',\n                text: 'The Montgolfier Bros.'\n            }\n        ],\n        correct: 'c'\n    },\n    {\n        id: 2,\n        text: 'What was the name of the man who started the Bristol Aeroplane Company?',\n        choices:[\n            {\n                id: 'a',\n                text: 'Orville Wright'\n            },\n            {\n                id: 'b',\n                text: 'Neil Armstrong'\n            },\n            {\n                id: 'c',\n                text: 'Isambard Kingdom Brunel'\n            },\n            {\n                id: 'd',\n                text: 'Sir George White'\n            }\n        ],\n        correct: 'd'\n    },\n    {\n        id: 3,\n        text: 'What was the first plane designed and built in Bristol?',\n        choices:[\n            {\n                id: 'a',\n                text: 'The Zodiac'\n            },\n            {\n                id: 'b',\n                text: 'The Boxkite'\n            },\n            {\n                id: 'c',\n                text: 'The Scout'\n            },\n            {\n                id: 'd',\n                text: 'The Wright Flyer'\n            }\n        ],\n        correct: 'b'\n    },\n    {\n        id: 4,\n        text: 'What were the first planes made out of?',\n        choices:[\n            {\n                id: 'a',\n                text: 'Wooden frame and fabric cover'\n            },\n            {\n                id: 'b',\n                text: 'Aluminium frame and fabric cover'\n            },\n            {\n                id: 'c',\n                text: 'Plastic sheets'\n            },\n            {\n                id: 'd',\n                text: 'Iron frame and fabric cover'\n            }\n        ],\n        correct: 'a'\n    },\n    {\n        id: 5,\n        text: 'What was the fabric covering known as?',\n        choices:[\n            {\n                id: 'a',\n                text: 'French Blanket'\n            },\n            {\n                id: 'b',\n                text: 'Australian Throw'\n            },\n            {\n                id: 'c',\n                text: 'Egyptian Cloth'\n            },\n            {\n                id: 'd',\n                text: 'British Quilt'\n            }\n        ],\n        correct: 'c'\n    },\n    {\n        id: 6,\n        text: 'How fast could the Boxkite aeroplane go?',\n        choices:[\n            {\n                id: 'a',\n                text: 'up to 150 mph'\n            },\n            {\n                id: 'b',\n                text: 'up to 50 mph'\n            },\n            {\n                id: 'c',\n                text: 'up to 20 mph'\n            },\n            {\n                id: 'd',\n                text: 'up to 85 mph'\n            }\n        ],\n        correct: 'b'\n    },\n]\n\nclass SectionOneQuiz extends Component {\n    render () {\n        return (\n            <div>\n                <QuizFormat\n                    questions={Questions}\n                />\n            </div>\n        );\n    }\n}\n\nexport default SectionOneQuiz;\n","import React, {Component} from 'react';\nimport QuizFormat from \"../../quizStructure/quizStructure\";\n\nconst Questions = [\n    {\n        id: 1,\n        text: 'What were planes first used for in World War 1?',\n        choices:[\n            {\n                id: 'a',\n                text: 'Spying on enemy troops'\n            },\n            {\n                id: 'b',\n                text: 'Battling each other'\n            },\n            {\n                id: 'c',\n                text: 'Transporting equipment'\n            },\n            {\n                id: 'd',\n                text: 'Dropping bombs'\n            }\n        ],\n        correct: 'a'\n    },\n    {\n        id: 2,\n        text: 'Who designed the Bristol Fighter?',\n        choices:[\n            {\n                id: 'a',\n                text: 'The Red Baron'\n            },\n            {\n                id: 'b',\n                text: 'Captain Frank Barnwell'\n            },\n            {\n                id: 'c',\n                text: 'Field Marshall Haig'\n            },\n            {\n                id: 'd',\n                text: 'Sir George White'\n            }\n        ],\n        correct: 'b'\n    },\n    {\n        id: 3,\n        text: 'WW1 workers painted the plane\\'s fabric with \\'dope\\', which made them ill. What did they drink to feel better?',\n        choices:[\n            {\n                id: 'a',\n                text: 'Water'\n            },\n            {\n                id: 'b',\n                text: 'Orange Juice'\n            },\n            {\n                id: 'c',\n                text: 'Coffee'\n            },\n            {\n                id: 'd',\n                text: 'Milk'\n            }\n        ],\n        correct: 'd'\n    },\n    {\n        id: 4,\n        text: 'Look at the image below. What is the correct order to show how a wooden propeller is made?',\n        choices:[\n            {\n                id: 'a',\n                text: '1, 2, 5, 6, 3, 4'\n            },\n            {\n                id: 'b',\n                text: '1, 3, 6, 4, 2, 5'\n            },\n            {\n                id: 'c',\n                text: '5, 1, 3, 6, 2, 4'\n            },\n            {\n                id: 'd',\n                text: '4, 2, 1, 3, 5, 6'\n            }\n        ],\n        correct: 'c'\n    },\n]\n\nclass SectionTwoQuiz extends Component {\n    render () {\n        return (\n            <div>\n                <QuizFormat questions={Questions} />\n            </div>\n        );\n    }\n}\n\nexport default SectionTwoQuiz;\n","import React, {Component} from \"react\";\nimport FactFormat from \"../../factFormat\";\n\nimport FactOne from './assets/factOne.svg'; import FactTwo from './assets/factTwo.svg'; import FactThree from './assets/factThree.svg';\n\nconst Facts = [\n    {\n        options: [\n            {\n                id: 1,\n                text: 'Most Bristol Boxkites were used to teach people to fly. When WWI broke out nearly half of the pilots had learned to fly in one.',\n                number: 'Fact 1 of 3',\n                image: FactOne\n            },\n        ],\n    },\n    {\n        options: [\n            {\n                id: 2,\n                text: 'The first pilots had to be very brave, they had nothing to protect them except a warm coat, hat and a simple harness to stop them falling out of their seat.',\n                number: 'Fact 2 of 3',\n                image: FactTwo\n            },\n        ]\n    },\n    {\n        options: [\n            {\n                id: 3,\n                number: 'Fact 3 of 3',\n                text: 'The controls for the Boxkite were very simple. A stick to move the elevators on the wings and a pedal to move the rudders on the tail left and right.',\n                image: FactThree\n            },\n        ]\n    },\n]\n\nclass SectionOneFact extends Component {\n    render () {\n        return(\n            <div>\n                <FactFormat facts={Facts} />\n            </div>\n        )\n    }\n}\n\nexport default SectionOneFact;\n","import React, {Component} from 'react';\nimport QuizFormat from \"../../quizStructure/quizStructure\";\n\nconst Questions = [\n    {\n        id: 1,\n        text: 'What does the rudder on an aeroplane do?',\n        choices:[\n            {\n                id: 'a',\n                text: 'Move it up and down'\n            },\n            {\n                id: 'b',\n                text: 'Move it left and right'\n            },\n            {\n                id: 'c',\n                text: 'Help it roll over'\n            },\n            {\n                id: 'd',\n                text: 'Keep the pilot cool'\n            }\n        ],\n        correct: 'b'\n    },\n    {\n        id: 2,\n        text: 'Bristol Aeroplane Company bought Filton Airfield from the Air Ministry at the end of WW1. How much did it cost?',\n        choices:[\n            {\n                id: 'a',\n                text: '£625'\n            },\n            {\n                id: 'b',\n                text: '£6,250'\n            },\n            {\n                id: 'c',\n                text: '£62,500'\n            },\n            {\n                id: 'd',\n                text: '£625,000'\n            }\n        ],\n        correct: 'c'\n    },\n    {\n        id: 3,\n        text: 'The Nakajima Company built Jupiter Engines with a licence and plans they bought from Bristol. What country were they from?',\n        choices:[\n            {\n                id: 'a',\n                text: 'Japan'\n            },\n            {\n                id: 'b',\n                text: 'Indonesia'\n            },\n            {\n                id: 'c',\n                text: 'Italy'\n            },\n            {\n                id: 'd',\n                text: 'Korea'\n            }\n        ],\n        correct: 'a'\n    },\n    {\n        id: 4,\n        text: 'Which model is of a plane that was sold to Chile and Hungary?',\n        choices:[\n            {\n                id: 'a',\n                text: 'Bristol Type 89'\n            },\n            {\n                id: 'b',\n                text: 'Bristol Type 72'\n            },\n            {\n                id: 'c',\n                text: 'Bristol Type 138A'\n            },\n            {\n                id: 'd',\n                text: 'Bristol Type 83B'\n            }\n        ],\n        correct: 'd'\n    },\n    {\n        id: 5,\n        text: 'Which model is of a plane that set an altitude record in 1936?',\n        choices:[\n            {\n                id: 'a',\n                text: 'Bristol Type 138A'\n            },\n            {\n                id: 'b',\n                text: 'Bristol Type 89'\n            },\n            {\n                id: 'c',\n                text: 'Bristol Type 83B'\n            },\n            {\n                id: 'd',\n                text: 'Bristol Type 72'\n            }\n        ],\n        correct: 'a'\n    },\n    {\n        id: 6,\n        text: 'How many air forces used Bristol Bulldogs?',\n        choices:[\n            {\n                id: 'a',\n                text: '2'\n            },\n            {\n                id: 'b',\n                text: '4'\n            },\n            {\n                id: 'c',\n                text: '6'\n            },\n            {\n                id: 'd',\n                text: '8'\n            }\n        ],\n        correct: 'd'\n    },\n]\n\nclass SectionThreeQuiz extends Component {\n    render () {\n        return (\n            <div>\n                <QuizFormat questions={Questions} />\n            </div>\n        );\n    }\n}\n\nexport default SectionThreeQuiz;\n","import React, {Component} from 'react';\nimport QuizFormat from \"../../quizStructure/quizStructure\";\n\nconst Questions = [\n    {\n        id: 1,\n        text: 'What were Bristol engines named after?',\n        choices:[\n            {\n                id: 'a',\n                text: 'Stars'\n            },\n            {\n                id: 'b',\n                text: 'Rivers'\n            },\n            {\n                id: 'c',\n                text: 'Characters from myths and legends'\n            },\n            {\n                id: 'd',\n                text: 'Famous people'\n            }\n        ],\n        correct: 'c'\n    },\n    {\n        id: 2,\n        text: 'What was painted on the roof of the factory during WW2?',\n        choices:[\n            {\n                id: 'a',\n                text: 'Positive message for the workers'\n            },\n            {\n                id: 'b',\n                text: 'Camouflage'\n            },\n            {\n                id: 'c',\n                text: 'Blackout'\n            },\n            {\n                id: 'd',\n                text: 'Company logo'\n            }\n        ],\n        correct: 'b'\n    },\n    {\n        id: 3,\n        text: 'What was the nickname given to the Bristol Beaufighter by the Japanese?',\n        choices:[\n            {\n                id: 'a',\n                text: 'Deadly wing'\n            },\n            {\n                id: 'b',\n                text: 'Whispering death'\n            },\n            {\n                id: 'c',\n                text: 'Silent wing'\n            },\n            {\n                id: 'd',\n                text: 'Whispering one'\n            }\n        ],\n        correct: 'b'\n    },\n    {\n        id: 4,\n        text: 'What were the secret factories created during WW2 called?',\n        choices:[\n            {\n                id: 'a',\n                text: 'Shadow factories'\n            },\n            {\n                id: 'b',\n                text: 'Ghost factories'\n            },\n            {\n                id: 'c',\n                text: 'Underground factories'\n            },\n            {\n                id: 'd',\n                text: 'Mystery factories'\n            }\n        ],\n        correct: 'a'\n    },\n    {\n        id: 5,\n        text: 'What was happening in Fry\\'s Chocolate Factory during WW2?',\n        choices:[\n            {\n                id: 'a',\n                text: 'Aircraft assembly'\n            },\n            {\n                id: 'b',\n                text: 'Engine assembly'\n            },\n            {\n                id: 'c',\n                text: 'Engine testing'\n            },\n            {\n                id: 'd',\n                text: 'Engine design and component making'\n            }\n        ],\n        correct: 'd'\n    },\n    {\n        id: 6,\n        text: 'What was happening in Whitchurch Airport?',\n        choices:[\n            {\n                id: 'a',\n                text: 'Aircraft assembly'\n            },\n            {\n                id: 'b',\n                text: 'Aircraft component making'\n            },\n            {\n                id: 'c',\n                text: 'Engine assembly'\n            },\n            {\n                id: 'd',\n                text: 'Gun turrets'\n            }\n        ],\n        correct: 'a'\n    },\n    {\n        id: 7,\n        text: 'What does 501 Squadron\\'s motto \"Nil Time\" mean?',\n        choices:[\n            {\n                id: 'a',\n                text: 'Nothing changes'\n            },\n            {\n                id: 'b',\n                text: 'Hurry up'\n            },\n            {\n                id: 'c',\n                text: 'Fear nothing'\n            },\n            {\n                id: 'd',\n                text: 'No time'\n            }\n        ],\n        correct: 'c'\n    },\n]\n\nclass SectionFourQuiz extends Component {\n    render () {\n        return (\n            <div>\n                <QuizFormat questions={Questions} />\n            </div>\n        );\n    }\n}\n\nexport default SectionFourQuiz;\n","import React, {Component} from 'react';\nimport QuizFormat from \"../../quizStructure/quizStructure\";\n\nconst Questions = [\n    {\n        id: 1,\n        text: 'How many Brabazon\\'s were made?',\n        choices:[\n            {\n                id: 'a',\n                text: '100'\n            },\n            {\n                id: 'b',\n                text: '1'\n            },\n            {\n                id: 'c',\n                text: '20'\n            },\n            {\n                id: 'd',\n                text: '5'\n            }\n        ],\n        correct: 'b'\n    },\n    {\n        id: 2,\n        text: 'Which Bristol enging powered Donald Campbell\\'s Bluebird CN7 car when it broke the landspeed record in 1964?',\n        choices:[\n            {\n                id: 'a',\n                text: 'Hercules'\n            },\n            {\n                id: 'b',\n                text: 'Orpheus'\n            },\n            {\n                id: 'c',\n                text: 'Proteus'\n            },\n            {\n                id: 'd',\n                text: 'Olympus'\n            }\n        ],\n        correct: 'c'\n    },\n]\n\nclass SectionFiveQuiz extends Component {\n    render () {\n        return (\n            <div>\n                <QuizFormat questions={Questions} />\n            </div>\n        );\n    }\n}\n\nexport default SectionFiveQuiz;\n","import React, {Component} from 'react';\nimport QuizFormat from \"../../quizStructure/quizStructure\";\n\nconst Questions = [\n    {\n        id: 1,\n        text: 'Where does the luggage go when you are on a plane?',\n        choices:[\n            {\n                id: 'a',\n                text: 'In the roof'\n            },\n            {\n                id: 'b',\n                text: 'In the wings'\n            },\n            {\n                id: 'c',\n                text: 'Underneath the floor'\n            },\n            {\n                id: 'd',\n                text: 'In the tail'\n            }\n        ],\n        correct: 'c'\n    },\n    {\n        id: 2,\n        text: 'Find the A320 cockpit. Spot the difference between the real cockpit and the picture below',\n        choices:[\n            {\n                id: 'a',\n                text: 'The C320 Family'\n            },\n            {\n                id: 'b',\n                text: 'The B320 Group'\n            },\n            {\n                id: 'c',\n                text: 'The D320 Family'\n            },\n            {\n                id: 'd',\n                text: 'The A320 Family'\n            }\n        ],\n        correct: 'd'\n    },\n]\n\nclass SectionSevenQuiz extends Component {\n    render () {\n        return (\n            <div>\n                <QuizFormat questions={Questions} />\n            </div>\n        );\n    }\n}\n\nexport default SectionSevenQuiz;\n","import React, {Component} from 'react';\nimport QuizFormat from \"../../quizStructure/quizStructure\";\n\nconst Questions = [\n    {\n        id: 1,\n        text: 'How many passengers can go on Concorde Alpha Foxtrot at once?',\n        choices:[\n            {\n                id: 'a',\n                text: '300'\n            },\n            {\n                id: 'b',\n                text: '50'\n            },\n            {\n                id: 'c',\n                text: '150'\n            },\n            {\n                id: 'd',\n                text: '100'\n            }\n        ],\n        correct: 'd'\n    },\n    {\n        id: 2,\n        text: 'How many Concordes were made?',\n        choices:[\n            {\n                id: 'a',\n                text: '100'\n            },\n            {\n                id: 'b',\n                text: '5'\n            },\n            {\n                id: 'c',\n                text: '20'\n            },\n            {\n                id: 'd',\n                text: '40'\n            }\n        ],\n        correct: 'c'\n    },\n    {\n        id: 3,\n        text: 'Which two countries worked together to make the Concorde?',\n        choices:[\n            {\n                id: 'a',\n                text: 'UK & Germany'\n            },\n            {\n                id: 'b',\n                text: 'UK & USA'\n            },\n            {\n                id: 'c',\n                text: 'UK & Russia'\n            },\n            {\n                id: 'd',\n                text: 'UK & France'\n            }\n        ],\n        correct: 'd'\n    },\n]\n\nclass SectionNineQuiz extends Component {\n    render () {\n        return (\n            <div>\n                <QuizFormat questions={Questions} />\n            </div>\n        );\n    }\n}\n\nexport default SectionNineQuiz;\n","import React, {Component} from 'react';\nimport QuizFormat from \"../../quizStructure/quizStructure\";\n\nconst Questions = [\n    {\n        id: 1,\n        text: 'Who were the forty-niners?',\n        choices:[\n            {\n                id: 'a',\n                text: 'Bristol\\'s Baseball team'\n            },\n            {\n                id: 'b',\n                text: 'Everyone who graduated from Bristol training school in 1949'\n            },\n            {\n                id: 'c',\n                text: 'Bristol\\'s first jet engine design team'\n            },\n            {\n                id: 'd',\n                text: 'Bristol\\'s first guided weapons development team'\n            }\n        ],\n        correct: 'd'\n    },\n    {\n        id: 2,\n        text: 'What is the nickname of the Harrier Jet?',\n        choices:[\n            {\n                id: 'a',\n                text: 'Hop Jet'\n            },\n            {\n                id: 'b',\n                text: 'Jump Jet'\n            },\n            {\n                id: 'c',\n                text: 'Spring Jet'\n            },\n            {\n                id: 'd',\n                text: 'Bounce Jet'\n            }\n        ],\n        correct: 'b'\n    },\n    {\n        id: 3,\n        text: 'What is the name of the space rocket you can see in our exhibition?',\n        choices:[\n            {\n                id: 'a',\n                text: 'Skylark'\n            },\n            {\n                id: 'b',\n                text: 'Cuckoo'\n            },\n            {\n                id: 'c',\n                text: 'Black Arrow'\n            },\n            {\n                id: 'd',\n                text: 'Blue Jay'\n            }\n        ],\n        correct: 'a'\n    },\n    {\n        id: 4,\n        text: 'What was the name of the first missile designed at Filton?',\n        choices:[\n            {\n                id: 'a',\n                text: 'Thunderbird'\n            },\n            {\n                id: 'b',\n                text: 'Fireflash'\n            },\n            {\n                id: 'c',\n                text: 'Poodle'\n            },\n            {\n                id: 'd',\n                text: 'Bloodhound'\n            }\n        ],\n        correct: 'd'\n    },\n]\n\nclass SectionSixQuiz extends Component {\n    render () {\n        return (\n            <div>\n                <QuizFormat questions={Questions} />\n            </div>\n        );\n    }\n}\n\nexport default SectionSixQuiz;\n","import React, {Component} from 'react';\nimport QuizFormat from \"../../quizStructure/quizStructure\";\n\nconst Questions = [\n    {\n        id: 1,\n        text: 'Question for the user?',\n        choices:[\n            {\n                id: 'a',\n                text: 'Correct'\n            },\n            {\n                id: 'b',\n                text: 'Incorrect'\n            },\n            {\n                id: 'c',\n                text: 'Incorrect'\n            },\n            {\n                id: 'd',\n                text: 'Incorrect'\n            }\n        ],\n        correct: 'a'\n    },\n    {\n        id: 2,\n        text: 'Question for the user?',\n        choices:[\n            {\n                id: 'a',\n                text: 'Correct'\n            },\n            {\n                id: 'b',\n                text: 'Incorrect'\n            },\n            {\n                id: 'c',\n                text: 'Incorrect'\n            },\n            {\n                id: 'd',\n                text: 'Incorrect'\n            }\n        ],\n        correct: 'a'\n    },\n]\n\nclass SectionEightQuiz extends Component {\n    render () {\n        return (\n            <div>\n                <QuizFormat questions={Questions} />\n            </div>\n        );\n    }\n}\n\nexport default SectionEightQuiz;\n","import React, {Component} from \"react\";\nimport FactFormat from \"../../factFormat\";\n\nimport FactOne from './assets/factOne.svg'; import FactTwo from './assets/factTwo.svg'; import FactThree from './assets/factThree.svg';\n\nconst Facts = [\n    {\n        options: [\n            {\n                id: 1,\n                text: 'The cockpits during WWI were so small that pilots could not wear parachutes, even if permitted. In fact, some generals forbid the use of parachutes because they believed it dampened the fighting spirit of the pilots. Luckily, times have changed.',\n                number: 'Fact 1 of 3',\n                image: FactOne\n            },\n        ],\n    },\n    {\n        options: [\n            {\n                id: 2,\n                text: 'Early aeroplanes were made from wood and fabric and caught fire easily so early pilots were as worried about fires as they were of crashing',\n                number: 'Fact 2 of 3',\n                image: FactTwo\n            },\n        ]\n    },\n    {\n        options: [\n            {\n                id: 3,\n                text: 'Pilots wore leather helmets like this to keep out the cold and the noise of their engine. Leather is warm, waterproof and also helps protect your head against fire.',\n                number: 'Fact 3 of 3',\n                image: FactThree\n            },\n        ]\n    },\n]\n\nclass SectionTwoFact extends Component {\n    render () {\n        return(\n            <div>\n                <FactFormat facts={Facts} />\n            </div>\n        )\n    }\n}\n\nexport default SectionTwoFact;\n","import React, {Component} from \"react\";\nimport FactFormat from \"../../factFormat\";\n\nimport FactOne from './assets/factOne.svg';\n\nconst Facts = [\n    {\n        options: [\n            {\n                id: 1,\n                text: 'Why was an aeroplane company making lorries? After WWI, there were lots of aeroplanes left over from the war so not many people wanted a new one. Aeroplane companies had to do other jobs until enough people wanted new aeroplanes again.',\n                number: 'Fact 1',\n                image: FactOne\n            },\n        ],\n    },\n]\n\nclass SectionThreeFact extends Component {\n    render () {\n        return(\n            <div>\n                <FactFormat facts={Facts} />\n            </div>\n        )\n    }\n}\n\nexport default SectionThreeFact;\n","import React, {Component} from \"react\";\nimport FactFormat from \"../../factFormat\";\n\nimport FactOne from './assets/factOne.svg'; import FactTwo from './assets/factTwo.svg'; import FactThree from './assets/factThree.svg';\n\nconst Facts = [\n    {\n        options: [\n            {\n                id: 1,\n                text: 'Britain knew the Second World War was coming and warned important industries. BAC started moving its workers to secret places across Bristol a month before the war officially began.',\n                number: 'Fact 1 of 3',\n                image: FactOne\n            },\n        ],\n    },\n    {\n        options: [\n            {\n                id: 2,\n                text: 'During WWII Germany tried to bomb important factories around the UK. To protect their workers, companies sent lots of them to work in secret and unexpected places around the city instead of in the main factory.',\n                number: 'Fact 2 of 3',\n                image: FactTwo\n            },\n        ]\n    },\n    {\n        options: [\n            {\n                id: 3,\n                text: 'Dispersal sites were usually placed in repurposed factories around the country but would you expect some people were designing planes in a swimming pool?',\n                number: 'Fact 3 of 3',\n                image: FactThree\n            },\n        ]\n    },\n]\n\nclass SectionFourFact extends Component {\n    render () {\n        return(\n            <div>\n                <FactFormat facts={Facts} />\n            </div>\n        )\n    }\n}\n\nexport default SectionFourFact;\n","import React, {Component} from \"react\";\nimport FactFormat from \"../../factFormat\";\n\nimport FactOne from './assets/factOne.svg';\n\nconst Facts = [\n    {\n        options: [\n            {\n                id: 1,\n                text: 'This little model is a Rolls-Royce idea for a flying car from the 1950\\'s. The car was never built but today people are looking at similar ideas again. Maybe this time we will be able to buy one?',\n                number: 'Fact 1',\n                image: FactOne\n            },\n        ],\n    },\n]\n\nclass SectionFiveFact extends Component {\n    render () {\n        return(\n            <div>\n                <FactFormat facts={Facts} />\n            </div>\n        )\n    }\n}\n\nexport default SectionFiveFact;\n","import React, {Component} from \"react\";\nimport FactFormat from \"../../factFormat\";\n\nimport FactOne from './assets/factOne.svg'; import FactTwo from './assets/factTwo.svg';\n\nconst Facts = [\n    {\n        options: [\n            {\n                id: 1,\n                text: 'Did you know that jet engines are used to power large ships as well as aeroplanes? The Royal Navy\\'s Invincible Class Aircraft Carriers were powered by Olympus engines just like Concorde was.',\n                number: 'Fact 1 of 2',\n                image: FactOne\n            },\n        ],\n    },\n    {\n        options: [\n            {\n                id: 2,\n                text: 'People working in Filton have been part of over 60 different spacecraft projects including the Hubble Telescope and the Giotto probe which visited Halley\\'s Comet.',\n                number: 'Fact 2 of 2',\n                image: FactTwo\n            },\n        ],\n    },\n]\n\nclass SectionSixFact extends Component {\n    render () {\n        return(\n            <div>\n                <FactFormat facts={Facts} />\n            </div>\n        )\n    }\n}\n\nexport default SectionSixFact;\n","import React, {Component} from \"react\";\nimport FactFormat from \"../../factFormat\";\n\nimport FactOne from './assets/factOne.svg'; import FactTwo from './assets/factTwo.svg'; import FactThree from './assets/factThree.svg';\n\nconst Facts = [\n    {\n        options: [\n            {\n                id: 1,\n                text: 'Did you know that a jumbo jet flying from London to New York burns about 4 litres of fuel per second? That is about 82,353 litres for the whole journey. That is enough fuel to fill up your family car over 1000 times!',\n                number: 'Fact 1 of 3',\n                image: FactOne\n            },\n        ],\n    },\n    {\n        options: [\n            {\n                id: 2,\n                text: 'Did you know that most of an airliner\\'s fuel is stored in its wings?',\n                number: 'Fact 2 of 3',\n                image: FactTwo\n            },\n        ],\n    },\n    {\n        options: [\n            {\n                id: 3,\n                text: 'Airliner wings can change shape just like the wings of birds. This helps them take off, cruise and land more easily.',\n                number: 'Fact 3 of 3',\n                image: FactThree\n            },\n        ],\n    },\n]\n\nclass SectionSevenFact extends Component {\n    render () {\n        return(\n            <div>\n                <FactFormat facts={Facts} />\n            </div>\n        )\n    }\n}\n\nexport default SectionSevenFact;\n","import React, {Component} from \"react\";\nimport FactFormat from \"../../factFormat\";\n\nimport FactOne from './assets/factOne.svg';\n\nconst Facts = [\n    {\n        options: [\n            {\n                id: 1,\n                text: 'Have you notice the cushion on display? The Queen travelled on Concorde lots of times and when she did, she had her own specially made cushion for her seat. This is one of the cushions she used.',\n                number: 'Fact 1',\n                image: FactOne\n            },\n        ],\n    },\n]\n\nclass SectionNineFact extends Component {\n    render () {\n        return(\n            <div>\n                <FactFormat facts={Facts} />\n            </div>\n        )\n    }\n}\n\nexport default SectionNineFact;\n","import React, {Component} from \"react\";\nimport FactFormat from \"../../factFormat\";\n\nconst Facts = [\n    {\n        options: [\n            {\n                id: 1,\n                text: 'Section Eight Fact No. 1',\n                number: 'Fact 1 of 2',\n            },\n        ],\n    },\n    {\n        options: [\n            {\n                id: 2,\n                text: 'Section Eight Fact No. 2',\n                number: 'Fact 2 of 2',\n            },\n        ],\n    },\n]\n\nclass SectionEightFact extends Component {\n    render () {\n        return(\n            <div>\n                <FactFormat facts={Facts} />\n            </div>\n        )\n    }\n}\n\nexport default SectionEightFact;\n","import React, {Component} from 'react';\nimport Back from \"../../components/backButton/back\";\nimport {Link} from \"react-router-dom\";\nimport './gameGuide.css';\n\nimport LockedIcon from '../../components/map/assets/quiz-locked.svg'\nimport IncompleteIcon from '../../components/map/assets/quiz-icon.svg'\nimport CompleteIcon from '../../components/map/assets/quiz-complete.svg'\nimport BackImg from \"../../images/left-close.svg\";\nimport HeaderImg from \"./assets/guide-header.svg\";\nimport AlfieImg from \"./assets/alfie-character.svg\";\nimport CalibrateImg from \"./assets/cabibrate-icon.svg\"\n\nclass GameGuide extends Component {\n    state = {\n        showFirstScreen: true,\n        showSecondScreen: false,\n        showThirdScreen: false\n    }\n\n    toggleFirstScreen() {\n        this.setState({\n            showFirstScreen: !this.state.showFirstScreen\n        })\n    }\n    toggleSecondScreen() {\n        this.setState({\n            showSecondScreen: !this.state.showSecondScreen\n        })\n    }\n    toggleThirdScreen() {\n        this.setState({\n            showThirdScreen: !this.state.showThirdScreen\n        })\n    }\n\n    render () {\n\n        const { showFirstScreen } = this.state;\n        const { showSecondScreen } = this.state;\n        const { showThirdScreen } = this.state;\n\n        return (\n            <div>\n            { showFirstScreen && !showSecondScreen && !showThirdScreen &&\n                <div className=\"container guide-container\">\n                    <Back />\n                    <div className=\"inner-container\">\n                        <h2>How To Play</h2>\n                        <div className=\"inner-guide-container\">\n                            <h4 className=\"guide-subtitle\">Walk Around, Complete Activities & Collect Points</h4>\n\n                            <div className=\"guide-interaction-container\">\n                                <img src={ LockedIcon } alt=\"Locked Icon\"/>\n                                <div>\n                                    <h4><strong>LOCKED</strong></h4>\n                                    <p>Move closer to this activity to unlock it</p>\n                                </div>\n                            </div>\n\n                            <div className=\"guide-interaction-container\">\n                                <img src={ IncompleteIcon } alt=\"Incomplete Icon\"/>\n                                <div>\n                                    <h4><strong>UNLOCKED</strong></h4>\n                                    <p>Tap activity to complete it</p>\n                                </div>\n                            </div>\n\n                            <div className=\"guide-interaction-container\">\n                                <img src={ CompleteIcon } alt=\"Complete Icon\"/>\n                                <div>\n                                    <h4><strong>COMPLETED</strong></h4>\n                                    <p>Task has already been completed</p>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                    <div className=\"next-button-container\">\n                        <Link\n                            className=\"next-button\"\n                            onClick={() => {\n                                this.toggleFirstScreen();\n                                this.toggleSecondScreen();\n                            }}\n                        >\n                            <h3>Next</h3>\n                        </Link>\n                    </div>\n                </div>\n            }\n\n            {\n                showSecondScreen && !showFirstScreen && !showThirdScreen &&\n                <div className=\"container guide-container\">\n                    <div className=\"back-btn\"> {/* Back Button Container */}\n                        <button\n                            onClick={() => {\n                                this.toggleFirstScreen();\n                                this.toggleSecondScreen();\n                            }}\n                        >\n                            <img src={BackImg} alt=\"\" />\n                        </button>\n                    </div>\n                    <div className=\"inner-container\">\n                        <h2>How To Play</h2>\n                        <div className=\"inner-guide-container\">\n                            <h4 className=\"guide-subtitle\">\n                                Score points by completing activities.<br/>\n                                More points means a higher position on the leaderboard!\n                            </h4>\n                            <img src={HeaderImg} alt=\"Header Image\" />\n                            <h4 className=\"guide-subtitle\">\n                                The progress bar shows how far through the adventure you are. <br/>\n                                Each completed activity adds to the progress bar\n                            </h4>\n\n                        </div>\n                    </div>\n                    <div className=\"next-button-container\">\n                        <Link\n                            className=\"next-button\"\n                            onClick={() => {\n                                this.toggleSecondScreen();\n                                this.toggleThirdScreen();\n                            }}\n                        >\n                            <h3>Next</h3>\n                        </Link>\n                    </div>\n                </div>\n            }\n\n                {\n                    showThirdScreen && !showFirstScreen && !showSecondScreen &&\n                    <div className=\"container guide-container\">\n                        <div className=\"back-btn\"> {/* Back Button Container */}\n                            <button\n                                onClick={() => {\n                                    this.toggleSecondScreen();\n                                    this.toggleThirdScreen();\n                                }}\n                            >\n                                <img src={BackImg} alt=\"\" />\n                            </button>\n                        </div>\n                        <div className=\"inner-container\">\n                            <h2>How To Play</h2>\n                            <div className=\"inner-guide-container\">\n                                <h4 className=\"guide-subtitle\">Ready for take-off!</h4>\n                                <h4 className=\"guide-subtitle\">Explore the museum to unlock activities and begin your adventure.</h4>\n                                <h4 className=\"guide-subtitle\">Click on the calibration button to refresh your position on the map if needed.</h4>\n                                <div className=\"guide-image-container\">\n                                    <img src={CalibrateImg} alt=\"Calibration Button\"\n                                         className=\"guide-calibrate-img\"\n                                    />\n                                    <img src={AlfieImg} alt=\"Alfie Waving\" />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"next-button-container\">\n                            <Link\n                                className=\"next-button\"\n                                to=\"/game-menu\"\n                            >\n                                <h3>Next</h3>\n                            </Link>\n                        </div>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default GameGuide;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport './imagePreview.css';\nimport PilotHelmet from \"../assets/helmet.png\";\n\nexport const ImagePreview = ({ dataUri, isFullscreen }) => {\n    let classNameFullscreen = isFullscreen ? 'demo-image-preview-fullscreen' : '';\n\n    return (\n        <div className={'demo-image-preview' + classNameFullscreen}>\n            <div className=\"image-overlay\">\n                <img src={PilotHelmet} alt=\"\" style={{width: '300px'}} />\n            </div>\n            <img src={dataUri} />\n        </div>\n    )\n}\n\nImagePreview.propTypes = {\n    dataUri: PropTypes.string,\n    isFullscreen: PropTypes.bool\n};\n\nexport default ImagePreview;\n","// import React, {Component} from 'react';\n// import Camera from 'react-camera'\n//\n// export default class SectionOnePic extends Component {\n//     constructor (props) {\n//         super(props);\n//         this.takePicture = this.takePicture.bind(this);\n//     }\n//\n//     takePicture() {\n//         this.camera.capture()\n//             .then(blob => {\n//                 this.img.src = URL.createObjectURL(blob);\n//                 this.img.onload = () => { URL.revokeObjectURL(this.src) }\n//             })\n//     }\n//\n//     render() {\n//         return (\n//             <div style={style.container}>\n//                 <Camera\n//                     style={style.preview}\n//                     ref={(cam) => { this.camera = cam }}\n//                 >\n//                     <div\n//                         style={style.captureContainer}\n//                         onClick={this.takePicture}\n//                     >\n//                         <button style={style.captureButton}>Press me</button>\n//                     </div>\n//                 </Camera>\n//                 <div style={style.captureImageContainer}>\n//                     <img\n//                         style={style.captureImage}\n//                         ref={(img) => { this.img = img }}\n//                     />\n//                 </div>\n//             </div>\n//         )\n//     }\n// };\n//\n// const style = {\n//     preview: {\n//         position: 'relative', width: '50%'\n//     },\n//\n//     captureContainer: {\n//         display: 'flex', position: 'absolute',\n//         justifyContent: 'center', zIndex: 1,\n//         top: 0, width: '50vw'\n//     },\n//\n//     captureButton: {\n//         backgroundColor: '#fff', borderRadius: '50%',\n//         height: 56, width: 56,\n//         color: '#000', margin: 20, zIndex: 2\n//     },\n//\n//     captureImageContainer: {\n//         width: '50%', position: 'absolute', top: 0\n//     }\n// }\n//\n// import React from \"react\";\n// import Webcam from \"react-webcam\";\n//\n// const videoConstraints = {\n//     width: '100vw',\n//     height: '100vh',\n//     facingMode: 'user'\n// }\n//\n// const SectionOnePic = () => {\n//     const webcamRef = React.useRef(null);\n//\n//     const capture = React.useCallback(() => {\n//         const imageSrc = webcamRef.current.getScreenshot();\n//     }, [webcamRef] );\n//\n//     return(\n//         <>\n//             <Webcam\n//                 audio={false}\n//                 ref={webcamRef}\n//                 height={100} width={100}\n//                 screenshotFormat=\"image/jpeg\"\n//                 videoConstraints={videoConstraints}\n//             />\n//             <button onClick={capture} style={{position: 'absolute', top: 0, left: 0}}>\n//                 <h3>Capture</h3>\n//             </button>\n//         </>\n//     )\n// }\n//\n// export default SectionOnePic;\n\n\nimport React, {Component, useState} from 'react';\nimport Camera from 'react-html5-camera-photo';\nimport 'react-html5-camera-photo/build/css/index.css';\nimport ImagePreview from \"../microservices/imagePreview\";\n\nimport './sectionPic.css'\n\nimport PilotHelmet from '../assets/helmet.png';\nimport {Link} from \"react-router-dom\";\n\nfunction SectionOnePic(props) {\n    const [dataUri, setDataUri] = useState(null);\n\n    function handleTakePhotoAnimationDone(dataUri){\n        console.log(\"Take Photo\")\n        setDataUri(dataUri);\n    }\n\n    function handleResetImage() {\n        setDataUri(null);\n    }\n\n    const isFullscreen = true;\n    return(\n        <div className=\"container photo-container\">\n            <h2>Snap A Picture</h2>\n            {\n                (dataUri) ?\n                    // If photo has been taken\n                    <div className=\"inner-container camera-container\">\n                        <ImagePreview\n                            dataUri={dataUri}\n                        />\n                        <button onClick={handleResetImage}>Reset</button>\n                    </div> :\n                    //If photo hasn't been taken\n                    <div className=\"inner-container camera-container\">\n                        <div className=\"image-overlay\">\n                            <img src={PilotHelmet} alt=\"\" style={{width: '300px'}} />\n                        </div>\n                        <Camera\n                            onTakePhotoAnimationDone={handleTakePhotoAnimationDone}\n                        >\n                        </Camera>\n                    </div>\n            }\n            <div className=\"next-button-container\">\n                <Link\n                    to=\"/game-menu\"\n                    className=\"next-button\"\n                >\n                    <h3>Next</h3>\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default SectionOnePic;\n","import React, {Component} from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Axios from \"axios\";\n\nimport DeviceOrientation, { Orientation } from 'react-screen-orientation';\n\nimport Welcome from \"./screens/welcome/welcome\";\nimport PlayerInfo from \"./screens/playerInfo/playerInfo\";\nimport Accessibility from \"./screens/accessibility/accessibility\";\nimport Character from \"./screens/character/character\";\nimport Ready from \"./screens/ready/ready\";\nimport TermsConditions from \"./screens/termsConditions/termsConditions\";\nimport GameMenu from \"./screens/gameMenu/gameMenu\";\nimport FactFormat from \"./components/fact/factFormat\";\nimport SectionOneQuiz from \"./components/quiz/quizzes/sectionOne/sectionOneQuiz\";\nimport SectionTwoQuiz from \"./components/quiz/quizzes/sectionTwo/sectionTwoQuiz\";\nimport SectionOneFact from \"./components/fact/facts/sectionOne/sectionOneFact\";\nimport SectionThreeQuiz from \"./components/quiz/quizzes/sectionThree/sectionThreeQuiz\";\nimport SectionFourQuiz from \"./components/quiz/quizzes/sectionFour/sectionFourQuiz\";\nimport SectionFiveQuiz from \"./components/quiz/quizzes/sectionFive/sectionFiveQuiz\";\nimport SectionSevenQuiz from \"./components/quiz/quizzes/sectionSeven/sectionSevenQuiz\";\nimport SectionNineQuiz from \"./components/quiz/quizzes/sectionNine/sectionNineQuiz\";\nimport SectionSixQuiz from \"./components/quiz/quizzes/sectionSix/sectionSixQuiz\";\nimport SectionEightQuiz from \"./components/quiz/quizzes/sectionEight/sectionEightQuiz\";\nimport SectionTwoFact from \"./components/fact/facts/sectionTwo/sectionTwoFact\";\nimport SectionThreeFact from \"./components/fact/facts/sectionThree/sectionThreeFact\";\nimport SectionFourFact from \"./components/fact/facts/sectionFour/sectionFourFact\";\nimport SectionFiveFact from \"./components/fact/facts/sectionFive/sectionFiveFact\";\nimport SectionSixFact from \"./components/fact/facts/sectionSix/sectionSixFact\";\nimport SectionSevenFact from \"./components/fact/facts/sectionSeven/sectionSevenFact\";\nimport SectionNineFact from \"./components/fact/facts/sectionNine/sectionNineFact\";\nimport SectionEightFact from \"./components/fact/facts/sectionEight/sectionEightFact\";\nimport GameGuide from \"./screens/gameGuide/gameGuide\";\nimport SectionOnePic from \"./components/picture/pictures/sectionOnePic\";\n\nclass App extends Component {\n    render() {\n        Axios({\n            method: \"GET\",\n            url: \"http://localhost:8000\",\n            headers: { \"Content-Type\": \"application/json\" }\n        })\n            .then(res => {\n                console.log(res.data.message);\n            });\n          return (\n              // <DeviceOrientation lockOrientation={'portrait'}>\n              //      <Orientation orientation='portrait' alwaysRender={false}>\n                      <BrowserRouter>\n                          <div className=\"container\">\n                              <Switch>\n                                  <div>\n                                      <div>\n                                          <Route path=\"/\" exact={true} component={Welcome}/>\n                                      </div>\n                                      <div>\n                                          <Route path=\"/info\" component={PlayerInfo}/>\n                                      </div>\n                                      <div>\n                                          <Route path=\"/accessibility\" component={Accessibility}/>\n                                      </div>\n                                      <div>\n                                          <Route path=\"/character\" component={Character}/>\n                                      </div>\n                                      <div>\n                                          <Route path=\"/ready\" component={Ready}/>\n                                      </div>\n                                      <div>\n                                          <Route path=\"/ts-and-cs\" component={TermsConditions} />\n                                      </div>\n                                      <div>\n                                          <Route path=\"/game-menu\" component={GameMenu}/>\n                                      </div>\n                                      {/* Quiz Pages */}\n                                      <div>\n                                          <Route path=\"/section-one-quiz\" component={SectionOneQuiz} />\n                                      </div>\n                                      <div>\n                                          <Route path=\"/section-two-quiz\" component={SectionTwoQuiz} />\n                                      </div>\n                                      <div>\n                                          <Route path=\"/section-three-quiz\" component={SectionThreeQuiz} />\n                                      </div>\n                                      <div>\n                                          <Route path=\"/section-four-quiz\" component={SectionFourQuiz} />\n                                      </div>\n                                      <div>\n                                          <Route path=\"/section-five-quiz\" component={SectionFiveQuiz} />\n                                      </div>\n                                      <div>\n                                          <Route path=\"/section-six-quiz\" component={SectionSixQuiz} />\n                                      </div>\n                                      <div>\n                                          <Route path=\"/section-seven-quiz\" component={SectionSevenQuiz} />\n                                      </div>\n                                      <div>\n                                          <Route path=\"/section-eight-quiz\" component={SectionEightQuiz} />\n                                      </div>\n                                      <div>\n                                          <Route path=\"/section-nine-quiz\" component={SectionNineQuiz} />\n                                      </div>\n                                      {/* End of Quiz Pages */}\n                                      {/* Fact Pages */}\n                                      <div>\n                                          <Route path=\"/section-one-fact\" component={SectionOneFact} />\n                                      </div>\n                                      <div>\n                                          <Route path=\"/section-two-fact\" component={SectionTwoFact} />\n                                      </div>\n                                      <div>\n                                          <Route path=\"/section-three-fact\" component={SectionThreeFact} />\n                                      </div>\n                                      <div>\n                                          <Route path=\"/section-four-fact\" component={SectionFourFact} />\n                                      </div>\n                                      <div>\n                                          <Route path=\"/section-five-fact\" component={SectionFiveFact} />\n                                      </div>\n                                      <div>\n                                          <Route path=\"/section-six-fact\" component={SectionSixFact} />\n                                      </div>\n                                      <div>\n                                          <Route path=\"/section-seven-fact\" component={SectionSevenFact} />\n                                      </div>\n                                      <div>\n                                          <Route path=\"/section-eight-fact\" component={SectionEightFact} />\n                                      </div>\n                                      <div>\n                                          <Route path=\"/section-nine-fact\" component={SectionNineFact} />\n                                      </div>\n                                      {/* End of Fact Pages */}\n\n                                      {/* Picture Pages */}\n                                      <div>\n                                          <Route path=\"/section-one-pic\" component={SectionOnePic} />\n                                      </div>\n                                      {/* End of Picture Pages */}\n\n                                      <div>\n                                          <Route path=\"/fact\" component={FactFormat} />\n                                      </div>\n                                      <div>\n                                          <Route path=\"/user-guide\" component={GameGuide} />\n                                      </div>\n                                  </div>\n                              </Switch>\n                          </div>\n                      </BrowserRouter>\n                   // </Orientation>\n                   // <Orientation orientation='landscape' alwaysRender={false} className=\"locked\">\n                   //     <div>\n                   //         <p>Please rotate your device</p>\n                   //     </div>\n                   // </Orientation>\n              // </DeviceOrientation>\n\n\n          );\n    }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n            <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/left-close.02de334e.svg\";","module.exports = __webpack_public_path__ + \"static/media/quiz-icon.e52afb50.svg\";","module.exports = __webpack_public_path__ + \"static/media/quiz-complete.429e2f10.svg\";","module.exports = __webpack_public_path__ + \"static/media/helmet.07c4bd6c.png\";","module.exports = __webpack_public_path__ + \"static/media/lavel-inactive-easy.beb37350.svg\";","module.exports = __webpack_public_path__ + \"static/media/lavel-inactive-medium.7aef2188.svg\";","module.exports = __webpack_public_path__ + \"static/media/level-inactive-hard.9d1dcc85.svg\";"],"sourceRoot":""}