{"ast":null,"code":"var _jsxFileName = \"/Users/ryandawkes/Desktop/aero-frontend/src/components/mapTestTwo/mapTest.js\";\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n}; // Impromptu JSON data for locations\n\nconst Interaction = {\n  locations: [{\n    \"id\": 1,\n    \"type\": \"Quiz\",\n    \"coordinates\": [51.523147, -2.577680],\n    \"description\": \"Test Me!\"\n  }, {\n    \"id\": 2,\n    \"type\": \"Fact\",\n    \"coordinates\": [51.523160, -2.578440],\n    \"description\": \"Learn!\"\n  }, {\n    \"id\": 3,\n    \"type\": \"Game\",\n    \"coordinates\": [51.523531, -2.578289],\n    \"description\": \"Let's Play!\"\n  }]\n};\n\nclass MapTest extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      latitude: null,\n      longitude: null,\n      userAddress: null\n    };\n    this.getLocation = this.getLocation.bind(this);\n    this.getCoordinates = this.getCoordinates.bind(this);\n  }\n\n  getLocation() {\n    if (navigator.geolocation) {\n      // navigator.geolocation.watchPosition(this.getCoordinates, this.handleLocationError);\n      navigator.geolocation.getCurrentPosition = position => {\n        console.log(position);\n      };\n    } else {\n      alert(\"Geolocation not supported by this browser\");\n    }\n  }\n\n  getCoordinates(position) {\n    const latlon = position.coords.latitude + \", \" + position.coords.longitude;\n    this.setState({\n      latitude: position.coords.latitude,\n      longitude: position.coords.longitude\n    });\n  } //Error Handling\n\n\n  handleLocationError(error) {\n    switch (error.code) {\n      case error.PERMISSION_DENIED:\n        alert(\"Denied request for Geolocation\");\n        break;\n\n      case error.POSITION_UNAVAILABLE:\n        alert(\"Location info is unavailable\");\n        break;\n\n      case error.TIMEOUT:\n        alert(\"Location request has timed out\");\n        break;\n\n      case error.UNKNOWN_ERR:\n        alert(\"An unknown error occurred\");\n        break;\n\n      default:\n        alert(\"An unknown error occurred\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.getLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, \"Location\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, \"Lon: \", this.state.longitude, \", Lat: \", this.state.latitude), /*#__PURE__*/React.createElement(Map, {\n      google: this.props.google,\n      zoom: 14,\n      style: mapStyles,\n      initialCenter: {\n        lat: this.state.latitude,\n        lng: this.state.longitude\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyC-AmFN95fVGvNGJrQULEoHAX-1BYkk7xg'\n})(MapTest);","map":{"version":3,"sources":["/Users/ryandawkes/Desktop/aero-frontend/src/components/mapTestTwo/mapTest.js"],"names":["React","Component","Map","GoogleApiWrapper","mapStyles","width","height","Interaction","locations","MapTest","constructor","props","state","latitude","longitude","userAddress","getLocation","bind","getCoordinates","navigator","geolocation","getCurrentPosition","position","console","log","alert","latlon","coords","setState","handleLocationError","error","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","UNKNOWN_ERR","render","google","lat","lng","apiKey"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\n\nconst mapStyles = {\n    width: '100%',\n    height: '100%',\n};\n\n// Impromptu JSON data for locations\nconst Interaction = {\n    locations: [\n        {\n            \"id\": 1,\n            \"type\": \"Quiz\",\n            \"coordinates\": [51.523147, -2.577680],\n            \"description\": \"Test Me!\"\n        },\n        {\n            \"id\": 2,\n            \"type\": \"Fact\",\n            \"coordinates\": [51.523160, -2.578440],\n            \"description\": \"Learn!\"\n        },\n        {\n            \"id\": 3,\n            \"type\": \"Game\",\n            \"coordinates\": [51.523531, -2.578289],\n            \"description\": \"Let's Play!\"\n        }\n    ]\n}\n\nclass MapTest extends Component {\n\n    constructor (props) {\n        super(props);\n        this.state = {\n            latitude: null,\n            longitude: null,\n            userAddress: null\n        };\n        this.getLocation = this.getLocation.bind(this);\n        this.getCoordinates = this.getCoordinates.bind(this);\n    }\n\n    getLocation() {\n        if(navigator.geolocation) {\n            // navigator.geolocation.watchPosition(this.getCoordinates, this.handleLocationError);\n            navigator.geolocation.getCurrentPosition = (position) => {\n                console.log(position);\n            }\n        } else {\n            alert(\"Geolocation not supported by this browser\");\n        }\n    }\n\n    getCoordinates(position) {\n        const latlon = position.coords.latitude + \", \" + position.coords.longitude\n        this.setState({\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude\n        })\n    }\n\n    //Error Handling\n    handleLocationError(error) {\n        switch(error.code){\n            case error.PERMISSION_DENIED:\n                alert(\"Denied request for Geolocation\")\n                break;\n            case error.POSITION_UNAVAILABLE:\n                alert(\"Location info is unavailable\")\n                break;\n            case error.TIMEOUT:\n                alert(\"Location request has timed out\")\n                break;\n            case error.UNKNOWN_ERR:\n                alert(\"An unknown error occurred\")\n                break;\n            default:\n                alert(\"An unknown error occurred\")\n        }\n    }\n\n    render () {\n        return (\n            <div>\n                <button onClick={this.getLocation}>Location</button>\n                <h2>Lon: { this.state.longitude }, Lat: {this.state.latitude}</h2>\n                <Map\n                    google={this.props.google}\n                    zoom={14}\n                    style={mapStyles}\n                    initialCenter={{\n                        lat: this.state.latitude,\n                        lng: this.state.longitude\n                    }}\n                />\n            </div>\n        );\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyC-AmFN95fVGvNGJrQULEoHAX-1BYkk7xg'\n})(MapTest);\n"]},"metadata":{},"sourceType":"module"}