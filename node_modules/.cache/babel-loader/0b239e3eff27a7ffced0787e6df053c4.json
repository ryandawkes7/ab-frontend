{"ast":null,"code":"var _jsxFileName = \"/Users/ryandawkes/Desktop/aero-frontend/src/components/mapTest/mapTest.js\";\nimport React, { Component } from 'react';\n\nclass MapTest extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      latitude: null,\n      longitude: null,\n      userAddress: null\n    };\n    this.getLocation = this.getLocation.bind(this);\n  }\n\n  getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(getCoordinates);\n    } else {\n      alert(\"Geolocation not supported by this browser\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, \"React Geolocation Example\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.getLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, \"Get Coordinates\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, \"HTML5 Coordinates\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, \"Latitude: \", this.state.latitude), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, \"Longitude: \", this.state.longitude), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, \"Address: \", this.state.userAddress));\n  }\n\n}\n\nexport default MapTest;","map":{"version":3,"sources":["/Users/ryandawkes/Desktop/aero-frontend/src/components/mapTest/mapTest.js"],"names":["React","Component","MapTest","constructor","props","state","latitude","longitude","userAddress","getLocation","bind","navigator","geolocation","getCurrentPosition","getCoordinates","alert","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAC5BE,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,IADD;AAETC,MAAAA,SAAS,EAAE,IAFF;AAGTC,MAAAA,WAAW,EAAE;AAHJ,KAAb;AAKA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDD,EAAAA,WAAW,GAAG;AACV,QAAGE,SAAS,CAACC,WAAb,EAA0B;AACtBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,cAAzC;AACH,KAFD,MAEO;AACHC,MAAAA,KAAK,CAAC,2CAAD,CAAL;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAI;AACN,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,eAEI;AAAQ,MAAA,OAAO,EAAE,KAAKP,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAc,KAAKJ,KAAL,CAAWC,QAAzB,CAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAe,KAAKD,KAAL,CAAWE,SAA1B,CALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAa,KAAKF,KAAL,CAAWG,WAAxB,CANJ,CADJ;AAUH;;AA9B2B;;AAiChC,eAAeN,OAAf","sourcesContent":["import React, {Component} from 'react';\n\nclass MapTest extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            latitude: null,\n            longitude: null,\n            userAddress: null\n        };\n        this.getLocation = this.getLocation.bind(this);\n    }\n\n    getLocation() {\n        if(navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(getCoordinates);\n        } else {\n            alert(\"Geolocation not supported by this browser\");\n        }\n    }\n\n    render () {\n        return (\n            <div>\n                <h2>React Geolocation Example</h2>\n                <button onClick={this.getLocation}>Get Coordinates</button>\n                <h4>HTML5 Coordinates</h4>\n                <p>Latitude: {this.state.latitude}</p>\n                <p>Longitude: {this.state.longitude}</p>\n                <p>Address: {this.state.userAddress}</p>\n            </div>\n        );\n    }\n}\n\nexport default MapTest;\n"]},"metadata":{},"sourceType":"module"}