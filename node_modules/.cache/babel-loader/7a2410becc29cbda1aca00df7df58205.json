{"ast":null,"code":"var _jsxFileName = \"/Users/ryandawkes/Desktop/aero-frontend/src/components/map/map.jsx\";\n\n/* global google */\nimport React, { useState } from 'react';\nimport './map.css';\nimport { Link } from 'react-router-dom';\nimport { usePosition } from 'use-position';\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow, GroundOverlay } from 'react-google-maps';\nimport GameIcon from \"./assets/game-icon.svg\";\nimport QuizIncomplete from \"./assets/quiz-icon.svg\";\nimport QuizComplete from \"./assets/quiz-complete.svg\";\nimport FactIncomplete from \"./assets/fact-icon.svg\";\nimport FactComplete from \"./assets/fact-complete.svg\";\nimport PicIncomplete from \"./assets/picture-incomplete.svg\";\nimport PicComplete from \"./assets/picture-complete.svg\";\nimport MapOverlay from \"./assets/main-building.svg\"; // Impromptu JSON data for locations\n\nexport const Interaction = {\n  locations: {\n    Quiz: [{\n      id: 1,\n      coordinates: [51.523176, -2.578209],\n      description: \"Test Me!\",\n      complete: false\n    }, {\n      id: 2,\n      coordinates: [51.523315, -2.578260],\n      description: \"Test Me!\",\n      complete: false\n    }, {\n      id: 3,\n      coordinates: [51.523365, -2.578005],\n      description: \"Test Me!\",\n      complete: false\n    }, {\n      id: 4,\n      coordinates: [51.523565, -2.578309],\n      description: \"Test Me!\",\n      complete: false\n    }, {\n      id: 5,\n      coordinates: [51.523395, -2.578309],\n      description: \"Test Me!\",\n      complete: false\n    }, {\n      id: 6,\n      coordinates: [51.523265, -2.578649],\n      description: \"Test Me!\",\n      complete: false\n    }, {\n      id: 7,\n      coordinates: [51.523176, -2.578409],\n      description: \"Test Me!\",\n      complete: false\n    }, {\n      id: 8,\n      coordinates: [51.523076, -2.578259],\n      description: \"Test Me!\",\n      complete: false\n    }, {\n      id: 9,\n      coordinates: [51.522776, -2.579259],\n      description: \"Test Me!\",\n      complete: false\n    }],\n    Fact: [{\n      id: 1,\n      coordinates: [51.523226, -2.578289],\n      description: \"Learn!\",\n      complete: false\n    }, {\n      id: 2,\n      coordinates: [51.523265, -2.577975],\n      description: \"Learn!\",\n      complete: false\n    }, {\n      id: 3,\n      coordinates: [51.523405, -2.578095],\n      description: \"Learn!\",\n      complete: false\n    }, {\n      id: 4,\n      coordinates: [51.523485, -2.578159],\n      description: \"Learn!\",\n      complete: false\n    }, {\n      id: 5,\n      coordinates: [51.523425, -2.578509],\n      description: \"Learn!\",\n      complete: false\n    }, {\n      id: 6,\n      coordinates: [51.523315, -2.578549],\n      description: \"Learn!\",\n      complete: false\n    }, {\n      id: 7,\n      coordinates: [51.523116, -2.578329],\n      description: \"Learn!\",\n      complete: false\n    }, {\n      id: 8,\n      coordinates: [51.523066, -2.578419],\n      description: \"Learn!\",\n      complete: false\n    }, {\n      id: 9,\n      coordinates: [51.522756, -2.579059],\n      description: \"Learn!\",\n      complete: false\n    }],\n    Game: [{\n      id: 1,\n      coordinates: [51.523213, -2.578062],\n      description: \"Let's Play!\",\n      complete: false\n    }],\n    Picture: [{\n      id: 1,\n      coordinates: [51.523273, -2.578122],\n      description: \"Snap a Photo!\",\n      complete: false\n    }]\n  }\n};\n\nfunction UnwrappedMap() {\n  const [selectedInteraction, setSelectedInteraction] = useState(null);\n  const watch = true;\n  const {\n    latitude,\n    longitude\n  } = usePosition(watch, {\n    enableHighAccuracy: true\n  });\n  return (\n    /*#__PURE__*/\n    // Creates map\n    React.createElement(GoogleMap, {\n      defaultZoom: 20,\n      defaultCenter: {\n        lat: 51.523176,\n        lng: -2.578209\n      },\n      options: {\n        fullscreenControl: false,\n        zoomControl: false,\n        streetViewControl: false,\n        mapTypeControl: false,\n        // draggable: false,\n        clickableIcons: false\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(GroundOverlay, {\n      bounds: new google.maps.LatLngBounds(new google.maps.LatLng(51.522800, -2.578910), new google.maps.LatLng(51.523655, -2.577485)),\n      url: MapOverlay,\n      opacity: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }), Interaction.locations.Quiz.map(interaction => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Marker, {\n      key: interaction.id,\n      position: {\n        lat: interaction.coordinates[0],\n        lng: interaction.coordinates[1]\n      },\n      onClick: () => {\n        interaction.complete === false ? setSelectedInteraction(interaction) : console.log(\"N/A\");\n      },\n      icon: !interaction.complete && QuizIncomplete || interaction.complete && QuizComplete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 25\n      }\n    }))), Interaction.locations.Fact.map(interaction => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Marker, {\n      key: interaction.id,\n      position: {\n        lat: interaction.coordinates[0],\n        lng: interaction.coordinates[1]\n      },\n      onClick: () => {\n        setSelectedInteraction(interaction);\n        console.log(selectedInteraction);\n      },\n      icon: !interaction.complete && FactIncomplete || interaction.complete && FactComplete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 25\n      }\n    }))), Interaction.locations.Game.map(interaction => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Marker, {\n      key: interaction.id,\n      position: {\n        lat: interaction.coordinates[0],\n        lng: interaction.coordinates[1]\n      },\n      onClick: () => {\n        setSelectedInteraction(interaction);\n        console.log(selectedInteraction);\n      },\n      icon: GameIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 25\n      }\n    }))), Interaction.locations.Picture.map(interaction => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Marker, {\n      key: interaction.id,\n      position: {\n        lat: interaction.coordinates[0],\n        lng: interaction.coordinates[1]\n      },\n      onClick: () => {\n        setSelectedInteraction(interaction);\n        console.log(selectedInteraction);\n      },\n      icon: !interaction.complete && PicIncomplete || interaction.complete && PicComplete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 25\n      }\n    }))), // Function for if the button pressed is a QUIZ button\n    selectedInteraction === Interaction.locations.Quiz[0] && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-info-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InfoWindow, {\n      position: {\n        lat: selectedInteraction.coordinates[0] + 0.000033,\n        lng: selectedInteraction.coordinates[1]\n      },\n      onCloseClick: () => {\n        setSelectedInteraction(null);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 33\n      }\n    }, selectedInteraction.type), /*#__PURE__*/React.createElement(Link, {\n      to: \"/section-one-quiz\",\n      className: \"basic-btn quiz-btn\",\n      onClick: () => {\n        selectedInteraction.complete = true;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 37\n      }\n    }, selectedInteraction.description))))) || selectedInteraction === Interaction.locations.Quiz[1] && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-info-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      position: {\n        lat: selectedInteraction.coordinates[0],\n        lng: selectedInteraction.coordinates[1]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(InfoWindow, {\n      position: {\n        lat: selectedInteraction.coordinates[0] + 0.000033,\n        lng: selectedInteraction.coordinates[1]\n      },\n      onCloseClick: () => {\n        setSelectedInteraction(null);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 33\n      }\n    }, selectedInteraction.type), /*#__PURE__*/React.createElement(Link, {\n      to: \"/section-two-quiz\",\n      className: \"basic-btn quiz-btn\",\n      onClick: () => {\n        selectedInteraction.complete = true;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 37\n      }\n    }, selectedInteraction.description))))) || selectedInteraction == Interaction.locations.Quiz[2] && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-info-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InfoWindow, {\n      position: {\n        lat: selectedInteraction.coordinates[0] + 0.000033,\n        lng: selectedInteraction.coordinates[1]\n      },\n      onCloseClick: () => {\n        setSelectedInteraction(null);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 33\n      }\n    }, selectedInteraction.type), /*#__PURE__*/React.createElement(Link, {\n      to: \"/section-three-quiz\",\n      className: \"basic-btn quiz-btn\",\n      onClick: () => {\n        selectedInteraction.complete = true;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 37\n      }\n    }, selectedInteraction.description))))) || selectedInteraction == Interaction.locations.Quiz[3] && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-info-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InfoWindow, {\n      position: {\n        lat: selectedInteraction.coordinates[0] + 0.000033,\n        lng: selectedInteraction.coordinates[1]\n      },\n      onCloseClick: () => {\n        setSelectedInteraction(null);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 33\n      }\n    }, selectedInteraction.type), /*#__PURE__*/React.createElement(Link, {\n      to: \"/section-four-quiz\",\n      className: \"basic-btn quiz-btn\",\n      onClick: () => {\n        selectedInteraction.complete = true;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 37\n      }\n    }, selectedInteraction.description))))) || selectedInteraction == Interaction.locations.Quiz[4] && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-info-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InfoWindow, {\n      position: {\n        lat: selectedInteraction.coordinates[0] + 0.000033,\n        lng: selectedInteraction.coordinates[1]\n      },\n      onCloseClick: () => {\n        setSelectedInteraction(null);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 33\n      }\n    }, selectedInteraction.type), /*#__PURE__*/React.createElement(Link, {\n      to: \"/section-five-quiz\",\n      className: \"basic-btn quiz-btn\",\n      onClick: () => {\n        selectedInteraction.complete = true;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 37\n      }\n    }, selectedInteraction.description))))) || selectedInteraction == Interaction.locations.Quiz[5] && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-info-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InfoWindow, {\n      position: {\n        lat: selectedInteraction.coordinates[0] + 0.000033,\n        lng: selectedInteraction.coordinates[1]\n      },\n      onCloseClick: () => {\n        setSelectedInteraction(null);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 33\n      }\n    }, selectedInteraction.type), /*#__PURE__*/React.createElement(Link, {\n      to: \"/section-six-quiz\",\n      className: \"basic-btn quiz-btn\",\n      onClick: () => {\n        selectedInteraction.complete = true;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 37\n      }\n    }, selectedInteraction.description))))) || selectedInteraction == Interaction.locations.Quiz[6] && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-info-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InfoWindow, {\n      position: {\n        lat: selectedInteraction.coordinates[0] + 0.000033,\n        lng: selectedInteraction.coordinates[1]\n      },\n      onCloseClick: () => {\n        setSelectedInteraction(null);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 33\n      }\n    }, selectedInteraction.type), /*#__PURE__*/React.createElement(Link, {\n      to: \"/section-seven-quiz\",\n      className: \"basic-btn quiz-btn\",\n      onClick: () => {\n        selectedInteraction.complete = true;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 37\n      }\n    }, selectedInteraction.description))))) || selectedInteraction == Interaction.locations.Quiz[7] && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-info-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InfoWindow, {\n      position: {\n        lat: selectedInteraction.coordinates[0] + 0.000033,\n        lng: selectedInteraction.coordinates[1]\n      },\n      onCloseClick: () => {\n        setSelectedInteraction(null);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 33\n      }\n    }, selectedInteraction.type), /*#__PURE__*/React.createElement(Link, {\n      to: \"/section-eight-quiz\",\n      className: \"basic-btn quiz-btn\",\n      onClick: () => {\n        selectedInteraction.complete = true;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 37\n      }\n    }, selectedInteraction.description))))) || selectedInteraction == Interaction.locations.Quiz[8] && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-info-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InfoWindow, {\n      position: {\n        lat: selectedInteraction.coordinates[0] + 0.000033,\n        lng: selectedInteraction.coordinates[1]\n      },\n      onCloseClick: () => {\n        setSelectedInteraction(null);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 33\n      }\n    }, selectedInteraction.type), /*#__PURE__*/React.createElement(Link, {\n      to: \"/section-nine-quiz\",\n      className: \"basic-btn quiz-btn\",\n      onClick: () => {\n        selectedInteraction.complete = true;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 37\n      }\n    }, selectedInteraction.description))))), selectedInteraction == Interaction.locations.Fact[0] && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-info-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InfoWindow, {\n      position: {\n        lat: selectedInteraction.coordinates[0] + 0.000033,\n        lng: selectedInteraction.coordinates[1]\n      },\n      onCloseClick: () => {\n        setSelectedInteraction(null);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 33\n      }\n    }, selectedInteraction.type), /*#__PURE__*/React.createElement(Link, {\n      to: \"/section-one-fact\",\n      className: \"basic-btn fact-btn\",\n      onClick: () => {\n        selectedInteraction.complete = true;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 37\n      }\n    }, selectedInteraction.description))))) || selectedInteraction == Interaction.locations.Fact[1] && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-info-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InfoWindow, {\n      position: {\n        lat: selectedInteraction.coordinates[0] + 0.000033,\n        lng: selectedInteraction.coordinates[1]\n      },\n      onCloseClick: () => {\n        setSelectedInteraction(null);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 33\n      }\n    }, selectedInteraction.type), /*#__PURE__*/React.createElement(Link, {\n      to: \"/section-two-fact\",\n      className: \"basic-btn fact-btn\",\n      onClick: () => {\n        selectedInteraction.complete = true;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 37\n      }\n    }, selectedInteraction.description))))) || selectedInteraction == Interaction.locations.Fact[2] && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-info-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InfoWindow, {\n      position: {\n        lat: selectedInteraction.coordinates[0] + 0.000033,\n        lng: selectedInteraction.coordinates[1]\n      },\n      onCloseClick: () => {\n        setSelectedInteraction(null);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 33\n      }\n    }, selectedInteraction.type), /*#__PURE__*/React.createElement(Link, {\n      to: \"/section-three-fact\",\n      className: \"basic-btn fact-btn\",\n      onClick: () => {\n        selectedInteraction.complete = true;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 37\n      }\n    }, selectedInteraction.description))))) || selectedInteraction == Interaction.locations.Fact[3] && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-info-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InfoWindow, {\n      position: {\n        lat: selectedInteraction.coordinates[0] + 0.000033,\n        lng: selectedInteraction.coordinates[1]\n      },\n      onCloseClick: () => {\n        setSelectedInteraction(null);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 33\n      }\n    }, selectedInteraction.type), /*#__PURE__*/React.createElement(Link, {\n      to: \"/section-four-fact\",\n      className: \"basic-btn fact-btn\",\n      onClick: () => {\n        selectedInteraction.complete = true;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 37\n      }\n    }, selectedInteraction.description))))) || selectedInteraction == Interaction.locations.Fact[4] && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-info-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InfoWindow, {\n      position: {\n        lat: selectedInteraction.coordinates[0] + 0.000033,\n        lng: selectedInteraction.coordinates[1]\n      },\n      onCloseClick: () => {\n        setSelectedInteraction(null);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 33\n      }\n    }, selectedInteraction.type), /*#__PURE__*/React.createElement(Link, {\n      to: \"/section-five-fact\",\n      className: \"basic-btn fact-btn\",\n      onClick: () => {\n        selectedInteraction.complete = true;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 37\n      }\n    }, selectedInteraction.description))))) || selectedInteraction == Interaction.locations.Fact[5] && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-info-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InfoWindow, {\n      position: {\n        lat: selectedInteraction.coordinates[0] + 0.000033,\n        lng: selectedInteraction.coordinates[1]\n      },\n      onCloseClick: () => {\n        setSelectedInteraction(null);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 33\n      }\n    }, selectedInteraction.type), /*#__PURE__*/React.createElement(Link, {\n      to: \"/section-six-fact\",\n      className: \"basic-btn fact-btn\",\n      onClick: () => {\n        selectedInteraction.complete = true;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 37\n      }\n    }, selectedInteraction.description))))) || selectedInteraction == Interaction.locations.Fact[6] && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-info-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InfoWindow, {\n      position: {\n        lat: selectedInteraction.coordinates[0] + 0.000033,\n        lng: selectedInteraction.coordinates[1]\n      },\n      onCloseClick: () => {\n        setSelectedInteraction(null);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 33\n      }\n    }, selectedInteraction.type), /*#__PURE__*/React.createElement(Link, {\n      to: \"/section-seven-fact\",\n      className: \"basic-btn fact-btn\",\n      onClick: () => {\n        selectedInteraction.complete = true;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 37\n      }\n    }, selectedInteraction.description))))) || selectedInteraction == Interaction.locations.Fact[7] && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-info-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InfoWindow, {\n      position: {\n        lat: selectedInteraction.coordinates[0] + 0.000033,\n        lng: selectedInteraction.coordinates[1]\n      },\n      onCloseClick: () => {\n        setSelectedInteraction(null);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 33\n      }\n    }, selectedInteraction.type), /*#__PURE__*/React.createElement(Link, {\n      to: \"/section-eight-fact\",\n      className: \"basic-btn fact-btn\",\n      onClick: () => {\n        selectedInteraction.complete = true;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 37\n      }\n    }, selectedInteraction.description))))) || selectedInteraction == Interaction.locations.Fact[8] && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-info-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InfoWindow, {\n      position: {\n        lat: selectedInteraction.coordinates[0] + 0.000033,\n        lng: selectedInteraction.coordinates[1]\n      },\n      onCloseClick: () => {\n        setSelectedInteraction(null);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 709,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 33\n      }\n    }, selectedInteraction.type), /*#__PURE__*/React.createElement(Link, {\n      to: \"/section-nine-fact\",\n      className: \"basic-btn fact-btn\",\n      onClick: () => {\n        selectedInteraction.complete = true;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 725,\n        columnNumber: 37\n      }\n    }, selectedInteraction.description))))), selectedInteraction === Interaction.locations.Picture[0] && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-info-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 735,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InfoWindow, {\n      position: {\n        lat: selectedInteraction.coordinates[0] + 0.000033,\n        lng: selectedInteraction.coordinates[1]\n      },\n      onCloseClick: () => {\n        setSelectedInteraction(null);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 746,\n        columnNumber: 33\n      }\n    }, selectedInteraction.type), /*#__PURE__*/React.createElement(Link, {\n      to: \"/section-one-pic\",\n      className: \"basic-btn fact-btn\",\n      onClick: () => {\n        selectedInteraction.complete = true;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 752,\n        columnNumber: 37\n      }\n    }, selectedInteraction.description))))))\n  );\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(UnwrappedMap));\nexport default function Map() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapped-map-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 768,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapped-map-inner-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 769,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(WrappedMap, {\n    googleMapURL: `https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_GOOGLE_KEY}`,\n    loadingElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 772,\n        columnNumber: 38\n      }\n    }),\n    containerElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 773,\n        columnNumber: 40\n      }\n    }),\n    mapElement: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-element-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 34\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 770,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/ryandawkes/Desktop/aero-frontend/src/components/map/map.jsx"],"names":["React","useState","Link","usePosition","GoogleMap","withScriptjs","withGoogleMap","Marker","InfoWindow","GroundOverlay","Interaction","locations","Quiz","id","coordinates","description","complete","Fact","Game","Picture","UnwrappedMap","selectedInteraction","setSelectedInteraction","watch","latitude","longitude","enableHighAccuracy","lat","lng","fullscreenControl","zoomControl","streetViewControl","mapTypeControl","clickableIcons","google","maps","LatLngBounds","LatLng","MapOverlay","map","interaction","console","log","QuizIncomplete","QuizComplete","FactIncomplete","FactComplete","GameIcon","PicIncomplete","PicComplete","type","WrappedMap","Map","process","env","REACT_APP_GOOGLE_KEY","height"],"mappings":"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","sourcesContent":["/* global google */\nimport React, {useState} from 'react';\nimport './map.css';\nimport { Link } from 'react-router-dom';\n\nimport { usePosition } from 'use-position';\n\nimport {\n    GoogleMap,\n    withScriptjs,\n    withGoogleMap,\n    Marker,\n    InfoWindow,\n    GroundOverlay\n} from 'react-google-maps';\n\nimport GameIcon from './assets/game-icon.svg';\nimport QuizIncomplete from './assets/quiz-icon.svg'; import QuizComplete from './assets/quiz-complete.svg';\nimport FactIncomplete from './assets/fact-icon.svg'; import FactComplete from './assets/fact-complete.svg';\nimport PicIncomplete from './assets/picture-incomplete.svg'; import PicComplete from './assets/picture-complete.svg';\n\nimport MapOverlay from './assets/main-building.svg';\n\n// Impromptu JSON data for locations\nexport const Interaction = {\n    locations: {\n        Quiz: [\n            {\n                id: 1,\n                coordinates: [51.523176, -2.578209],\n                description: \"Test Me!\",\n                complete: false,\n            },\n            {\n                id: 2,\n                coordinates: [51.523315, -2.578260],\n                description: \"Test Me!\",\n                complete: false,\n            },\n            {\n                id: 3,\n                coordinates: [51.523365, -2.578005],\n                description: \"Test Me!\",\n                complete: false,\n            },\n            {\n                id: 4,\n                coordinates: [51.523565, -2.578309],\n                description: \"Test Me!\",\n                complete: false,\n            },\n            {\n                id: 5,\n                coordinates: [51.523395, -2.578309],\n                description: \"Test Me!\",\n                complete: false,\n            },\n            {\n                id: 6,\n                coordinates: [51.523265, -2.578649],\n                description: \"Test Me!\",\n                complete: false,\n            },\n            {\n                id: 7,\n                coordinates: [51.523176, -2.578409],\n                description: \"Test Me!\",\n                complete: false,\n            },\n            {\n                id: 8,\n                coordinates: [51.523076, -2.578259],\n                description: \"Test Me!\",\n                complete: false,\n            },\n            {\n                id: 9,\n                coordinates: [51.522776, -2.579259],\n                description: \"Test Me!\",\n                complete: false,\n            },\n        ],\n\n        Fact: [\n            {\n                id: 1,\n                coordinates: [51.523226, -2.578289],\n                description: \"Learn!\",\n                complete: false\n            },\n            {\n                id: 2,\n                coordinates: [51.523265, -2.577975],\n                description: \"Learn!\",\n                complete: false\n            },\n            {\n                id: 3,\n                coordinates: [51.523405, -2.578095],\n                description: \"Learn!\",\n                complete: false\n            },\n            {\n                id: 4,\n                coordinates: [51.523485, -2.578159],\n                description: \"Learn!\",\n                complete: false\n            },\n            {\n                id: 5,\n                coordinates: [51.523425, -2.578509],\n                description: \"Learn!\",\n                complete: false\n            },\n            {\n                id: 6,\n                coordinates: [51.523315, -2.578549],\n                description: \"Learn!\",\n                complete: false\n            },\n            {\n                id: 7,\n                coordinates: [51.523116, -2.578329],\n                description: \"Learn!\",\n                complete: false\n            },\n            {\n                id: 8,\n                coordinates: [51.523066, -2.578419],\n                description: \"Learn!\",\n                complete: false\n            },\n            {\n                id: 9,\n                coordinates: [51.522756, -2.579059],\n                description: \"Learn!\",\n                complete: false\n            },\n        ],\n\n        Game: [\n            {\n                id: 1,\n                coordinates: [51.523213, -2.578062],\n                description: \"Let's Play!\",\n                complete: false\n            }\n        ],\n\n        Picture: [\n            {\n                id: 1,\n                coordinates: [51.523273, -2.578122],\n                description: \"Snap a Photo!\",\n                complete: false\n            }\n        ]\n    },\n}\n\nfunction UnwrappedMap() {\n\n    const [selectedInteraction, setSelectedInteraction] = useState(null);\n\n    const watch = true;\n    const { latitude, longitude } =\n        usePosition(watch, {enableHighAccuracy: true});\n\n    return (\n        // Creates map\n        <GoogleMap\n            defaultZoom={20}\n            defaultCenter={{lat: 51.523176, lng: -2.578209}}\n            options={{\n                fullscreenControl: false,\n                zoomControl: false,\n                streetViewControl: false,\n                mapTypeControl: false,\n                // draggable: false,\n                clickableIcons: false,\n            }}\n        >\n            <GroundOverlay\n                bounds={new google.maps.LatLngBounds(\n                    new google.maps.LatLng(51.522800, -2.578910),\n                    new google.maps.LatLng(51.523655, -2.577485)\n                )}\n                url={MapOverlay}\n                opacity={1}\n            />\n\n            {/* Interaction Markers */}\n            {\n                Interaction.locations.Quiz.map ((interaction) => (\n                    <div>\n                        <Marker\n                            key={interaction.id}\n                            position={{\n                                lat: interaction.coordinates[0],\n                                lng: interaction.coordinates[1]\n                            }}\n                            onClick={() => {\n                                interaction.complete === false ?\n                                    setSelectedInteraction(interaction) :\n                                    console.log(\"N/A\")\n                            }}\n                            icon={\n                                !interaction.complete && (\n                                    QuizIncomplete\n                                ) ||\n                                interaction.complete && (\n                                    QuizComplete\n                                )\n                            }\n                        />\n                    </div>\n                ))\n            }\n\n            {\n                Interaction.locations.Fact.map((interaction) => (\n                    <div>\n                        <Marker\n                            key={interaction.id}\n                            position={{\n                                lat: interaction.coordinates[0],\n                                lng: interaction.coordinates[1]\n                            }}\n                            onClick={() => {\n                                setSelectedInteraction(interaction)\n                                console.log(selectedInteraction)\n                            }}\n                            icon={\n                                !interaction.complete && (\n                                    FactIncomplete\n                                ) ||\n                                interaction.complete && (\n                                    FactComplete\n                                )\n                            }\n                        />\n                    </div>\n                ))\n            }\n\n            {\n                Interaction.locations.Game.map((interaction) => (\n                    <div>\n                        <Marker\n                            key={interaction.id}\n                            position={{\n                                lat: interaction.coordinates[0],\n                                lng: interaction.coordinates[1]\n                            }}\n                            onClick={() => {\n                                setSelectedInteraction(interaction)\n                                console.log(selectedInteraction)\n                            }}\n                            icon={GameIcon}\n                        />\n                    </div>\n                ))\n            }\n            {\n                Interaction.locations.Picture.map((interaction) => (\n                    <div>\n                        <Marker\n                            key={interaction.id}\n                            position={{\n                                lat: interaction.coordinates[0],\n                                lng: interaction.coordinates[1]\n                            }}\n                            onClick={() => {\n                                setSelectedInteraction(interaction)\n                                console.log(selectedInteraction)\n                            }}\n                            icon={\n                                !interaction.complete && (PicIncomplete) ||\n                                interaction.complete && (PicComplete)\n                            }\n                        />\n                    </div>\n                ))\n            }\n            {/* End of Interaction Markers */}\n\n            {/* Selecting Interaction Section */}\n            {\n                // Function for if the button pressed is a QUIZ button\n                selectedInteraction === Interaction.locations.Quiz[0] && (\n                    <div className=\"map-info-window\">\n                        <InfoWindow\n                            position={ {\n                                lat: selectedInteraction.coordinates[0] + 0.000033,\n                                lng: selectedInteraction.coordinates[1]\n                            } }\n                            onCloseClick={ () => {\n                                setSelectedInteraction(null);\n                            } }\n                        >\n                            <div className=\"map-button\">\n                                <h2>{ selectedInteraction.type }</h2>\n                                <Link\n                                    to=\"/section-one-quiz\"\n                                    className=\"basic-btn quiz-btn\"\n                                    onClick={() => {selectedInteraction.complete = true }}\n                                >\n                                    <h3>{ selectedInteraction.description }</h3>\n                                </Link>\n                            </div>\n                        </InfoWindow>\n                    </div>\n                ) ||\n                selectedInteraction === Interaction.locations.Quiz[1] && (\n                    <div className=\"map-info-window\">\n                        <div position={{\n                            lat: selectedInteraction.coordinates[0],\n                            lng: selectedInteraction.coordinates[1]\n                        }}>\n                            \n                        </div>\n                        <InfoWindow\n                            position={ {\n                                lat: selectedInteraction.coordinates[0] + 0.000033,\n                                lng: selectedInteraction.coordinates[1]\n                            } }\n                            onCloseClick={ () => {\n                                setSelectedInteraction(null);\n                            } }\n                        >\n                            <div className=\"map-button\">\n                                <h2>{ selectedInteraction.type }</h2>\n                                <Link\n                                    to=\"/section-two-quiz\"\n                                    className=\"basic-btn quiz-btn\"\n                                    onClick={() => {selectedInteraction.complete = true }}\n                                >\n                                    <h3>{ selectedInteraction.description }</h3>\n                                </Link>\n                            </div>\n                        </InfoWindow>\n                    </div>\n                ) ||\n                selectedInteraction == Interaction.locations.Quiz[2] && (\n                    <div className=\"map-info-window\">\n                        <InfoWindow\n                            position={ {\n                                lat: selectedInteraction.coordinates[0] + 0.000033,\n                                lng: selectedInteraction.coordinates[1]\n                            } }\n                            onCloseClick={ () => {\n                                setSelectedInteraction(null);\n                            } }\n                        >\n                            <div className=\"map-button\">\n                                <h2>{ selectedInteraction.type }</h2>\n                                <Link\n                                    to=\"/section-three-quiz\"\n                                    className=\"basic-btn quiz-btn\"\n                                    onClick={() => {selectedInteraction.complete = true }}\n                                >\n                                    <h3>{ selectedInteraction.description }</h3>\n                                </Link>\n                            </div>\n                        </InfoWindow>\n                    </div>\n                ) ||\n                selectedInteraction == Interaction.locations.Quiz[3] && (\n                    <div className=\"map-info-window\">\n                        <InfoWindow\n                            position={ {\n                                lat: selectedInteraction.coordinates[0] + 0.000033,\n                                lng: selectedInteraction.coordinates[1]\n                            } }\n                            onCloseClick={ () => {\n                                setSelectedInteraction(null);\n                            } }\n                        >\n                            <div className=\"map-button\">\n                                <h2>{ selectedInteraction.type }</h2>\n                                <Link\n                                    to=\"/section-four-quiz\"\n                                    className=\"basic-btn quiz-btn\"\n                                    onClick={() => {selectedInteraction.complete = true }}\n                                >\n                                    <h3>{ selectedInteraction.description }</h3>\n                                </Link>\n                            </div>\n                        </InfoWindow>\n                    </div>\n                ) ||\n                selectedInteraction == Interaction.locations.Quiz[4] && (\n                    <div className=\"map-info-window\">\n                        <InfoWindow\n                            position={ {\n                                lat: selectedInteraction.coordinates[0] + 0.000033,\n                                lng: selectedInteraction.coordinates[1]\n                            } }\n                            onCloseClick={ () => {\n                                setSelectedInteraction(null);\n                            } }\n                        >\n                            <div className=\"map-button\">\n                                <h2>{ selectedInteraction.type }</h2>\n                                <Link\n                                    to=\"/section-five-quiz\"\n                                    className=\"basic-btn quiz-btn\"\n                                    onClick={() => {selectedInteraction.complete = true }}\n                                >\n                                    <h3>{ selectedInteraction.description }</h3>\n                                </Link>\n                            </div>\n                        </InfoWindow>\n                    </div>\n                ) ||\n                selectedInteraction == Interaction.locations.Quiz[5] && (\n                    <div className=\"map-info-window\">\n                        <InfoWindow\n                            position={ {\n                                lat: selectedInteraction.coordinates[0] + 0.000033,\n                                lng: selectedInteraction.coordinates[1]\n                            } }\n                            onCloseClick={ () => {\n                                setSelectedInteraction(null);\n                            } }\n                        >\n                            <div className=\"map-button\">\n                                <h2>{ selectedInteraction.type }</h2>\n                                <Link\n                                    to=\"/section-six-quiz\"\n                                    className=\"basic-btn quiz-btn\"\n                                    onClick={() => {selectedInteraction.complete = true }}\n                                >\n                                    <h3>{ selectedInteraction.description }</h3>\n                                </Link>\n                            </div>\n                        </InfoWindow>\n                    </div>\n                ) ||\n                selectedInteraction == Interaction.locations.Quiz[6] && (\n                    <div className=\"map-info-window\">\n                        <InfoWindow\n                            position={ {\n                                lat: selectedInteraction.coordinates[0] + 0.000033,\n                                lng: selectedInteraction.coordinates[1]\n                            } }\n                            onCloseClick={ () => {\n                                setSelectedInteraction(null);\n                            } }\n                        >\n                            <div className=\"map-button\">\n                                <h2>{ selectedInteraction.type }</h2>\n                                <Link\n                                    to=\"/section-seven-quiz\"\n                                    className=\"basic-btn quiz-btn\"\n                                    onClick={() => {selectedInteraction.complete = true }}\n                                >\n                                    <h3>{ selectedInteraction.description }</h3>\n                                </Link>\n                            </div>\n                        </InfoWindow>\n                    </div>\n                ) ||\n                selectedInteraction == Interaction.locations.Quiz[7] && (\n                    <div className=\"map-info-window\">\n                        <InfoWindow\n                            position={ {\n                                lat: selectedInteraction.coordinates[0] + 0.000033,\n                                lng: selectedInteraction.coordinates[1]\n                            } }\n                            onCloseClick={ () => {\n                                setSelectedInteraction(null);\n                            } }\n                        >\n                            <div className=\"map-button\">\n                                <h2>{ selectedInteraction.type }</h2>\n                                <Link\n                                    to=\"/section-eight-quiz\"\n                                    className=\"basic-btn quiz-btn\"\n                                    onClick={() => {selectedInteraction.complete = true }}\n                                >\n                                    <h3>{ selectedInteraction.description }</h3>\n                                </Link>\n                            </div>\n                        </InfoWindow>\n                    </div>\n                ) ||\n                selectedInteraction == Interaction.locations.Quiz[8] && (\n                    <div className=\"map-info-window\">\n                        <InfoWindow\n                            position={ {\n                                lat: selectedInteraction.coordinates[0] + 0.000033,\n                                lng: selectedInteraction.coordinates[1]\n                            } }\n                            onCloseClick={ () => {\n                                setSelectedInteraction(null);\n                            } }\n                        >\n                            <div className=\"map-button\">\n                                <h2>{ selectedInteraction.type }</h2>\n                                <Link\n                                    to=\"/section-nine-quiz\"\n                                    className=\"basic-btn quiz-btn\"\n                                    onClick={() => {selectedInteraction.complete = true }}\n                                >\n                                    <h3>{ selectedInteraction.description }</h3>\n                                </Link>\n                            </div>\n                        </InfoWindow>\n                    </div>\n                )\n            }\n\n            {\n                selectedInteraction == Interaction.locations.Fact[0] && (\n                    <div className=\"map-info-window\">\n                        <InfoWindow\n                            position={{\n                                lat: selectedInteraction.coordinates[0] + 0.000033,\n                                lng: selectedInteraction.coordinates[1]\n                            }}\n                            onCloseClick={() => {\n                                setSelectedInteraction(null);\n                            }}\n                        >\n                            <div className=\"map-button\">\n                                <h2>{ selectedInteraction.type }</h2>\n                                <Link\n                                    to=\"/section-one-fact\"\n                                    className=\"basic-btn fact-btn\"\n                                    onClick={() => {selectedInteraction.complete = true }}\n                                >\n                                    <h3>{ selectedInteraction.description }</h3>\n                                </Link>\n                            </div>\n                        </InfoWindow>\n                    </div>\n                ) ||\n                selectedInteraction == Interaction.locations.Fact[1] && (\n                    <div className=\"map-info-window\">\n                        <InfoWindow\n                            position={{\n                                lat: selectedInteraction.coordinates[0] + 0.000033,\n                                lng: selectedInteraction.coordinates[1]\n                            }}\n                            onCloseClick={ () => {\n                                setSelectedInteraction(null);\n                            } }\n                        >\n                            <div className=\"map-button\">\n                                <h2>{ selectedInteraction.type }</h2>\n                                <Link\n                                    to=\"/section-two-fact\"\n                                    className=\"basic-btn fact-btn\"\n                                    onClick={() => {selectedInteraction.complete = true }}\n                                >\n                                    <h3>{ selectedInteraction.description }</h3>\n                                </Link>\n                            </div>\n                        </InfoWindow>\n                    </div>\n                ) ||\n                selectedInteraction == Interaction.locations.Fact[2] && (\n                    <div className=\"map-info-window\">\n                        <InfoWindow\n                            position={{\n                                lat: selectedInteraction.coordinates[0] + 0.000033,\n                                lng: selectedInteraction.coordinates[1]\n                            }}\n                            onCloseClick={() => {\n                                setSelectedInteraction(null);\n                            }}\n                        >\n                            <div className=\"map-button\">\n                                <h2>{ selectedInteraction.type }</h2>\n                                <Link\n                                    to=\"/section-three-fact\"\n                                    className=\"basic-btn fact-btn\"\n                                    onClick={() => {selectedInteraction.complete = true }}\n                                >\n                                    <h3>{ selectedInteraction.description }</h3>\n                                </Link>\n                            </div>\n                        </InfoWindow>\n                    </div>\n                ) ||\n                selectedInteraction == Interaction.locations.Fact[3] && (\n                    <div className=\"map-info-window\">\n                        <InfoWindow\n                            position={{\n                                lat: selectedInteraction.coordinates[0] + 0.000033,\n                                lng: selectedInteraction.coordinates[1]\n                            }}\n                            onCloseClick={() => {\n                                setSelectedInteraction(null);\n                            }}\n                        >\n                            <div className=\"map-button\">\n                                <h2>{ selectedInteraction.type }</h2>\n                                <Link\n                                    to=\"/section-four-fact\"\n                                    className=\"basic-btn fact-btn\"\n                                    onClick={() => {selectedInteraction.complete = true }}\n                                >\n                                    <h3>{ selectedInteraction.description }</h3>\n                                </Link>\n                            </div>\n                        </InfoWindow>\n                    </div>\n                ) ||\n                selectedInteraction == Interaction.locations.Fact[4] && (\n                    <div className=\"map-info-window\">\n                        <InfoWindow\n                            position={{\n                                lat: selectedInteraction.coordinates[0] + 0.000033,\n                                lng: selectedInteraction.coordinates[1]\n                            }}\n                            onCloseClick={() => {\n                                setSelectedInteraction(null);\n                            }}\n                        >\n                            <div className=\"map-button\">\n                                <h2>{ selectedInteraction.type }</h2>\n                                <Link\n                                    to=\"/section-five-fact\"\n                                    className=\"basic-btn fact-btn\"\n                                    onClick={() => {selectedInteraction.complete = true }}\n                                >\n                                    <h3>{ selectedInteraction.description }</h3>\n                                </Link>\n                            </div>\n                        </InfoWindow>\n                    </div>\n                ) ||\n                selectedInteraction == Interaction.locations.Fact[5] && (\n                    <div className=\"map-info-window\">\n                        <InfoWindow\n                            position={{\n                                lat: selectedInteraction.coordinates[0] + 0.000033,\n                                lng: selectedInteraction.coordinates[1]\n                            }}\n                            onCloseClick={() => {\n                                setSelectedInteraction(null);\n                            }}\n                        >\n                            <div className=\"map-button\">\n                                <h2>{ selectedInteraction.type }</h2>\n                                <Link\n                                    to=\"/section-six-fact\"\n                                    className=\"basic-btn fact-btn\"\n                                    onClick={() => {selectedInteraction.complete = true }}\n                                >\n                                    <h3>{ selectedInteraction.description }</h3>\n                                </Link>\n                            </div>\n                        </InfoWindow>\n                    </div>\n                ) ||\n                selectedInteraction == Interaction.locations.Fact[6] && (\n                    <div className=\"map-info-window\">\n                        <InfoWindow\n                            position={{\n                                lat: selectedInteraction.coordinates[0] + 0.000033,\n                                lng: selectedInteraction.coordinates[1]\n                            }}\n                            onCloseClick={() => {\n                                setSelectedInteraction(null);\n                            }}\n                        >\n                            <div className=\"map-button\">\n                                <h2>{ selectedInteraction.type }</h2>\n                                <Link\n                                    to=\"/section-seven-fact\"\n                                    className=\"basic-btn fact-btn\"\n                                    onClick={() => {selectedInteraction.complete = true }}\n                                >\n                                    <h3>{ selectedInteraction.description }</h3>\n                                </Link>\n                            </div>\n                        </InfoWindow>\n                    </div>\n                ) ||\n                selectedInteraction == Interaction.locations.Fact[7] && (\n                    <div className=\"map-info-window\">\n                        <InfoWindow\n                            position={{\n                                lat: selectedInteraction.coordinates[0] + 0.000033,\n                                lng: selectedInteraction.coordinates[1]\n                            }}\n                            onCloseClick={() => {\n                                setSelectedInteraction(null);\n                            }}\n                        >\n                            <div className=\"map-button\">\n                                <h2>{ selectedInteraction.type }</h2>\n                                <Link\n                                    to=\"/section-eight-fact\"\n                                    className=\"basic-btn fact-btn\"\n                                    onClick={() => {selectedInteraction.complete = true }}\n                                >\n                                    <h3>{ selectedInteraction.description }</h3>\n                                </Link>\n                            </div>\n                        </InfoWindow>\n                    </div>\n                ) ||\n                selectedInteraction == Interaction.locations.Fact[8] && (\n                    <div className=\"map-info-window\">\n                        <InfoWindow\n                            position={{\n                                lat: selectedInteraction.coordinates[0] + 0.000033,\n                                lng: selectedInteraction.coordinates[1]\n                            }}\n                            onCloseClick={() => {\n                                setSelectedInteraction(null);\n                            }}\n                        >\n                            <div className=\"map-button\">\n                                <h2>{ selectedInteraction.type }</h2>\n                                <Link\n                                    to=\"/section-nine-fact\"\n                                    className=\"basic-btn fact-btn\"\n                                    onClick={() => {selectedInteraction.complete = true }}\n                                >\n                                    <h3>{ selectedInteraction.description }</h3>\n                                </Link>\n                            </div>\n                        </InfoWindow>\n                    </div>\n                )\n            }\n\n            {\n                selectedInteraction === Interaction.locations.Picture[0] && (\n                    <div className=\"map-info-window\">\n                        <InfoWindow\n                            position={{\n                                lat: selectedInteraction.coordinates[0] + 0.000033,\n                                lng: selectedInteraction.coordinates[1]\n                            }}\n                            onCloseClick={() => {\n                                setSelectedInteraction(null);\n                            }}\n                        >\n                            <div className=\"map-button\">\n                                <h2>{ selectedInteraction.type }</h2>\n                                <Link\n                                    to=\"/section-one-pic\"\n                                    className=\"basic-btn fact-btn\"\n                                    onClick={() => {selectedInteraction.complete = true }}\n                                >\n                                    <h3>{ selectedInteraction.description }</h3>\n                                </Link>\n                            </div>\n                        </InfoWindow>\n                    </div>\n                )\n            }\n\n        </GoogleMap>\n    )\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(UnwrappedMap));\n\nexport default function Map() {\n    return (\n        <div className=\"wrapped-map-container\">\n            <div  className=\"wrapped-map-inner-container\">\n                <WrappedMap\n                    googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_GOOGLE_KEY}`}\n                    loadingElement={ <div style={{height: '100%'}} /> }\n                    containerElement={ <div style={{height: '100%'}} />}\n                    mapElement={ <div className=\"map-element-container\" />}\n\n                />\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}