{"ast":null,"code":"var _jsxFileName = \"/Users/ryandawkes/Desktop/aero-frontend/src/components/mapTestTwo/mapComponent.js\";\nimport React, { Component, useState } from 'react';\nimport { compose, withProps } from 'recompose';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from 'react-google-maps';\nimport QuizIcon from \"../map/assets/quiz-icon.svg\";\nimport FactIcon from \"../map/assets/picture-icon.svg\";\nimport GameIcon from \"../map/assets/game-icon.svg\";\n\nfunction MapComp() {\n  const [selectedInteraction, setSelectedInteraction] = useState(null);\n  const MapComponent = compose(withProps({\n    googleMapURL: `https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_GOOGLE_KEY}`,\n    loadingElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: `100%`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 29\n      }\n    }),\n    containerElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: `100vh`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 31\n      }\n    }),\n    mapElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: `100%`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 25\n      }\n    })\n  }), withScriptjs, withGoogleMap)(props => /*#__PURE__*/React.createElement(GoogleMap, {\n    defaultZoom: 25,\n    center: {\n      lat: props.currentLocation.lat,\n      lng: props.currentLocation.lng\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, props.isMarkerShown && /*#__PURE__*/React.createElement(Marker, {\n    position: {\n      lat: props.currentLocation.lat,\n      lng: props.currentLocation.lng\n    },\n    onClick: props.onMarkerClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }), MapInteractions.location.map(clickableInteraction => /*#__PURE__*/React.createElement(Marker, {\n    key: clickableInteraction.id,\n    position: {\n      lat: clickableInteraction.coordinates[0],\n      lng: clickableInteraction.coordinates[1]\n    },\n    onClick: () => {\n      setSelectedInteraction(clickableInteraction);\n    },\n    icon: clickableInteraction.type === \"Quiz\" && QuizIcon || clickableInteraction.type === \"Fact\" && FactIcon || clickableInteraction.type === \"Game\" && GameIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }))));\n}\n\nconst MapInteractions = {\n  locations: [{\n    \"id\": 1,\n    \"type\": \"Quiz\",\n    \"coordinates\": [51.523147, -2.577680],\n    \"description\": \"Test Me!\"\n  }, {\n    \"id\": 2,\n    \"type\": \"Fact\",\n    \"coordinates\": [51.523160, -2.578440],\n    \"description\": \"Learn!\"\n  }, {\n    \"id\": 3,\n    \"type\": \"Game\",\n    \"coordinates\": [51.523531, -2.578289],\n    \"description\": \"Let's Play!\"\n  }]\n};\nexport default MapComponent;","map":{"version":3,"sources":["/Users/ryandawkes/Desktop/aero-frontend/src/components/mapTestTwo/mapComponent.js"],"names":["React","Component","useState","compose","withProps","withScriptjs","withGoogleMap","GoogleMap","Marker","MapComp","selectedInteraction","setSelectedInteraction","MapComponent","googleMapURL","process","env","REACT_APP_GOOGLE_KEY","loadingElement","height","containerElement","mapElement","props","lat","currentLocation","lng","isMarkerShown","onMarkerClick","MapInteractions","location","map","clickableInteraction","id","coordinates","type","QuizIcon","FactIcon","GameIcon","locations"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport { compose, withProps } from 'recompose'\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from 'react-google-maps'\n\nimport QuizIcon from '../map/assets/quiz-icon.svg'\nimport FactIcon from '../map/assets/picture-icon.svg'\nimport GameIcon from '../map/assets/game-icon.svg'\n\nfunction MapComp() {\n\n    const [ selectedInteraction, setSelectedInteraction] = useState(null);\n\n    const MapComponent = compose(\n        withProps({\n            googleMapURL: `https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${ process.env.REACT_APP_GOOGLE_KEY }`,\n            loadingElement: <div style={ {height: `100%`} }/>,\n            containerElement: <div style={ {height: `100vh`} }/>,\n            mapElement: <div style={ {height: `100%`} }/>,\n        }),\n        withScriptjs,\n        withGoogleMap,\n    )((props) =>\n        <GoogleMap\n            defaultZoom={ 25 }\n            center={ {lat: props.currentLocation.lat, lng: props.currentLocation.lng} }\n        >\n            { props.isMarkerShown &&\n            <Marker\n                position={ {lat: props.currentLocation.lat, lng: props.currentLocation.lng} }\n                onClick={ props.onMarkerClick }\n            />\n            }\n            { MapInteractions.location.map((clickableInteraction) => (\n                <Marker\n                    key={ clickableInteraction.id }\n                    position={ {\n                        lat: clickableInteraction.coordinates[0],\n                        lng: clickableInteraction.coordinates[1]\n                    } }\n                    onClick={ () => {\n                        setSelectedInteraction(clickableInteraction);\n                    } }\n                    icon={\n                        clickableInteraction.type === \"Quiz\" && (QuizIcon)\n                        ||\n                        clickableInteraction.type === \"Fact\" && (FactIcon)\n                        ||\n                        clickableInteraction.type === \"Game\" && (GameIcon)\n                    }\n                />\n            )) }\n        </GoogleMap>\n    )\n}\n\nconst MapInteractions = {\n    locations: [\n        {\n            \"id\": 1,\n            \"type\": \"Quiz\",\n            \"coordinates\": [51.523147, -2.577680],\n            \"description\": \"Test Me!\"\n        },\n        {\n            \"id\": 2,\n            \"type\": \"Fact\",\n            \"coordinates\": [51.523160, -2.578440],\n            \"description\": \"Learn!\"\n        },\n        {\n            \"id\": 3,\n            \"type\": \"Game\",\n            \"coordinates\": [51.523531, -2.578289],\n            \"description\": \"Let's Play!\"\n        }\n    ]\n}\n\nexport default MapComponent\n"]},"metadata":{},"sourceType":"module"}