{"ast":null,"code":"var _jsxFileName = \"/Users/ryandawkes/Documents/React Projects/aero-client/Aerospace-Project/aerospace-client/src/components/quiz/genericQuiz/genericQuiz.js\";\nimport React, { Component } from 'react';\nimport './genericQuiz.css';\nimport { Link } from 'react-router-dom';\nimport Back from \"../../backButton/back\";\nimport HintButton from \"../assets/hint-button.svg\";\nimport UserIcon from \"../assets/user-icon.svg\"; // Question Text/Answer Button Component\n\nclass Question extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    e.preventDefault(); //Prevents full refresh\n\n    this.props.onChoiceChange(e.target.value);\n  }\n\n  render() {\n    const question = this.props.question; // Variable set to equal question from props\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-component\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    }, question.text)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"answer-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, question.choices.map(choice => {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: this.handleChange,\n        name: question.id,\n        value: choice.id,\n        className: \"answer-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 33\n        }\n      }, choice.text);\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: HintButton,\n      alt: \"\",\n      className: \"hint-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    })));\n  }\n\n} // End of Question Text/Answer Button Component\n// Results Component\n\n\nclass Scorebox extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"well\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, \"Question \", this.props.current, \" out of \", this.props.total, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"pull-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 46\n      }\n    }, \"Score: \", this.props.score)));\n  }\n\n}\n\nclass Results extends Component {\n  render() {\n    const score = this.props.score;\n    const total = this.props.total;\n    const percent = score / total * 100;\n    var message = 'You passed the quiz!';\n    var link = /*#__PURE__*/React.createElement(Link, {\n      to: \"/game-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 20\n      }\n    }, \"Back to Menu\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results-absolute\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results-cont results-img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: UserIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results-cont results-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, \"+\", score, \" points!\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, \"Congratulations!\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results-cont results-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/game-menu\",\n      className: \"quiz-return-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }, \"OK\")))));\n  }\n\n} // End of Results Component\n// Final Quiz Format Section\n\n\nclass QuizFormat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      score: 0,\n      current: 1\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(choice) {\n    this.setState((prevState, props) => ({\n      current: prevState.current + 1,\n      score: choice === props.questions[prevState.current - 1].correct ? prevState.score + 1 : prevState.score\n    }));\n  }\n\n  render() {\n    const questions = this.props.questions;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quiz-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Back, {\n      id: \"backButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }), this.state.current > questions.length && /*#__PURE__*/React.createElement(Results, {\n      total: questions.length,\n      score: this.state.score,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }), this.state.current <= questions.length && /*#__PURE__*/React.createElement(Scorebox, {\n      total: questions.length,\n      current: this.state.current,\n      score: this.state.score,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }), this.state.current <= questions.length && /*#__PURE__*/React.createElement(Question, {\n      question: questions[this.state.current - 1],\n      onChoiceChange: this.handleChange,\n      className: \"answer-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }));\n  }\n\n} // End of Final Quiz Format Section\n\n\nvar QUESTIONS = [{\n  id: 1,\n  text: 'What is my name?',\n  choices: [{\n    id: 'a',\n    text: 'Ryan'\n  }, {\n    id: 'b',\n    text: 'Michael'\n  }, {\n    id: 'c',\n    text: 'James'\n  }, {\n    id: 'd',\n    text: 'Reece'\n  }],\n  correct: 'a'\n}, {\n  id: 2,\n  text: 'What is this museum called?',\n  choices: [{\n    id: 'a',\n    text: 'Bristol Museum'\n  }, {\n    id: 'b',\n    text: 'Bristol Aerospace Museum'\n  }, {\n    id: 'c',\n    text: 'Aviation Museum'\n  }, {\n    id: 'd',\n    text: 'Bristol'\n  }],\n  correct: 'b'\n}];\nexport default class GenericQuiz extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(QuizFormat, {\n      questions: QUESTIONS,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/ryandawkes/Documents/React Projects/aero-client/Aerospace-Project/aerospace-client/src/components/quiz/genericQuiz/genericQuiz.js"],"names":["React","Component","Link","Back","Question","constructor","props","handleChange","bind","e","preventDefault","onChoiceChange","target","value","render","question","text","choices","map","choice","id","HintButton","Scorebox","current","total","score","Results","percent","message","link","UserIcon","QuizFormat","state","setState","prevState","questions","correct","length","QUESTIONS","GenericQuiz"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './genericQuiz.css';\nimport { Link } from 'react-router-dom';\nimport Back from \"../../backButton/back\";\nimport HintButton from '../assets/hint-button.svg';\nimport UserIcon from '../assets/user-icon.svg';\n\n// Question Text/Answer Button Component\nclass Question extends Component {\n    constructor(props){\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        e.preventDefault(); //Prevents full refresh\n        this.props.onChoiceChange(e.target.value);\n    }\n\n    render(){\n        const question = this.props.question; // Variable set to equal question from props\n\n        return(\n            <div>\n                <div className=\"question-component\">\n                    <h3>{question.text}</h3>\n                </div>\n                <div className=\"answer-container\">\n                    { question.choices.map(choice => {\n                        return(\n                                <button\n                                    type=\"submit\"\n                                    onClick={this.handleChange}\n                                    name={question.id}\n                                    value={choice.id}\n                                    className=\"answer-btn\"\n                                >\n                                    {choice.text}\n                                </button>\n                        )\n                    })}\n                    <img\n                        src={HintButton}\n                        alt=\"\"\n                        className=\"hint-btn\"\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n// End of Question Text/Answer Button Component\n\n\n// Results Component\nclass Scorebox extends Component {\n    render(){\n        return(\n            <div className=\"well\">\n                Question {this.props.current} out of {this.props.total}\n                <span className=\"pull-right\"><strong>Score: {this.props.score}</strong></span>\n            </div>\n        )\n    }\n}\n\nclass Results extends Component {\n    render(){\n        const score = this.props.score;\n        const total = this.props.total;\n        const percent = score/total*100;\n        var message = 'You passed the quiz!';\n        var link = <Link to=\"/game-menu\">Back to Menu</Link>\n\n        return(\n            <div className=\"results-absolute\">\n                <div className=\"results-container\">\n                    <div className=\"results-cont results-img\">\n                        <img src={UserIcon} alt=\"\"/>\n                    </div>\n\n                    <div className=\"results-cont results-text\">\n                        <h3>+{score} points!</h3>\n                        <h4>Congratulations!</h4>\n                    </div>\n\n                    <div className=\"results-cont results-link\">\n                        <Link to=\"/game-menu\" className=\"quiz-return-btn\">\n                            <h4>OK</h4>\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n// End of Results Component\n\n// Final Quiz Format Section\nclass QuizFormat extends Component {\n    constructor (props) {\n        super(props);\n\n        this.state = {\n            score: 0,\n            current: 1\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(choice){\n        this.setState((prevState, props) => ({\n            current: prevState.current + 1,\n            score: choice === props.questions[prevState.current - 1].correct ? prevState.score + 1 : prevState.score\n        }));\n    }\n\n    render () {\n        const questions = this.props.questions;\n        return (\n            <div className=\"quiz-container\">\n                <Back id=\"backButton\"/>\n                {this.state.current > questions.length &&\n                    <Results total={questions.length} score={this.state.score}/>\n                }\n\n                {this.state.current <= questions.length &&\n                    <Scorebox total={questions.length} current={this.state.current} score={this.state.score}/>\n                }\n\n                {this.state.current <= questions.length &&\n                    <Question\n                        question={questions[this.state.current - 1]}\n                        onChoiceChange={this.handleChange}\n                        className=\"answer-btn\"\n                    />\n                }\n\n            </div>\n        );\n    }\n}\n// End of Final Quiz Format Section\n\n\nvar QUESTIONS= [\n    {\n        id: 1,\n        text: 'What is my name?',\n        choices:[\n            {\n                id: 'a',\n                text: 'Ryan'\n            },\n            {\n                id: 'b',\n                text: 'Michael'\n            },\n            {\n                id: 'c',\n                text: 'James'\n            },\n            {\n                id: 'd',\n                text: 'Reece'\n            }\n        ],\n        correct: 'a'\n    },\n    {\n        id: 2,\n        text: 'What is this museum called?',\n        choices:[\n            {\n                id: 'a',\n                text: 'Bristol Museum'\n            },\n            {\n                id: 'b',\n                text: 'Bristol Aerospace Museum'\n            },\n            {\n                id: 'c',\n                text: 'Aviation Museum'\n            },\n            {\n                id: 'd',\n                text: 'Bristol'\n            }\n        ],\n        correct: 'b'\n    },\n]\n\nexport default class GenericQuiz extends Component {\n    render() {\n        return(\n            <QuizFormat questions={QUESTIONS}/>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}