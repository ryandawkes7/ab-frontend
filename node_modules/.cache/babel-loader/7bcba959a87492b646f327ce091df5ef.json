{"ast":null,"code":"var _jsxFileName = \"/Users/ryandawkes/Desktop/aero-frontend/src/components/quiz/quizStructure/quizStructure.js\";\nimport React, { Component } from 'react';\nimport './quizStructure.css';\nimport { Link } from 'react-router-dom';\nimport Back from \"../../backButton/back\";\nimport HintButton from \"../assets/hint-button.svg\";\nimport UserIcon from \"../assets/user-icon.svg\"; // Question Text/Answer Button Component\n\nclass Question extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    e.preventDefault(); //Prevents full refresh\n\n    this.props.onChoiceChange(e.target.value);\n  }\n\n  render() {\n    const question = this.props.question; // Variable set to equal question from props\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-component\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }, question.text)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"answer-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, question.choices.map(choice => {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: this.handleChange,\n        name: question.id,\n        value: choice.id,\n        className: \"answer-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 33\n        }\n      }, choice.text);\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: HintButton,\n      alt: \"\",\n      className: \"hint-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    })));\n  }\n\n} // End of Question Text/Answer Button Component\n// Results Component\n\n\nclass Scorebox extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"well\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, \"Question \", this.props.current, \" out of \", this.props.total, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"pull-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, \"Score: \", this.props.score)));\n  }\n\n}\n\nclass Results extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.calculateOverall = () => {\n      try {\n        this.setState({});\n      } catch (e) {\n        this.setState({\n          result: \"error\"\n        });\n      }\n    };\n  }\n\n  render() {\n    const score = this.props.score;\n    const overallScore = this.props.overallScore;\n    const total = this.props.total;\n    const percent = score / total * 100;\n    var message = 'You passed the quiz!';\n    var link = /*#__PURE__*/React.createElement(Link, {\n      to: \"/game-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 20\n      }\n    }, \"Back to Menu\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results-absolute\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results-cont results-img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: UserIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results-cont results-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, \"+\", score, \" points!\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }, \"Overall Score: \", overallScore), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }, \"Congratulations!\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results-cont results-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/game-menu\",\n      className: \"quiz-return-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 29\n      }\n    }, \"OK\")))));\n  }\n\n} // End of Results Component\n// Final Quiz Format Section\n\n\nexport default class QuizFormat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      score: 0,\n      current: 1,\n      overallScore: 0\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(choice) {\n    this.setState((prevState, props) => ({\n      current: prevState.current + 1,\n      score: choice === props.questions[prevState.current - 1].correct ? prevState.score + 1 : prevState.score\n    }));\n    console.log(\"Your current score for this game is: \" + this.state.score);\n  }\n\n  render() {\n    const questions = this.props.questions;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quiz-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Back, {\n      id: \"backButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }), this.state.current > questions.length && /*#__PURE__*/React.createElement(Results, {\n      total: questions.length,\n      score: this.state.score,\n      overallScore: this.state.overallScore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }), this.state.current <= questions.length && /*#__PURE__*/React.createElement(Scorebox, {\n      total: questions.length,\n      current: this.state.current,\n      score: this.state.score,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }), this.state.current <= questions.length && /*#__PURE__*/React.createElement(Question, {\n      question: questions[this.state.current - 1],\n      onChoiceChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }\n    }));\n  }\n\n} // End of Final Quiz Format Section","map":{"version":3,"sources":["/Users/ryandawkes/Desktop/aero-frontend/src/components/quiz/quizStructure/quizStructure.js"],"names":["React","Component","Link","Back","Question","constructor","props","handleChange","bind","e","preventDefault","onChoiceChange","target","value","render","question","text","choices","map","choice","id","HintButton","Scorebox","current","total","score","Results","calculateOverall","setState","result","overallScore","percent","message","link","UserIcon","QuizFormat","state","prevState","questions","correct","console","log","length"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './quizStructure.css';\nimport { Link } from 'react-router-dom';\n\nimport Back from \"../../backButton/back\";\nimport HintButton from '../assets/hint-button.svg';\nimport UserIcon from '../assets/user-icon.svg';\n\n// Question Text/Answer Button Component\nclass Question extends Component {\n    constructor(props){\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        e.preventDefault(); //Prevents full refresh\n        this.props.onChoiceChange(e.target.value);\n    }\n\n    render(){\n        const question = this.props.question; // Variable set to equal question from props\n\n        return(\n            <div>\n                <div className=\"question-component\">\n                    <h3>{question.text}</h3>\n                </div>\n                <div className=\"answer-container\">\n                    { question.choices.map(choice => {\n                        return(\n                                <button\n                                    type=\"submit\"\n                                    onClick={this.handleChange}\n                                    name={question.id}\n                                    value={choice.id}\n                                    className=\"answer-btn\"\n                                >\n                                    {choice.text}\n                                </button>\n                        )\n                    })}\n                    <img\n                        src={HintButton}\n                        alt=\"\"\n                        className=\"hint-btn\"\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n// End of Question Text/Answer Button Component\n\n\n// Results Component\nclass Scorebox extends Component {\n    render(){\n        return(\n            <div className=\"well\">\n                Question {this.props.current} out of {this.props.total}\n                <span className=\"pull-right\">\n                    <strong>Score: {this.props.score}</strong>\n                </span>\n            </div>\n        )\n    }\n}\n\nclass Results extends Component {\n\n    calculateOverall = () => {\n        try {\n            this.setState({\n\n            })\n        }\n        catch (e) {\n            this.setState({ result: \"error\" })\n        }\n    }\n\n    render(){\n        const score = this.props.score;\n        const overallScore = this.props.overallScore;\n        const total = this.props.total;\n        const percent = score/total*100;\n        var message = 'You passed the quiz!';\n        var link = <Link to=\"/game-menu\">Back to Menu</Link>\n\n\n        return(\n            <div className=\"results-absolute\">\n                <div className=\"results-container\">\n                    <div className=\"results-cont results-img\">\n                        <img src={UserIcon} alt=\"\"/>\n                    </div>\n\n                    <div className=\"results-cont results-text\">\n                        <h3>+{score} points!</h3>\n                        <h3>Overall Score: {overallScore}</h3>\n                        <h4>Congratulations!</h4>\n                    </div>\n\n                    <div className=\"results-cont results-link\">\n                        <Link\n                            to=\"/game-menu\"\n                            className=\"quiz-return-btn\"\n                        >\n                            <h4>OK</h4>\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n// End of Results Component\n\n// Final Quiz Format Section\nexport default class QuizFormat extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            score: 0,\n            current: 1,\n            overallScore: 0\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(choice){\n        this.setState((prevState, props) => ({\n            current: prevState.current + 1,\n            score: choice === props.questions[prevState.current - 1].correct ? prevState.score + 1 : prevState.score,\n        }));\n        console.log(\"Your current score for this game is: \" + this.state.score)\n    }\n\n    render () {\n        const questions = this.props.questions;\n\n        return (\n            <div className=\"quiz-container\">\n                <Back id=\"backButton\"/>\n                {this.state.current > questions.length &&\n                    <Results\n                        total={questions.length}\n                        score={this.state.score}\n                        overallScore={this.state.overallScore}\n                    />\n                }\n\n                {this.state.current <= questions.length &&\n                    <Scorebox\n                        total={questions.length}\n                        current={this.state.current}\n                        score={this.state.score}/>\n                }\n\n                {this.state.current <= questions.length &&\n                    <Question\n                        question={questions[this.state.current - 1]}\n                        onChoiceChange={this.handleChange}\n                    />\n                }\n\n            </div>\n        );\n    }\n}\n// End of Final Quiz Format Section\n"]},"metadata":{},"sourceType":"module"}