{"ast":null,"code":"var _jsxFileName = \"/Users/ryandawkes/Desktop/aero-frontend/src/components/mapTestTwo/mapTest.js\";\n// import React, {Component} from 'react';\n// import { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\n// import Icon from '../map/assets/quiz-icon.svg';\n//\n// const mapStyles = {\n//     width: '100%',\n//     height: '100%',\n// };\n//\n// // Impromptu JSON data for locations\n// const Interaction = {\n//     locations: [\n//         {\n//             \"id\": 1,\n//             \"type\": \"Quiz\",\n//             \"coordinates\": [51.523147, -2.577680],\n//             \"description\": \"Test Me!\"\n//         },\n//         {\n//             \"id\": 2,\n//             \"type\": \"Fact\",\n//             \"coordinates\": [51.523160, -2.578440],\n//             \"description\": \"Learn!\"\n//         },\n//         {\n//             \"id\": 3,\n//             \"type\": \"Game\",\n//             \"coordinates\": [51.523531, -2.578289],\n//             \"description\": \"Let's Play!\"\n//         }\n//     ]\n// }\n//\n// class MapTest extends Component {\n//\n//     constructor (props) {\n//         super(props);\n//         this.state = {\n//             latitude: null,\n//             longitude: null,\n//             userAddress: null\n//         };\n//         this.getLocation = this.getLocation.bind(this);\n//         this.getCoordinates = this.getCoordinates.bind(this);\n//     }\n//\n//     getLocation() {\n//         if(navigator.geolocation) {\n//             navigator.geolocation.watchPosition(this.getCoordinates, this.handleLocationError);\n//\n//             navigator.geolocation.getCurrentPosition(function (position) {\n//                 console.log(position)\n//             })\n//\n//         } else {\n//             alert(\"Geolocation not supported by this browser\");\n//         }\n//     }\n//\n//     getCoordinates(position) {\n//         this.setState({\n//             latitude: position.coords.latitude,\n//             longitude: position.coords.longitude\n//         })\n//     }\n//\n//     //Error Handling\n//     handleLocationError(error) {\n//         switch(error.code){\n//             case error.PERMISSION_DENIED:\n//                 alert(\"Denied request for Geolocation\")\n//                 break;\n//             case error.POSITION_UNAVAILABLE:\n//                 alert(\"Location info is unavailable\")\n//                 break;\n//             case error.TIMEOUT:\n//                 alert(\"Location request has timed out\")\n//                 break;\n//             case error.UNKNOWN_ERR:\n//                 alert(\"An unknown error occurred\")\n//                 break;\n//             default:\n//                 alert(\"An unknown error occurred\")\n//         }\n//     }\n//\n//     render () {\n//         return (\n//             <div>\n//                 <button onClick={this.getLocation}>Location</button>\n//                 <h2>Lon: { this.state.longitude }, Lat: {this.state.latitude}</h2>\n//                 <Map\n//                     google={this.props.google}\n//                     zoom={14}\n//                     style={mapStyles}\n//                     initialCenter={{\n//                         lat: this.state.latitude,\n//                         lng: this.state.longitude\n//                     }}\n//                 />\n//                 <Marker\n//                     position={{\n//                         lat: this.state.latitude,\n//                         lng: this.state.longitude\n//                     }}\n//                     icon={Icon}\n//                 />\n//             </div>\n//         );\n//     }\n// }\n//\n// export default GoogleApiWrapper({\n//     apiKey: 'AIzaSyC-AmFN95fVGvNGJrQULEoHAX-1BYkk7xg'\n// })(MapTest);\nimport React, { Component } from 'react';\nimport GoogleMap from \"google-map-react\";\n\nclass MapTest extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default MapTest;","map":{"version":3,"sources":["/Users/ryandawkes/Desktop/aero-frontend/src/components/mapTestTwo/mapTest.js"],"names":["React","Component","GoogleMap","MapTest","render"],"mappingseC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,kBAAtB;;AAEA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAC5BG,EAAAA,MAAM,GAAI;AACN,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH;;AAP2B;;AAUhC,eAAeD,OAAf","sourcesContent":["// import React, {Component} from 'react';\n// import { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\n// import Icon from '../map/assets/quiz-icon.svg';\n//\n// const mapStyles = {\n//     width: '100%',\n//     height: '100%',\n// };\n//\n// // Impromptu JSON data for locations\n// const Interaction = {\n//     locations: [\n//         {\n//             \"id\": 1,\n//             \"type\": \"Quiz\",\n//             \"coordinates\": [51.523147, -2.577680],\n//             \"description\": \"Test Me!\"\n//         },\n//         {\n//             \"id\": 2,\n//             \"type\": \"Fact\",\n//             \"coordinates\": [51.523160, -2.578440],\n//             \"description\": \"Learn!\"\n//         },\n//         {\n//             \"id\": 3,\n//             \"type\": \"Game\",\n//             \"coordinates\": [51.523531, -2.578289],\n//             \"description\": \"Let's Play!\"\n//         }\n//     ]\n// }\n//\n// class MapTest extends Component {\n//\n//     constructor (props) {\n//         super(props);\n//         this.state = {\n//             latitude: null,\n//             longitude: null,\n//             userAddress: null\n//         };\n//         this.getLocation = this.getLocation.bind(this);\n//         this.getCoordinates = this.getCoordinates.bind(this);\n//     }\n//\n//     getLocation() {\n//         if(navigator.geolocation) {\n//             navigator.geolocation.watchPosition(this.getCoordinates, this.handleLocationError);\n//\n//             navigator.geolocation.getCurrentPosition(function (position) {\n//                 console.log(position)\n//             })\n//\n//         } else {\n//             alert(\"Geolocation not supported by this browser\");\n//         }\n//     }\n//\n//     getCoordinates(position) {\n//         this.setState({\n//             latitude: position.coords.latitude,\n//             longitude: position.coords.longitude\n//         })\n//     }\n//\n//     //Error Handling\n//     handleLocationError(error) {\n//         switch(error.code){\n//             case error.PERMISSION_DENIED:\n//                 alert(\"Denied request for Geolocation\")\n//                 break;\n//             case error.POSITION_UNAVAILABLE:\n//                 alert(\"Location info is unavailable\")\n//                 break;\n//             case error.TIMEOUT:\n//                 alert(\"Location request has timed out\")\n//                 break;\n//             case error.UNKNOWN_ERR:\n//                 alert(\"An unknown error occurred\")\n//                 break;\n//             default:\n//                 alert(\"An unknown error occurred\")\n//         }\n//     }\n//\n//     render () {\n//         return (\n//             <div>\n//                 <button onClick={this.getLocation}>Location</button>\n//                 <h2>Lon: { this.state.longitude }, Lat: {this.state.latitude}</h2>\n//                 <Map\n//                     google={this.props.google}\n//                     zoom={14}\n//                     style={mapStyles}\n//                     initialCenter={{\n//                         lat: this.state.latitude,\n//                         lng: this.state.longitude\n//                     }}\n//                 />\n//                 <Marker\n//                     position={{\n//                         lat: this.state.latitude,\n//                         lng: this.state.longitude\n//                     }}\n//                     icon={Icon}\n//                 />\n//             </div>\n//         );\n//     }\n// }\n//\n// export default GoogleApiWrapper({\n//     apiKey: 'AIzaSyC-AmFN95fVGvNGJrQULEoHAX-1BYkk7xg'\n// })(MapTest);\n\nimport React, {Component} from 'react';\nimport GoogleMap from \"google-map-react\";\n\nclass MapTest extends Component {\n    render () {\n        return (\n            <div>\n\n            </div>\n        );\n    }\n}\n\nexport default MapTest;\n"]},"metadata":{},"sourceType":"module"}