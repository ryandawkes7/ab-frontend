{"ast":null,"code":"var _jsxFileName = \"/Users/ryandawkes/Desktop/aero-frontend/src/components/mapTestTwo/mapTest.js\";\nimport React, { Component } from 'react';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from 'react-google-maps';\nimport MapComponent from './MapComponent';\n\nclass MapTest extends Component {\n  constructor(props) {\n    super(props);\n\n    this.delayedShowMarker = () => {\n      setTimeout(() => {\n        this.getGeoLocation();\n        this.setState({\n          isMarkerShown: true\n        });\n      }, 5000);\n    };\n\n    this.handleMarkerClick = () => {\n      this.setState({\n        isMarkerShown: false\n      });\n      this.delayedShowMarker();\n    };\n\n    this.getGeoLocation = () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          this.setState({\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          });\n        });\n      } else {\n        console.log(\"error\");\n      }\n    };\n\n    this.state = {\n      currentLatLng: {\n        lat: 0,\n        lng: 0\n      },\n      isMarkerShown: false\n    };\n  }\n\n  componentWillUpdate() {\n    this.getGeoLocation();\n  }\n\n  componentDidMount() {\n    this.delayedShowMarker();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(MapComponent, {\n      isMarkerShown: this.state.isMarkerShown,\n      onMarkerClick: this.handleMarkerClick,\n      currentLocation: this.state.currentLatLng,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default MapTest;","map":{"version":3,"sources":["/Users/ryandawkes/Desktop/aero-frontend/src/components/mapTestTwo/mapTest.js"],"names":["React","Component","withScriptjs","withGoogleMap","GoogleMap","Marker","MapComponent","MapTest","constructor","props","delayedShowMarker","setTimeout","getGeoLocation","setState","isMarkerShown","handleMarkerClick","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lng","longitude","console","log","state","currentLatLng","componentWillUpdate","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,SAAtC,EAAiDC,MAAjD,QAA+D,mBAA/D;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,OAAN,SAAsBN,SAAtB,CAAgC;AAC5BO,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAmBlBC,iBAnBkB,GAmBE,MAAM;AACtBC,MAAAA,UAAU,CAAC,MAAM;AACb,aAAKC,cAAL;AACA,aAAKC,QAAL,CAAc;AAAEC,UAAAA,aAAa,EAAE;AAAjB,SAAd;AACH,OAHS,EAGP,IAHO,CAAV;AAIH,KAxBiB;;AAAA,SA0BlBC,iBA1BkB,GA0BE,MAAM;AACtB,WAAKF,QAAL,CAAc;AAAEC,QAAAA,aAAa,EAAE;AAAjB,OAAd;AACA,WAAKJ,iBAAL;AACH,KA7BiB;;AAAA,SA+BlBE,cA/BkB,GA+BD,MAAM;AACnB,UAAII,SAAS,CAACC,WAAd,EAA2B;AACvBD,QAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACIC,QAAQ,IAAI;AACR,eAAKN,QAAL,CAAc;AACVO,YAAAA,GAAG,EAAED,QAAQ,CAACE,MAAT,CAAgBC,QADX;AAEVC,YAAAA,GAAG,EAAEJ,QAAQ,CAACE,MAAT,CAAgBG;AAFX,WAAd;AAIH,SANL;AAQH,OATD,MASO;AACHC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;AACJ,KA5CiB;;AAEd,SAAKC,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAE;AACXR,QAAAA,GAAG,EAAE,CADM;AAEXG,QAAAA,GAAG,EAAE;AAFM,OADN;AAKTT,MAAAA,aAAa,EAAE;AALN,KAAb;AAOH;;AAEDe,EAAAA,mBAAmB,GAAE;AACjB,SAAKjB,cAAL;AACH;;AAEDkB,EAAAA,iBAAiB,GAAG;AAChB,SAAKpB,iBAAL;AACH;;AA6BDqB,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,YAAD;AACI,MAAA,aAAa,EAAE,KAAKJ,KAAL,CAAWb,aAD9B;AAEI,MAAA,aAAa,EAAE,KAAKC,iBAFxB;AAGI,MAAA,eAAe,EAAE,KAAKY,KAAL,CAAWC,aAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAOH;;AAvD2B;;AA0DhC,eAAerB,OAAf","sourcesContent":["import React, { Component } from 'react'\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from 'react-google-maps'\nimport MapComponent from './MapComponent'\n\nclass MapTest extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            currentLatLng: {\n                lat: 0,\n                lng: 0\n            },\n            isMarkerShown: false\n        }\n    }\n\n    componentWillUpdate(){\n        this.getGeoLocation()\n    }\n\n    componentDidMount() {\n        this.delayedShowMarker()\n    }\n\n    delayedShowMarker = () => {\n        setTimeout(() => {\n            this.getGeoLocation()\n            this.setState({ isMarkerShown: true })\n        }, 5000)\n    }\n\n    handleMarkerClick = () => {\n        this.setState({ isMarkerShown: false })\n        this.delayedShowMarker()\n    }\n\n    getGeoLocation = () => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(\n                position => {\n                    this.setState({\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude\n                    })\n                }\n            )\n        } else {\n            console.log(\"error\")\n        }\n    }\n\n    render() {\n        return (\n            <MapComponent\n                isMarkerShown={this.state.isMarkerShown}\n                onMarkerClick={this.handleMarkerClick}\n                currentLocation={this.state.currentLatLng}\n            />\n        )\n    }\n}\n\nexport default MapTest;\n"]},"metadata":{},"sourceType":"module"}