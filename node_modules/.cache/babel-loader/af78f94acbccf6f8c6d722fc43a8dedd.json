{"ast":null,"code":"var _jsxFileName = \"/Users/ryandawkes/Desktop/aero-frontend/src/components/mapTestTwo/mapComponent.js\";\nimport React, { Component } from 'react';\nimport { compose, withProps } from 'recompose';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nconst MapComponent = compose(withProps({\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places\",\n  loadingElement: /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 25\n    }\n  }),\n  containerElement: /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '400px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 27\n    }\n  }),\n  mapElement: /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 21\n    }\n  })\n}), withScriptjs, withGoogleMap)(props => /*#__PURE__*/React.createElement(GoogleMap, {\n  defaultZoom: 14,\n  defaultCenter: {\n    lat: props.currentLocation.latitude,\n    lng: props.currentLocation.longitude\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }\n}, props.isMarkerShown && /*#__PURE__*/React.createElement(Marker, {\n  position: {\n    lat: props.currentLocation.latitude,\n    lng: props.currentLocation.longitude\n  },\n  onClick: props.handleMarkerClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 13\n  }\n})));\nexport default MapComponent;","map":{"version":3,"sources":["/Users/ryandawkes/Desktop/aero-frontend/src/components/mapTestTwo/mapComponent.js"],"names":["React","Component","compose","withProps","withScriptjs","withGoogleMap","GoogleMap","Marker","MapComponent","googleMapURL","loadingElement","height","containerElement","mapElement","props","lat","currentLocation","latitude","lng","longitude","isMarkerShown","handleMarkerClick"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,WAAnC;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,SAAtC,EAAiDC,MAAjD,QAA+D,mBAA/D;AAEA,MAAMC,YAAY,GAAGN,OAAO,CACxBC,SAAS,CAAC;AACNM,EAAAA,YAAY,EAAE,mFADR;AAENC,EAAAA,cAAc,eAAE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFV;AAGNC,EAAAA,gBAAgB,eAAE;AAAK,IAAA,KAAK,EAAE;AAAED,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHZ;AAINE,EAAAA,UAAU,eAAE;AAAK,IAAA,KAAK,EAAE;AAAEF,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJN,CAAD,CADe,EAOxBP,YAPwB,EAQxBC,aARwB,CAAP,CASlBS,KAAD,iBACE,oBAAC,SAAD;AACI,EAAA,WAAW,EAAE,EADjB;AAEI,EAAA,aAAa,EAAE;AAAEC,IAAAA,GAAG,EAAED,KAAK,CAACE,eAAN,CAAsBC,QAA7B;AAAuCC,IAAAA,GAAG,EAAEJ,KAAK,CAACE,eAAN,CAAsBG;AAAlE,GAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAIKL,KAAK,CAACM,aAAN,iBACG,oBAAC,MAAD;AACI,EAAA,QAAQ,EAAE;AAAEL,IAAAA,GAAG,EAAED,KAAK,CAACE,eAAN,CAAsBC,QAA7B;AAAuCC,IAAAA,GAAG,EAAEJ,KAAK,CAACE,eAAN,CAAsBG;AAAlE,GADd;AAEI,EAAA,OAAO,EAAEL,KAAK,CAACO,iBAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALR,CAViB,CAArB;AAuBA,eAAeb,YAAf","sourcesContent":["import React, {Component} from 'react';\nimport { compose, withProps } from 'recompose';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\n\nconst MapComponent = compose (\n    withProps({\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places\",\n        loadingElement: <div style={{ height: '100%' }} />,\n        containerElement: <div style={{ height: '400px' }} />,\n        mapElement: <div style={{ height: '100%' }} />\n    }),\n    withScriptjs,\n    withGoogleMap\n)((props) =>\n    <GoogleMap\n        defaultZoom={14}\n        defaultCenter={{ lat: props.currentLocation.latitude, lng: props.currentLocation.longitude }}\n    >\n        {props.isMarkerShown &&\n            <Marker\n                position={{ lat: props.currentLocation.latitude, lng: props.currentLocation.longitude }}\n                onClick={props.handleMarkerClick}\n            />\n        }\n    </GoogleMap>\n)\n\nexport default MapComponent;\n"]},"metadata":{},"sourceType":"module"}