{"ast":null,"code":"import _classCallCheck from\"/Users/ryandawkes/Desktop/aero-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ryandawkes/Desktop/aero-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/ryandawkes/Desktop/aero-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/ryandawkes/Desktop/aero-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/ryandawkes/Desktop/aero-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component,useState}from'react';import'./quizStructure.css';import{Link}from'react-router-dom';import Back from\"../../backButton/back\";import HintButton from\"../assets/hint-button.svg\";import UserIcon from\"../assets/user-icon.svg\";// Question Text/Answer Button Component\nvar Question=/*#__PURE__*/function(_Component){_inherits(Question,_Component);var _super=_createSuper(Question);function Question(props){var _this;_classCallCheck(this,Question);_this=_super.call(this,props);_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));return _this;}_createClass(Question,[{key:\"handleChange\",value:function handleChange(e){e.preventDefault();//Prevents full refresh\nthis.props.onChoiceChange(e.target.value);}},{key:\"guidePopup\",value:function guidePopup(){return/*#__PURE__*/React.createElement(\"div\",{className:\"guide-popup-container\"});}},{key:\"render\",value:function render(){var _this2=this;var question=this.props.question;// Variable set to equal question from props\nreturn/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"question-component\"},question.text),/*#__PURE__*/React.createElement(\"div\",{className:\"answer-container\"},question.choices.map(function(choice){return/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",onClick:_this2.handleChange,name:question.id,value:choice.id,className:\"answer-btn\"},choice.text);}),/*#__PURE__*/React.createElement(\"img\",{src:HintButton,alt:\"\",className:\"hint-btn\"})));}}]);return Question;}(Component);// End of Question Text/Answer Button Component\n// Results Component\nvar Scorebox=/*#__PURE__*/function(_Component2){_inherits(Scorebox,_Component2);var _super2=_createSuper(Scorebox);function Scorebox(){_classCallCheck(this,Scorebox);return _super2.apply(this,arguments);}_createClass(Scorebox,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"question-count-container\"},\"Question \",this.props.current,\" out of \",this.props.total);}}]);return Scorebox;}(Component);var Results=/*#__PURE__*/function(_Component3){_inherits(Results,_Component3);var _super3=_createSuper(Results);function Results(_props){var _this3;_classCallCheck(this,Results);_this3=_super3.call(this,_props);_this3.overallScore=function(){_this3.setState(function(prevState,props){return{overallScore:(prevState.overallScore+props.score)*50};});};_this3.state={overallScore:0};return _this3;}_createClass(Results,[{key:\"render\",value:function render(){var message='You passed the quiz!';var link=/*#__PURE__*/React.createElement(Link,{to:\"/game-menu\"},\"Back to Menu\");return/*#__PURE__*/React.createElement(\"div\",{className:\"results-absolute\"},/*#__PURE__*/React.createElement(\"div\",{className:\"results-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"results-cont results-img\"},/*#__PURE__*/React.createElement(\"img\",{src:UserIcon,alt:\"\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"results-cont results-text\"},/*#__PURE__*/React.createElement(\"h3\",null,\"+\",this.props.score,\" points!\"),/*#__PURE__*/React.createElement(\"h4\",null,\"Congratulations!\")),/*#__PURE__*/React.createElement(\"div\",{className:\"results-cont results-link\"},/*#__PURE__*/React.createElement(Link,{to:\"/game-menu\",className:\"quiz-return-btn\",onClick:this.overallScore},/*#__PURE__*/React.createElement(\"h4\",null,\"OK\")))));}}]);return Results;}(Component);// End of Results Component\n// Final Quiz Format Section\nvar QuizFormat=/*#__PURE__*/function(_Component4){_inherits(QuizFormat,_Component4);var _super4=_createSuper(QuizFormat);function QuizFormat(props){var _this4;_classCallCheck(this,QuizFormat);_this4=_super4.call(this,props);_this4.state={score:0,current:1,overallScore:0};_this4.handleChange=_this4.handleChange.bind(_assertThisInitialized(_this4));return _this4;}_createClass(QuizFormat,[{key:\"handleChange\",value:function handleChange(choice){this.setState(function(prevState,props){return{current:prevState.current+1,score:choice===props.questions[prevState.current-1].correct?prevState.score+50:prevState.score};});console.log(this.state.overallScore);}},{key:\"render\",value:function render(){var questions=this.props.questions;return/*#__PURE__*/React.createElement(\"div\",{className:\"quiz-container\"},/*#__PURE__*/React.createElement(Back,{id:\"backButton\"}),this.state.current>questions.length&&/*#__PURE__*/React.createElement(Results,{total:questions.length,score:this.state.overallScore+this.state.score}),this.state.current<=questions.length&&/*#__PURE__*/React.createElement(Scorebox,{total:questions.length,current:this.state.current,score:this.state.score}),this.state.current<=questions.length&&/*#__PURE__*/React.createElement(Question,{question:questions[this.state.current-1],onChoiceChange:this.handleChange}));}}]);return QuizFormat;}(Component);// End of Final Quiz Format Section\nexport{QuizFormat as default};","map":{"version":3,"sources":["/Users/ryandawkes/Desktop/aero-frontend/src/components/quiz/quizStructure/quizStructure.js"],"names":["React","Component","useState","Link","Back","Question","props","handleChange","bind","e","preventDefault","onChoiceChange","target","value","question","text","choices","map","choice","id","HintButton","Scorebox","current","total","Results","overallScore","setState","prevState","score","state","message","link","UserIcon","QuizFormat","questions","correct","console","log","length"],"mappings":"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","sourcesContent":["import React, {Component, useState} from 'react';\nimport './quizStructure.css';\nimport { Link } from 'react-router-dom';\n\nimport Back from \"../../backButton/back\";\nimport HintButton from '../assets/hint-button.svg';\nimport UserIcon from '../assets/user-icon.svg';\n\n// Question Text/Answer Button Component\nclass Question extends Component {\n    constructor(props){\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        e.preventDefault(); //Prevents full refresh\n        this.props.onChoiceChange(e.target.value);\n    }\n\n    guidePopup() {\n        return(\n            <div className=\"guide-popup-container\">\n\n\n            </div>\n        )\n    }\n\n    render(){\n        const question = this.props.question; // Variable set to equal question from props\n\n        return(\n            <div>\n                <div className=\"question-component\">\n                    {question.text}\n                </div>\n                <div className=\"answer-container\">\n                    { question.choices.map(choice => {\n                        return(\n                                <button\n                                    type=\"submit\"\n                                    onClick={this.handleChange}\n                                    name={question.id}\n                                    value={choice.id}\n                                    className=\"answer-btn\"\n                                >\n                                    {choice.text}\n                                </button>\n                        )\n                    })}\n                    <img\n                        src={HintButton}\n                        alt=\"\"\n                        className=\"hint-btn\"\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n// End of Question Text/Answer Button Component\n\n\n// Results Component\nclass Scorebox extends Component {\n    render(){\n        return(\n            <div className=\"question-count-container\">\n                Question {this.props.current} out of {this.props.total}\n            </div>\n        )\n    }\n}\n\nclass Results extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            overallScore: 0\n        }\n    }\n\n    overallScore = () => {\n        this.setState((prevState, props) => ({\n            overallScore: (prevState.overallScore + props.score) * 50\n        }))\n    }\n\n    render(){\n        var message = 'You passed the quiz!';\n        var link = <Link to=\"/game-menu\">Back to Menu</Link>\n\n\n        return(\n            <div className=\"results-absolute\">\n                <div className=\"results-container\">\n                    <div className=\"results-cont results-img\">\n                        <img src={UserIcon} alt=\"\"/>\n                    </div>\n\n                    <div className=\"results-cont results-text\">\n                        <h3>+{this.props.score} points!</h3>\n                        <h4>Congratulations!</h4>\n                    </div>\n\n                    <div className=\"results-cont results-link\">\n                        <Link\n                            to=\"/game-menu\"\n                            className=\"quiz-return-btn\"\n                            onClick={this.overallScore}\n                        >\n                            <h4>OK</h4>\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n// End of Results Component\n\n// Final Quiz Format Section\nexport default class QuizFormat extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            score: 0,\n            current: 1,\n            overallScore: 0\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(choice){\n        this.setState((prevState, props) => ({\n            current: prevState.current + 1,\n            score: choice === props.questions[prevState.current - 1].correct ? prevState.score + 50 : prevState.score,\n        }));\n        console.log(this.state.overallScore)\n    }\n\n    render () {\n        const questions = this.props.questions;\n\n        return (\n            <div className=\"quiz-container\">\n                <Back id=\"backButton\"/>\n                {this.state.current > questions.length &&\n                    <Results\n                        total={questions.length}\n                        score={this.state.overallScore + this.state.score}\n                    />\n                }\n\n                {this.state.current <= questions.length &&\n                    <Scorebox\n                        total={questions.length}\n                        current={this.state.current}\n                        score={this.state.score}\n                    />\n                }\n\n                {this.state.current <= questions.length &&\n                    <Question\n                        question={questions[this.state.current - 1]}\n                        onChoiceChange={this.handleChange}\n                    />\n                }\n\n            </div>\n        );\n    }\n}\n// End of Final Quiz Format Section\n"]},"metadata":{},"sourceType":"module"}