{"ast":null,"code":"// import React, {Component} from 'react';\n//\n//\n// class MapTest extends Component {\n//     constructor (props) {\n//         super(props);\n//         this.state = {\n//             currentLocation: {\n//                 latitude: null,\n//                 longitude: null,\n//             },\n//             isMarkerShown: false\n//         };\n//         this.getLocation = this.getLocation.bind(this);\n//     }\n//\n//     componentWillUpdate () {\n//         this.getLocation()\n//     }\n//\n//     componentDidMount () {\n//         this.delayedShowMarker()\n//     }\n//\n//     delayedShowMarker = () => {\n//         setTimeout(() => {\n//             this.getLocation()\n//             this.setState({ isMarkerShown: true })\n//         }, 5000)\n//     }\n//\n//     handleMarkerClick = () => {\n//         this.setState({ isMarkerShown: false })\n//         this.delayedShowMarker()\n//     }\n//\n//     getLocation = () => {\n//         if(navigator.geolocation) {\n//             navigator.geolocation.getCurrentPosition(\n//                 position => {\n//                     console.log(position.coords);\n//                     this.setState(prevState => ({\n//                         currentLocation: {\n//                             ...prevState.currentLatLng,\n//                             lat: position.coords.latitude,\n//                             lng: position.coords.longitude\n//                         }\n//                     }))\n//                 }\n//             )\n//         } else {\n//             console.log(\"error\")\n//         }\n//     }\n//     // getLocation() {\n//     //     if(navigator.geolocation) {\n//     //         navigator.geolocation.getCurrentPosition(this.getCoordinates, this.handleLocationError);\n//     //     } else {\n//     //         alert(\"Geolocation not supported by this browser\");\n//     //     }\n//     // }\n//\n//     // getCoordinates(position) {\n//     //     this.setState({\n//     //         latitude: position.coords.latitude,\n//     //         longitude: position.coords.longitude\n//     //     })\n//     // }\n//     //\n//     // //Error Handling\n//     // handleLocationError(error) {\n//     //     switch(error.code){\n//     //         case error.PERMISSION_DENIED:\n//     //             alert(\"Denied request for Geolocation\")\n//     //             break;\n//     //         case error.POSITION_UNAVAILABLE:\n//     //             alert(\"Location info is unavailable\")\n//     //             break;\n//     //         case error.TIMEOUT:\n//     //             alert(\"Location request has timed out\")\n//     //             break;\n//     //         case error.UNKNOWN_ERR:\n//     //             alert(\"An unknown error occurred\")\n//     //             break;\n//     //         default:\n//     //             alert(\"An unknown error occurred\")\n//     //     }\n//     // }\n//\n//\n//     render () {\n//         return (\n//             <div>\n//                 {/*<h2>React Geolocation Example</h2>*/}\n//                 {/*<button onClick={this.getLocation}>Get Coordinates</button>*/}\n//                 {/*<h4>HTML5 Coordinates</h4>*/}\n//                 {/*<p>Latitude: {this.state.latitude}</p>*/}\n//                 {/*<p>Longitude: {this.state.longitude}</p>*/}\n//                 {/*<p>Address: {this.state.userAddress}</p>*/}\n//                 {/*{this.state.latitude && this.state.longitude ?*/}\n//                 {/*    <img src={`https://maps.googleapis.com/maps/api/staticmap?center=${this.state.latitude},${this.state.longitude}&zoom=14&size=400x300&sensor=false&markers=color:red%7C${this.state.latitude},${this.state.longitude}&key=${process.env.REACT_APP_GOOGLE_KEY}`} alt=\"\"/>*/}\n//                 {/*    :*/}\n//                 {/*    null*/}\n//                 {/*}*/}\n//             </div>\n//         );\n//     }\n// }\n//\n// export default MapTest;","map":{"version":3,"sources":["/Users/ryandawkes/Desktop/aero-frontend/src/components/mapTest/mapTest.js"],"names":[],"mappingssourcesContent":["// import React, {Component} from 'react';\n//\n//\n// class MapTest extends Component {\n//     constructor (props) {\n//         super(props);\n//         this.state = {\n//             currentLocation: {\n//                 latitude: null,\n//                 longitude: null,\n//             },\n//             isMarkerShown: false\n//         };\n//         this.getLocation = this.getLocation.bind(this);\n//     }\n//\n//     componentWillUpdate () {\n//         this.getLocation()\n//     }\n//\n//     componentDidMount () {\n//         this.delayedShowMarker()\n//     }\n//\n//     delayedShowMarker = () => {\n//         setTimeout(() => {\n//             this.getLocation()\n//             this.setState({ isMarkerShown: true })\n//         }, 5000)\n//     }\n//\n//     handleMarkerClick = () => {\n//         this.setState({ isMarkerShown: false })\n//         this.delayedShowMarker()\n//     }\n//\n//     getLocation = () => {\n//         if(navigator.geolocation) {\n//             navigator.geolocation.getCurrentPosition(\n//                 position => {\n//                     console.log(position.coords);\n//                     this.setState(prevState => ({\n//                         currentLocation: {\n//                             ...prevState.currentLatLng,\n//                             lat: position.coords.latitude,\n//                             lng: position.coords.longitude\n//                         }\n//                     }))\n//                 }\n//             )\n//         } else {\n//             console.log(\"error\")\n//         }\n//     }\n//     // getLocation() {\n//     //     if(navigator.geolocation) {\n//     //         navigator.geolocation.getCurrentPosition(this.getCoordinates, this.handleLocationError);\n//     //     } else {\n//     //         alert(\"Geolocation not supported by this browser\");\n//     //     }\n//     // }\n//\n//     // getCoordinates(position) {\n//     //     this.setState({\n//     //         latitude: position.coords.latitude,\n//     //         longitude: position.coords.longitude\n//     //     })\n//     // }\n//     //\n//     // //Error Handling\n//     // handleLocationError(error) {\n//     //     switch(error.code){\n//     //         case error.PERMISSION_DENIED:\n//     //             alert(\"Denied request for Geolocation\")\n//     //             break;\n//     //         case error.POSITION_UNAVAILABLE:\n//     //             alert(\"Location info is unavailable\")\n//     //             break;\n//     //         case error.TIMEOUT:\n//     //             alert(\"Location request has timed out\")\n//     //             break;\n//     //         case error.UNKNOWN_ERR:\n//     //             alert(\"An unknown error occurred\")\n//     //             break;\n//     //         default:\n//     //             alert(\"An unknown error occurred\")\n//     //     }\n//     // }\n//\n//\n//     render () {\n//         return (\n//             <div>\n//                 {/*<h2>React Geolocation Example</h2>*/}\n//                 {/*<button onClick={this.getLocation}>Get Coordinates</button>*/}\n//                 {/*<h4>HTML5 Coordinates</h4>*/}\n//                 {/*<p>Latitude: {this.state.latitude}</p>*/}\n//                 {/*<p>Longitude: {this.state.longitude}</p>*/}\n//                 {/*<p>Address: {this.state.userAddress}</p>*/}\n//                 {/*{this.state.latitude && this.state.longitude ?*/}\n//                 {/*    <img src={`https://maps.googleapis.com/maps/api/staticmap?center=${this.state.latitude},${this.state.longitude}&zoom=14&size=400x300&sensor=false&markers=color:red%7C${this.state.latitude},${this.state.longitude}&key=${process.env.REACT_APP_GOOGLE_KEY}`} alt=\"\"/>*/}\n//                 {/*    :*/}\n//                 {/*    null*/}\n//                 {/*}*/}\n//             </div>\n//         );\n//     }\n// }\n//\n// export default MapTest;\n"]},"metadata":{},"sourceType":"module"}