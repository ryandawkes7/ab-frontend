{"ast":null,"code":"var _jsxFileName = \"/Users/ryandawkes/Desktop/aero-frontend/src/components/mapTestTwo/mapComponent.js\";\nimport React, { Component } from 'react';\nimport { compose, withProps } from 'recompose';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from 'react-google-maps';\nconst MapComponent = compose(withProps({\n  googleMapURL: `https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_GOOGLE_KEY}`,\n  loadingElement: /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 25\n    }\n  }),\n  containerElement: /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: `400px`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 27\n    }\n  }),\n  mapElement: /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 21\n    }\n  })\n}), withScriptjs, withGoogleMap)(props => /*#__PURE__*/React.createElement(GoogleMap, {\n  defaultZoom: 8,\n  center: {\n    lat: props.currentLocation.lat,\n    lng: props.currentLocation.lng\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }\n}, props.isMarkerShown && /*#__PURE__*/React.createElement(Marker, {\n  position: {\n    lat: props.currentLocation.lat,\n    lng: props.currentLocation.lng\n  },\n  onClick: props.onMarkerClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 33\n  }\n})));\nexport default MapComponent;","map":{"version":3,"sources":["/Users/ryandawkes/Desktop/aero-frontend/src/components/mapTestTwo/mapComponent.js"],"names":["React","Component","compose","withProps","withScriptjs","withGoogleMap","GoogleMap","Marker","MapComponent","googleMapURL","process","env","REACT_APP_GOOGLE_KEY","loadingElement","height","containerElement","mapElement","props","lat","currentLocation","lng","isMarkerShown","onMarkerClick"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,WAAnC;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,SAAtC,EAAiDC,MAAjD,QAA+D,mBAA/D;AAEA,MAAMC,YAAY,GAAGN,OAAO,CACxBC,SAAS,CAAC;AACNM,EAAAA,YAAY,EAAG,yFAAwFC,OAAO,CAACC,GAAR,CAAYC,oBAAqB,EADlI;AAENC,EAAAA,cAAc,eAAE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAG;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFV;AAGNC,EAAAA,gBAAgB,eAAE;AAAK,IAAA,KAAK,EAAE;AAAED,MAAAA,MAAM,EAAG;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHZ;AAINE,EAAAA,UAAU,eAAE;AAAK,IAAA,KAAK,EAAE;AAAEF,MAAAA,MAAM,EAAG;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJN,CAAD,CADe,EAOxBV,YAPwB,EAQxBC,aARwB,CAAP,CASlBY,KAAD,iBACE,oBAAC,SAAD;AACI,EAAA,WAAW,EAAE,CADjB;AAEI,EAAA,MAAM,EAAE;AAAEC,IAAAA,GAAG,EAAED,KAAK,CAACE,eAAN,CAAsBD,GAA7B;AAAkCE,IAAAA,GAAG,EAAEH,KAAK,CAACE,eAAN,CAAsBC;AAA7D,GAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAIKH,KAAK,CAACI,aAAN,iBAAuB,oBAAC,MAAD;AAAQ,EAAA,QAAQ,EAAE;AAAEH,IAAAA,GAAG,EAAED,KAAK,CAACE,eAAN,CAAsBD,GAA7B;AAAkCE,IAAAA,GAAG,EAAEH,KAAK,CAACE,eAAN,CAAsBC;AAA7D,GAAlB;AAAsF,EAAA,OAAO,EAAEH,KAAK,CAACK,aAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJ5B,CAViB,CAArB;AAkBA,eAAed,YAAf","sourcesContent":["import React, { Component } from 'react'\nimport { compose, withProps } from 'recompose'\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from 'react-google-maps'\n\nconst MapComponent = compose(\n    withProps({\n        googleMapURL: `https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_GOOGLE_KEY}`,\n        loadingElement: <div style={{ height: `100%` }} />,\n        containerElement: <div style={{ height: `400px` }} />,\n        mapElement: <div style={{ height: `100%` }} />,\n    }),\n    withScriptjs,\n    withGoogleMap\n)((props) =>\n    <GoogleMap\n        defaultZoom={8}\n        center={{ lat: props.currentLocation.lat, lng: props.currentLocation.lng }}\n    >\n        {props.isMarkerShown && <Marker position={{ lat: props.currentLocation.lat, lng: props.currentLocation.lng }} onClick={props.onMarkerClick} />}\n    </GoogleMap>\n)\n\nexport default MapComponent\n"]},"metadata":{},"sourceType":"module"}