{"ast":null,"code":"var _jsxFileName = \"/Users/ryandawkes/Desktop/aero-frontend/src/components/map/map.jsx\";\nimport React, { useState } from 'react';\nimport './map.css';\nimport GoogleMapReact from 'google-map-react';\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow } from 'react-google-maps';\nimport GameIcon from \"./assets/game-icon.svg\";\nimport QuizIcon from \"./assets/quiz-icon.svg\";\nimport { Icon } from '@iconify/react';\nimport locationIcon from '@iconify/icons-mdi/map-marker'; // const LocationPin = ({ text }) => (\n//     <div className=\"pin\">\n//         <Icon icon={locationIcon} className=\"pin-icon\"/>\n//         <p className=\"pin-text\">{text}</p>\n//     </div>\n// )\n//\n// const Map = ({ location, zoomLevel }) => (\n//     <div className=\"map\">\n//     </div>\n// )\n// Impromptu JSON data for locations\n\nconst Interaction = {\n  locations: [{\n    \"id\": 1,\n    \"type\": \"Quiz\",\n    \"coordinates\": [51.523147, -2.577680],\n    \"description\": \"Test Me!\"\n  }, {\n    \"id\": 2,\n    \"type\": \"Fact\",\n    \"coordinates\": [51.523160, -2.578440],\n    \"description\": \"Learn!\"\n  }, {\n    \"id\": 3,\n    \"type\": \"Game\",\n    \"coordinates\": [51.523531, -2.578289],\n    \"description\": \"Let's Play!\"\n  }]\n};\n\nfunction UnwrappedMap() {\n  const [selectedInteraction, setSelectedInteraction] = useState(null);\n  return /*#__PURE__*/React.createElement(GoogleMap, {\n    defaultZoom: 20,\n    defaultCenter: {\n      lat: 51.523214,\n      lng: -2.578207\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, Interaction.locations.map(interactions => /*#__PURE__*/React.createElement(Marker, {\n    key: interactions.id,\n    position: {\n      lat: interactions.coordinates[0],\n      lng: interactions.coordinates[1]\n    },\n    onClick: () => {\n      setSelectedInteraction(interactions);\n    },\n    icon: QuizIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  })), selectedInteraction && /*#__PURE__*/React.createElement(InfoWindow, {\n    position: {\n      lat: selectedInteraction.coordinates[0],\n      lng: selectedInteraction.coordinates[1]\n    },\n    onCloseClick: () => {\n      setSelectedInteraction(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, selectedInteraction.type), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, selectedInteraction.description))));\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(UnwrappedMap));\nexport default function Map() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      height: '100%',\n      zIndex: '-2'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(WrappedMap, {\n    googleMapURL: `https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_GOOGLE_KEY}`,\n    loadingElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 34\n      }\n    }),\n    containerElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 36\n      }\n    }),\n    mapElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 30\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/ryandawkes/Desktop/aero-frontend/src/components/map/map.jsx"],"names":["React","useState","GoogleMapReact","GoogleMap","withScriptjs","withGoogleMap","Marker","InfoWindow","Icon","locationIcon","Interaction","locations","UnwrappedMap","selectedInteraction","setSelectedInteraction","lat","lng","map","interactions","id","coordinates","QuizIcon","type","description","WrappedMap","Map","width","height","zIndex","process","env","REACT_APP_GOOGLE_KEY"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './map.css';\n\nimport GoogleMapReact from 'google-map-react';\nimport {\n    GoogleMap,\n    withScriptjs,\n    withGoogleMap,\n    Marker,\n    InfoWindow\n} from 'react-google-maps';\n\nimport GameIcon from './assets/game-icon.svg';\nimport QuizIcon from './assets/quiz-icon.svg';\n\nimport { Icon } from '@iconify/react';\nimport locationIcon from '@iconify/icons-mdi/map-marker'\n\n// const LocationPin = ({ text }) => (\n//     <div className=\"pin\">\n//         <Icon icon={locationIcon} className=\"pin-icon\"/>\n//         <p className=\"pin-text\">{text}</p>\n//     </div>\n// )\n//\n// const Map = ({ location, zoomLevel }) => (\n//     <div className=\"map\">\n//     </div>\n// )\n\n// Impromptu JSON data for locations\nconst Interaction = {\n    locations: [\n        {\n            \"id\": 1,\n            \"type\": \"Quiz\",\n            \"coordinates\": [51.523147, -2.577680],\n            \"description\": \"Test Me!\"\n        },\n        {\n            \"id\": 2,\n            \"type\": \"Fact\",\n            \"coordinates\": [51.523160, -2.578440],\n            \"description\": \"Learn!\"\n        },\n        {\n            \"id\": 3,\n            \"type\": \"Game\",\n            \"coordinates\": [51.523531, -2.578289],\n            \"description\": \"Let's Play!\"\n        }\n    ]\n}\n\nfunction UnwrappedMap() {\n\n    const [selectedInteraction, setSelectedInteraction] = useState(null);\n\n    return (\n        <GoogleMap\n            defaultZoom={20}\n            defaultCenter={{lat: 51.523214, lng: -2.578207}}\n        >\n            {Interaction.locations.map((interactions) => (\n                <Marker\n                    key={interactions.id}\n                    position={{\n                        lat: interactions.coordinates[0],\n                        lng: interactions.coordinates[1]\n                    }}\n                    onClick={() => {\n                        setSelectedInteraction(interactions);\n                    }}\n                    icon={QuizIcon\n                    }\n                />\n            ))}\n\n            {selectedInteraction && (\n                <InfoWindow\n                    position={{\n                        lat: selectedInteraction.coordinates[0],\n                        lng: selectedInteraction.coordinates[1]\n                    }}\n                    onCloseClick={() => {\n                        setSelectedInteraction(null);\n                    }}\n                >\n                    <div>\n                        <h2>{ selectedInteraction.type }</h2>\n                        <p>{  selectedInteraction.description }</p>\n                    </div>\n                </InfoWindow>\n            )}\n        </GoogleMap>\n    )\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(UnwrappedMap));\n\nexport default function Map() {\n    return (\n        <div style={{width: '100%', height: '100%', zIndex: '-2'}}>\n            <WrappedMap\n                googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_GOOGLE_KEY}`}\n                loadingElement={ <div style={{height: '100%'}} /> }\n                containerElement={ <div style={{height: '100%'}} />}\n                mapElement={ <div style={{height: '100%'}} />}\n            />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}