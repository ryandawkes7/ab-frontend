{"ast":null,"code":"// import React, { Component, useState } from 'react'\n// import {withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow} from 'react-google-maps'\n// import QuizIcon from \"../map/assets/quiz-icon.svg\";\n// import FactIcon from \"../map/assets/picture-icon.svg\";\n// import GameIcon from \"../map/assets/game-icon.svg\";\n// import {compose, withProps} from \"recompose\";\n// import {Link} from \"react-router-dom\";\n//\n// const UnwrappedMap = compose(\n//     withProps({\n//         googleMapURL: `https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_GOOGLE_KEY}`,\n//         loadingElement: <div style={{ height: `100%` }} />,\n//         containerElement: <div style={{ height: `100vh` }} />,\n//         mapElement: <div style={{ height: `100%` }} />,\n//     }),\n//     withScriptjs,\n//     withGoogleMap\n// )((props) =>\n//     <GoogleMap\n//         defaultZoom={25}\n//         center={{ lat: props.currentLocation.lat, lng: props.currentLocation.lng }}\n//     >\n//         {props.isMarkerShown &&\n//         <Marker\n//             position={{ lat: props.currentLocation.lat, lng: props.currentLocation.lng }}\n//             onClick={props.onMarkerClick}\n//         />\n//         }\n//         {MapInteractions.locations.map(clickableInteractions => (\n//             <Marker\n//                 key={clickableInteractions.id}\n//                 position={{\n//                     lat: clickableInteractions.coordinates[0],\n//                     lng: clickableInteractions.coordinates[1]\n//                 }}\n//                 onClick={() => {\n//                     props.setSelectedInteraction(clickableInteractions);\n//                 }}\n//                 icon={\n//                     clickableInteractions.type === \"Quiz\" && (QuizIcon)\n//                     ||\n//                     clickableInteractions.type === \"Fact\" && (FactIcon)\n//                     ||\n//                     clickableInteractions.type === \"Game\" && (GameIcon)\n//                 }\n//             />\n//         ))}\n//         {\n//             props.selectedInteraction === MapInteractions.locations[0] && (\n//                 <div className=\"map-info-window\">\n//                     <InfoWindow\n//                         position={{\n//                             lat: props.selectedInteraction.coordinates[0] + 0.000065,\n//                             lng: props.selectedInteraction.coordinates[1]\n//                         }}\n//                         onCloseClick={() => {\n//                             props.setSelectedInteraction(null);\n//                         }}\n//                     >\n//                         <div className=\"map-button\">\n//                             <h2>{ props.selectedInteraction.type }</h2>\n//                             <Link to=\"/quiz\" className=\"map-basic-btn map-quiz-btn\">\n//                                 <h3>{props.selectedInteraction.description}</h3>\n//                             </Link>\n//                         </div>\n//                     </InfoWindow>\n//                 </div>\n//             )\n//         }\n//\n//     </GoogleMap>\n// )\n//\n// const MapInteractions = {\n//     locations: [\n//         {\n//             \"id\": 1,\n//             \"type\": \"Quiz\",\n//             \"coordinates\": [51.523147, -2.577680],\n//             \"description\": \"Test Me!\"\n//         },\n//         {\n//             \"id\": 2,\n//             \"type\": \"Fact\",\n//             \"coordinates\": [51.523160, -2.578440],\n//             \"description\": \"Learn!\"\n//         },\n//         {\n//             \"id\": 3,\n//             \"type\": \"Game\",\n//             \"coordinates\": [51.523531, -2.578289],\n//             \"description\": \"Let's Play!\"\n//         }\n//     ]\n// }\n//\n// class MapTest extends Component {\n//\n//\n//     constructor(props){\n//         super(props)\n//         this.state = {\n//             currentLatLng: {\n//                 lat: 0,\n//                 lng: 0\n//             },\n//             isMarkerShown: false,\n//             selectedInteraction: null,\n//             setSelectedInteraction: null\n//         }\n//     }\n//\n//     componentWillUpdate(){\n//         this.getGeoLocation()\n//     }\n//\n//     componentDidMount() {\n//         this.delayedShowMarker()\n//     }\n//\n//     delayedShowMarker = () => {\n//         setTimeout(() => {\n//             this.getGeoLocation()\n//             this.setState({ isMarkerShown: true })\n//         }, 5000)\n//     }\n//\n//     handleMarkerClick = () => {\n//         this.setState({ isMarkerShown: false })\n//         this.delayedShowMarker()\n//     }\n//\n//     getGeoLocation = () => {\n//         if (navigator.geolocation) {\n//             navigator.geolocation.getCurrentPosition(\n//                 position => {\n//                     console.log(position.coords);\n//                     this.setState(prevState => ({\n//                         currentLatLng: {\n//                             ...prevState.currentLatLng,\n//                             lat: position.coords.latitude,\n//                             lng: position.coords.longitude\n//                         }\n//                     }))\n//                 }\n//             )\n//         } else {\n//             console.log(\"error\")\n//         }\n//     }\n//\n//     render() {\n//         return (\n//             <UnwrappedMap\n//                 isMarkerShown={this.state.isMarkerShown}\n//                 onMarkerClick={this.handleMarkerClick}\n//                 currentLocation={this.state.currentLatLng}\n//             />\n//         )\n//     }\n// }\n//\n// export default MapTest;","map":{"version":3,"sources":["/Users/ryandawkes/Desktop/aero-frontend/src/components/mapTestTwo/mapTest.js"],"names":[],"mappingssourcesContent":["// import React, { Component, useState } from 'react'\n// import {withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow} from 'react-google-maps'\n// import QuizIcon from \"../map/assets/quiz-icon.svg\";\n// import FactIcon from \"../map/assets/picture-icon.svg\";\n// import GameIcon from \"../map/assets/game-icon.svg\";\n// import {compose, withProps} from \"recompose\";\n// import {Link} from \"react-router-dom\";\n//\n// const UnwrappedMap = compose(\n//     withProps({\n//         googleMapURL: `https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_GOOGLE_KEY}`,\n//         loadingElement: <div style={{ height: `100%` }} />,\n//         containerElement: <div style={{ height: `100vh` }} />,\n//         mapElement: <div style={{ height: `100%` }} />,\n//     }),\n//     withScriptjs,\n//     withGoogleMap\n// )((props) =>\n//     <GoogleMap\n//         defaultZoom={25}\n//         center={{ lat: props.currentLocation.lat, lng: props.currentLocation.lng }}\n//     >\n//         {props.isMarkerShown &&\n//         <Marker\n//             position={{ lat: props.currentLocation.lat, lng: props.currentLocation.lng }}\n//             onClick={props.onMarkerClick}\n//         />\n//         }\n//         {MapInteractions.locations.map(clickableInteractions => (\n//             <Marker\n//                 key={clickableInteractions.id}\n//                 position={{\n//                     lat: clickableInteractions.coordinates[0],\n//                     lng: clickableInteractions.coordinates[1]\n//                 }}\n//                 onClick={() => {\n//                     props.setSelectedInteraction(clickableInteractions);\n//                 }}\n//                 icon={\n//                     clickableInteractions.type === \"Quiz\" && (QuizIcon)\n//                     ||\n//                     clickableInteractions.type === \"Fact\" && (FactIcon)\n//                     ||\n//                     clickableInteractions.type === \"Game\" && (GameIcon)\n//                 }\n//             />\n//         ))}\n//         {\n//             props.selectedInteraction === MapInteractions.locations[0] && (\n//                 <div className=\"map-info-window\">\n//                     <InfoWindow\n//                         position={{\n//                             lat: props.selectedInteraction.coordinates[0] + 0.000065,\n//                             lng: props.selectedInteraction.coordinates[1]\n//                         }}\n//                         onCloseClick={() => {\n//                             props.setSelectedInteraction(null);\n//                         }}\n//                     >\n//                         <div className=\"map-button\">\n//                             <h2>{ props.selectedInteraction.type }</h2>\n//                             <Link to=\"/quiz\" className=\"map-basic-btn map-quiz-btn\">\n//                                 <h3>{props.selectedInteraction.description}</h3>\n//                             </Link>\n//                         </div>\n//                     </InfoWindow>\n//                 </div>\n//             )\n//         }\n//\n//     </GoogleMap>\n// )\n//\n// const MapInteractions = {\n//     locations: [\n//         {\n//             \"id\": 1,\n//             \"type\": \"Quiz\",\n//             \"coordinates\": [51.523147, -2.577680],\n//             \"description\": \"Test Me!\"\n//         },\n//         {\n//             \"id\": 2,\n//             \"type\": \"Fact\",\n//             \"coordinates\": [51.523160, -2.578440],\n//             \"description\": \"Learn!\"\n//         },\n//         {\n//             \"id\": 3,\n//             \"type\": \"Game\",\n//             \"coordinates\": [51.523531, -2.578289],\n//             \"description\": \"Let's Play!\"\n//         }\n//     ]\n// }\n//\n// class MapTest extends Component {\n//\n//\n//     constructor(props){\n//         super(props)\n//         this.state = {\n//             currentLatLng: {\n//                 lat: 0,\n//                 lng: 0\n//             },\n//             isMarkerShown: false,\n//             selectedInteraction: null,\n//             setSelectedInteraction: null\n//         }\n//     }\n//\n//     componentWillUpdate(){\n//         this.getGeoLocation()\n//     }\n//\n//     componentDidMount() {\n//         this.delayedShowMarker()\n//     }\n//\n//     delayedShowMarker = () => {\n//         setTimeout(() => {\n//             this.getGeoLocation()\n//             this.setState({ isMarkerShown: true })\n//         }, 5000)\n//     }\n//\n//     handleMarkerClick = () => {\n//         this.setState({ isMarkerShown: false })\n//         this.delayedShowMarker()\n//     }\n//\n//     getGeoLocation = () => {\n//         if (navigator.geolocation) {\n//             navigator.geolocation.getCurrentPosition(\n//                 position => {\n//                     console.log(position.coords);\n//                     this.setState(prevState => ({\n//                         currentLatLng: {\n//                             ...prevState.currentLatLng,\n//                             lat: position.coords.latitude,\n//                             lng: position.coords.longitude\n//                         }\n//                     }))\n//                 }\n//             )\n//         } else {\n//             console.log(\"error\")\n//         }\n//     }\n//\n//     render() {\n//         return (\n//             <UnwrappedMap\n//                 isMarkerShown={this.state.isMarkerShown}\n//                 onMarkerClick={this.handleMarkerClick}\n//                 currentLocation={this.state.currentLatLng}\n//             />\n//         )\n//     }\n// }\n//\n// export default MapTest;\n"]},"metadata":{},"sourceType":"module"}