{"ast":null,"code":"var _jsxFileName = \"/Users/ryandawkes/Desktop/aero-frontend/src/components/map/map.jsx\";\nimport React, { Component, useState } from 'react';\nimport './map.css';\nimport { Link } from 'react-router-dom';\nimport GoogleMapReact from 'google-map-react';\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow } from 'react-google-maps';\nimport GameIcon from \"./assets/game-icon.svg\";\nimport QuizIcon from \"./assets/quiz-icon.svg\";\nimport FactIcon from \"./assets/fact-icon.svg\";\nimport { Icon } from '@iconify/react';\nimport locationIcon from '@iconify/icons-mdi/map-marker'; // const LocationPin = ({ text }) => (\n//     <div className=\"pin\">\n//         <Icon icon={locationIcon} className=\"pin-icon\"/>\n//         <p className=\"pin-text\">{text}</p>\n//     </div>\n// )\n//\n// const Map = ({ location, zoomLevel }) => (\n//     <div className=\"map\">\n//     </div>\n// )\n// Impromptu JSON data for locations\n\nconst Interaction = {\n  locations: [{\n    \"id\": 1,\n    \"type\": \"Quiz\",\n    \"coordinates\": [51.523147, -2.577680],\n    \"description\": \"Test Me!\"\n  }, {\n    \"id\": 2,\n    \"type\": \"Fact\",\n    \"coordinates\": [51.523160, -2.578440],\n    \"description\": \"Learn!\"\n  }, {\n    \"id\": 3,\n    \"type\": \"Game\",\n    \"coordinates\": [51.523531, -2.578289],\n    \"description\": \"Let's Play!\"\n  }]\n};\n\nclass UnwrappedMap extends Component() {\n  render() {\n    const [selectedInteraction, setSelectedInteraction] = useState(null);\n    return /*#__PURE__*/React.createElement(GoogleMap, {\n      defaultZoom: 20,\n      defaultCenter: {\n        lat: 51.523214,\n        lng: -2.578207\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, Interaction.locations.map(interactions => /*#__PURE__*/React.createElement(Marker, {\n      key: interactions.id,\n      position: {\n        lat: interactions.coordinates[0],\n        lng: interactions.coordinates[1]\n      },\n      onClick: () => {\n        setSelectedInteraction(interactions);\n      },\n      icon: interactions.type === \"Quiz\" && QuizIcon || interactions.type === \"Fact\" && FactIcon || interactions.type === \"Game\" && GameIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    })), selectedInteraction && /*#__PURE__*/React.createElement(InfoWindow, {\n      position: {\n        lat: selectedInteraction.coordinates[0],\n        lng: selectedInteraction.coordinates[1]\n      },\n      onCloseClick: () => {\n        setSelectedInteraction(null);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 29\n      }\n    }, selectedInteraction.type), /*#__PURE__*/React.createElement(Link, {\n      to: \"/quiz\",\n      className: \"basic-btn quiz-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        margin: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 33\n      }\n    }, selectedInteraction.description)))));\n  }\n\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(UnwrappedMap));\nexport default function Map() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      height: '100%',\n      zIndex: '-2'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(WrappedMap, {\n    googleMapURL: `https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_GOOGLE_KEY}`,\n    loadingElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 34\n      }\n    }),\n    containerElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 36\n      }\n    }),\n    mapElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 30\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/ryandawkes/Desktop/aero-frontend/src/components/map/map.jsx"],"names":["React","Component","useState","Link","GoogleMapReact","GoogleMap","withScriptjs","withGoogleMap","Marker","InfoWindow","Icon","locationIcon","Interaction","locations","UnwrappedMap","render","selectedInteraction","setSelectedInteraction","lat","lng","map","interactions","id","coordinates","type","QuizIcon","FactIcon","GameIcon","margin","description","WrappedMap","Map","width","height","zIndex","process","env","REACT_APP_GOOGLE_KEY"],"mappings":"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","sourcesContent":["import React, {Component, useState} from 'react';\nimport './map.css';\nimport { Link } from 'react-router-dom';\n\nimport GoogleMapReact from 'google-map-react';\nimport {\n    GoogleMap,\n    withScriptjs,\n    withGoogleMap,\n    Marker,\n    InfoWindow\n} from 'react-google-maps';\n\nimport GameIcon from './assets/game-icon.svg';\nimport QuizIcon from './assets/quiz-icon.svg';\nimport FactIcon from './assets/fact-icon.svg';\n\nimport { Icon } from '@iconify/react';\nimport locationIcon from '@iconify/icons-mdi/map-marker'\n\n// const LocationPin = ({ text }) => (\n//     <div className=\"pin\">\n//         <Icon icon={locationIcon} className=\"pin-icon\"/>\n//         <p className=\"pin-text\">{text}</p>\n//     </div>\n// )\n//\n// const Map = ({ location, zoomLevel }) => (\n//     <div className=\"map\">\n//     </div>\n// )\n\n// Impromptu JSON data for locations\nconst Interaction = {\n    locations: [\n        {\n            \"id\": 1,\n            \"type\": \"Quiz\",\n            \"coordinates\": [51.523147, -2.577680],\n            \"description\": \"Test Me!\"\n        },\n        {\n            \"id\": 2,\n            \"type\": \"Fact\",\n            \"coordinates\": [51.523160, -2.578440],\n            \"description\": \"Learn!\"\n        },\n        {\n            \"id\": 3,\n            \"type\": \"Game\",\n            \"coordinates\": [51.523531, -2.578289],\n            \"description\": \"Let's Play!\"\n        }\n    ]\n}\n\nclass UnwrappedMap extends Component() {\n\n    render() {\n        const [selectedInteraction, setSelectedInteraction] = useState(null);\n\n        return (\n            <GoogleMap\n                defaultZoom={ 20 }\n                defaultCenter={ {lat: 51.523214, lng: -2.578207} }\n            >\n                { Interaction.locations.map((interactions) => (\n                    <Marker\n                        key={ interactions.id }\n                        position={ {\n                            lat: interactions.coordinates[0],\n                            lng: interactions.coordinates[1]\n                        } }\n                        onClick={ () => {\n                            setSelectedInteraction(interactions);\n                        } }\n                        icon={\n                            interactions.type === \"Quiz\" && (\n                                QuizIcon\n                            ) ||\n                            interactions.type === \"Fact\" && (\n                                FactIcon\n                            ) ||\n                            interactions.type === \"Game\" && (\n                                GameIcon\n                            )\n                        }\n                    />\n                )) }\n\n                { selectedInteraction && (\n                    <InfoWindow\n                        position={ {\n                            lat: selectedInteraction.coordinates[0],\n                            lng: selectedInteraction.coordinates[1]\n                        } }\n                        onCloseClick={ () => {\n                            setSelectedInteraction(null);\n                        } }\n                    >\n                        <div>\n                            <h2>{ selectedInteraction.type }</h2>\n                            <Link to=\"/quiz\" className=\"basic-btn quiz-btn\">\n                                <h3 style={ {margin: 'auto'} }>{ selectedInteraction.description }</h3>\n                            </Link>\n                        </div>\n                    </InfoWindow>\n                ) }\n            </GoogleMap>\n        )\n    }\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(UnwrappedMap));\n\nexport default function Map() {\n    return (\n        <div style={{width: '100%', height: '100%', zIndex: '-2'}}>\n            <WrappedMap\n                googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_GOOGLE_KEY}`}\n                loadingElement={ <div style={{height: '100%'}} /> }\n                containerElement={ <div style={{height: '100%'}} />}\n                mapElement={ <div style={{height: '100%'}} />}\n            />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}